

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed May 12 16:35:54 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0019                     _TXREG	set	25
   213  001E                     _ADRESH	set	30
   214  0008                     _PORTDbits	set	8
   215  0001                     _TMR0	set	1
   216  0018                     _RCSTAbits	set	24
   217  0008                     _PORTD	set	8
   218  0007                     _PORTC	set	7
   219  0006                     _PORTB	set	6
   220  0005                     _PORTA	set	5
   221  000E                     _TMR1L	set	14
   222  000F                     _TMR1H	set	15
   223  001A                     _RCREG	set	26
   224  000C                     _PIR1bits	set	12
   225  0009                     _PORTE	set	9
   226  0010                     _T1CONbits	set	16
   227  0006                     _PORTBbits	set	6
   228  001F                     _ADCON0bits	set	31
   229  000B                     _INTCONbits	set	11
   230  0081                     _OPTION_REGbits	set	129
   231  0098                     _TXSTAbits	set	152
   232  0099                     _SPBRG	set	153
   233  009F                     _ADCON1bits	set	159
   234  0096                     _IOCBbits	set	150
   235  008C                     _PIE1bits	set	140
   236  008F                     _OSCCONbits	set	143
   237  0089                     _TRISE	set	137
   238  0088                     _TRISD	set	136
   239  0087                     _TRISC	set	135
   240  0086                     _TRISB	set	134
   241  0085                     _TRISA	set	133
   242  010C                     _EEDAT	set	268
   243  010D                     _EEADR	set	269
   244  018D                     _EECON2	set	397
   245  018C                     _EECON1bits	set	396
   246  0189                     _ANSELH	set	393
   247  0188                     _ANSEL	set	392
   248                           
   249                           	psect	cinit
   250  000F                     start_initialization:	
   251                           ; #config settings
   252                           
   253  000F                     __initialization:
   254                           
   255                           ; Clear objects allocated to COMMON
   256  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   257  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   258  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   259                           
   260                           ; Clear objects allocated to BANK0
   261  0012  1283               	bcf	3,5	;RP0=0, select bank0
   262  0013  1303               	bcf	3,6	;RP1=0, select bank0
   263  0014  01A0               	clrf	__pbssBANK0& (0+127)
   264  0015  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   265  0016  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   266  0017  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   267  0018  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   268  0019  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   269  001A  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   270  001B  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   271  001C                     end_of_initialization:	
   272                           ;End of C runtime variable initialization code
   273                           
   274  001C                     __end_of__initialization:
   275  001C  0183               	clrf	3
   276  001D  120A  118A  2820   	ljmp	_main	;jump to C main() function
   277                           
   278                           	psect	bssCOMMON
   279  0078                     __pbssCOMMON:
   280  0078                     _POT2:
   281  0078                     	ds	1
   282  0079                     _POT1:
   283  0079                     	ds	1
   284  007A                     _SERVOS:
   285  007A                     	ds	1
   286                           
   287                           	psect	bssBANK0
   288  0020                     __pbssBANK0:
   289  0020                     _posicion:
   290  0020                     	ds	1
   291  0021                     _datEEPROM:
   292  0021                     	ds	1
   293  0022                     _addEEPROM:
   294  0022                     	ds	1
   295  0023                     _SERVINDIC:
   296  0023                     	ds	1
   297  0024                     _EXTREC:
   298  0024                     	ds	1
   299  0025                     _POT4:
   300  0025                     	ds	1
   301  0026                     _POT3:
   302  0026                     	ds	1
   303  0027                     _UART:
   304  0027                     	ds	1
   305                           
   306                           	psect	cstackCOMMON
   307  0070                     __pcstackCOMMON:
   308  0070                     ?_configuraciones:
   309  0070                     ?_AnalogReadServo:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ?_guardarservos:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_leerSERVOS:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ?_servos:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_rutInter:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ??_rutInter:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ?_main:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_leerposiciones:	
   331                           ; 1 bytes @ 0x0
   332                           
   333                           
   334                           ; 1 bytes @ 0x0
   335  0070                     	ds	3
   336  0073                     ??_configuraciones:
   337  0073                     ??_AnalogReadServo:	
   338                           ; 1 bytes @ 0x3
   339                           
   340  0073                     ??_servos:	
   341                           ; 1 bytes @ 0x3
   342                           
   343  0073                     ?_guardarposiciones:	
   344                           ; 1 bytes @ 0x3
   345                           
   346  0073                     ??_leerposiciones:	
   347                           ; 1 bytes @ 0x3
   348                           
   349  0073                     guardarposiciones@direccion:	
   350                           ; 1 bytes @ 0x3
   351                           
   352  0073                     leerposiciones@direccion:	
   353                           ; 1 bytes @ 0x3
   354                           
   355                           
   356                           ; 1 bytes @ 0x3
   357  0073                     	ds	1
   358  0074                     ??_leerSERVOS:
   359  0074                     ??_guardarposiciones:	
   360                           ; 1 bytes @ 0x4
   361                           
   362  0074                     guardarposiciones@guardar:	
   363                           ; 1 bytes @ 0x4
   364                           
   365                           
   366                           ; 1 bytes @ 0x4
   367  0074                     	ds	1
   368  0075                     ??_guardarservos:
   369                           
   370                           ; 1 bytes @ 0x5
   371  0075                     	ds	1
   372  0076                     leerSERVOS@desfase:
   373                           
   374                           ; 1 bytes @ 0x6
   375  0076                     	ds	1
   376  0077                     leerSERVOS@n:
   377                           
   378                           ; 1 bytes @ 0x7
   379  0077                     	ds	1
   380                           
   381                           	psect	cstackBANK0
   382  0028                     __pcstackBANK0:
   383  0028                     guardarservos@desfase:
   384                           
   385                           ; 1 bytes @ 0x0
   386  0028                     	ds	1
   387  0029                     guardarservos@n:
   388                           
   389                           ; 1 bytes @ 0x1
   390  0029                     	ds	1
   391  002A                     ??_main:
   392                           
   393                           ; 1 bytes @ 0x2
   394  002A                     	ds	2
   395                           
   396                           	psect	maintext
   397  0020                     __pmaintext:	
   398 ;;
   399 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   400 ;;
   401 ;; *************** function _main *****************
   402 ;; Defined at:
   403 ;;		line 132 in file "mainP2.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;		None
   406 ;; Auto vars:     Size  Location     Type
   407 ;;		None
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   412 ;; Tracked objects:
   413 ;;		On entry : B00/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   417 ;;      Params:         0       0       0       0       0
   418 ;;      Locals:         0       0       0       0       0
   419 ;;      Temps:          0       2       0       0       0
   420 ;;      Totals:         0       2       0       0       0
   421 ;;Total ram usage:        2 bytes
   422 ;; Hardware stack levels required when called:    3
   423 ;; This function calls:
   424 ;;		_AnalogReadServo
   425 ;;		_configuraciones
   426 ;;		_guardarservos
   427 ;;		_leerSERVOS
   428 ;;		_servos
   429 ;; This function is called by:
   430 ;;		Startup code after reset
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           
   435                           ;psect for function _main
   436  0020                     _main:
   437  0020                     l1921:	
   438                           ;incstack = 0
   439                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   440                           
   441                           
   442                           ;mainP2.c: 133:     configuraciones();
   443  0020  120A  118A  2287  120A  118A  	fcall	_configuraciones
   444  0025                     l1923:
   445                           
   446                           ;mainP2.c: 135:         if(SERVOS.modo){
   447  0025  1F7A               	btfss	_SERVOS,6
   448  0026  2828               	goto	u751
   449  0027  2829               	goto	u750
   450  0028                     u751:
   451  0028  2890               	goto	l123
   452  0029                     u750:
   453  0029                     l1925:
   454                           
   455                           ;mainP2.c: 136:             AnalogReadServo();
   456  0029  120A  118A  2106  120A  118A  	fcall	_AnalogReadServo
   457  002E                     l1927:
   458                           
   459                           ;mainP2.c: 137:             PORTBbits.RB7 = 1;
   460  002E  1283               	bcf	3,5	;RP0=0, select bank0
   461  002F  1303               	bcf	3,6	;RP1=0, select bank0
   462  0030  1786               	bsf	6,7	;volatile
   463  0031                     l1929:
   464                           
   465                           ;mainP2.c: 138:             UART.indicador = 0;
   466  0031  1027               	bcf	_UART,0
   467  0032                     l1931:
   468                           
   469                           ;mainP2.c: 140:             if(SERVOS.guardar){
   470  0032  1FFA               	btfss	_SERVOS,7
   471  0033  2835               	goto	u761
   472  0034  2836               	goto	u760
   473  0035                     u761:
   474  0035  28FD               	goto	l1987
   475  0036                     u760:
   476  0036  286C               	goto	l1953
   477  0037                     l1935:
   478                           
   479                           ;mainP2.c: 143:                         guardarservos(0);
   480  0037  3000               	movlw	0
   481  0038  120A  118A  233D  120A  118A  	fcall	_guardarservos
   482                           
   483                           ;mainP2.c: 144:                         break;
   484  003D  288E               	goto	l127
   485  003E                     l1937:
   486                           
   487                           ;mainP2.c: 146:                         guardarservos(5);
   488  003E  3005               	movlw	5
   489  003F  120A  118A  233D  120A  118A  	fcall	_guardarservos
   490                           
   491                           ;mainP2.c: 147:                         break;
   492  0044  288E               	goto	l127
   493  0045                     l1939:
   494                           
   495                           ;mainP2.c: 149:                         guardarservos(10);
   496  0045  300A               	movlw	10
   497  0046  120A  118A  233D  120A  118A  	fcall	_guardarservos
   498                           
   499                           ;mainP2.c: 150:                         break;
   500  004B  288E               	goto	l127
   501  004C                     l1941:
   502                           
   503                           ;mainP2.c: 152:                         guardarservos(15);
   504  004C  300F               	movlw	15
   505  004D  120A  118A  233D  120A  118A  	fcall	_guardarservos
   506                           
   507                           ;mainP2.c: 153:                         break;
   508  0052  288E               	goto	l127
   509  0053                     l1943:
   510                           
   511                           ;mainP2.c: 155:                         guardarservos(20);
   512  0053  3014               	movlw	20
   513  0054  120A  118A  233D  120A  118A  	fcall	_guardarservos
   514                           
   515                           ;mainP2.c: 156:                         break;
   516  0059  288E               	goto	l127
   517  005A                     l1945:
   518                           
   519                           ;mainP2.c: 158:                         guardarservos(25);
   520  005A  3019               	movlw	25
   521  005B  120A  118A  233D  120A  118A  	fcall	_guardarservos
   522                           
   523                           ;mainP2.c: 159:                         break;
   524  0060  288E               	goto	l127
   525  0061                     l1947:
   526                           
   527                           ;mainP2.c: 161:                         guardarservos(30);
   528  0061  301E               	movlw	30
   529  0062  120A  118A  233D  120A  118A  	fcall	_guardarservos
   530                           
   531                           ;mainP2.c: 162:                         break;
   532  0067  288E               	goto	l127
   533  0068                     l134:	
   534                           ;mainP2.c: 163:                     case 13:
   535                           
   536                           
   537                           ;mainP2.c: 164:                         T1CONbits.TMR1ON = 0;
   538  0068  1010               	bcf	16,0	;volatile
   539  0069                     l1949:
   540                           
   541                           ;mainP2.c: 165:                         posicion = 0;
   542  0069  01A0               	clrf	_posicion
   543                           
   544                           ;mainP2.c: 166:                         PORTE = 0;
   545  006A  0189               	clrf	9	;volatile
   546                           
   547                           ;mainP2.c: 167:                         break;
   548  006B  288E               	goto	l127
   549  006C                     l1953:
   550  006C  0820               	movf	_posicion,w
   551  006D  00AA               	movwf	??_main
   552  006E  01AB               	clrf	??_main+1
   553                           
   554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   555                           ; Switch size 1, requested type "simple"
   556                           ; Number of cases is 1, Range of values is 0 to 0
   557                           ; switch strategies available:
   558                           ; Name         Instructions Cycles
   559                           ; simple_byte            4     3 (average)
   560                           ; direct_byte           11     8 (fixed)
   561                           ; jumptable            260     6 (fixed)
   562                           ;	Chosen strategy is simple_byte
   563  006F  082B               	movf	??_main+1,w
   564  0070  3A00               	xorlw	0	; case 0
   565  0071  1903               	skipnz
   566  0072  2874               	goto	l2117
   567  0073  288E               	goto	l127
   568  0074                     l2117:
   569                           
   570                           ; Switch size 1, requested type "simple"
   571                           ; Number of cases is 8, Range of values is 0 to 13
   572                           ; switch strategies available:
   573                           ; Name         Instructions Cycles
   574                           ; simple_byte           25    13 (average)
   575                           ; direct_byte           50     8 (fixed)
   576                           ; jumptable            260     6 (fixed)
   577                           ;	Chosen strategy is simple_byte
   578  0074  082A               	movf	??_main,w
   579  0075  3A00               	xorlw	0	; case 0
   580  0076  1903               	skipnz
   581  0077  2837               	goto	l1935
   582  0078  3A02               	xorlw	2	; case 2
   583  0079  1903               	skipnz
   584  007A  283E               	goto	l1937
   585  007B  3A06               	xorlw	6	; case 4
   586  007C  1903               	skipnz
   587  007D  2845               	goto	l1939
   588  007E  3A02               	xorlw	2	; case 6
   589  007F  1903               	skipnz
   590  0080  284C               	goto	l1941
   591  0081  3A0E               	xorlw	14	; case 8
   592  0082  1903               	skipnz
   593  0083  2853               	goto	l1943
   594  0084  3A02               	xorlw	2	; case 10
   595  0085  1903               	skipnz
   596  0086  285A               	goto	l1945
   597  0087  3A06               	xorlw	6	; case 12
   598  0088  1903               	skipnz
   599  0089  2861               	goto	l1947
   600  008A  3A01               	xorlw	1	; case 13
   601  008B  1903               	skipnz
   602  008C  2868               	goto	l134
   603  008D  288E               	goto	l127
   604  008E                     l127:
   605                           
   606                           ;mainP2.c: 170:                 SERVOS.guardar = 0;
   607  008E  13FA               	bcf	_SERVOS,7
   608  008F  28FD               	goto	l1987
   609  0090                     l123:	
   610                           ;mainP2.c: 174:         else{
   611                           
   612                           
   613                           ;mainP2.c: 175:             PORTBbits.RB7 = 0;
   614  0090  1283               	bcf	3,5	;RP0=0, select bank0
   615  0091  1303               	bcf	3,6	;RP1=0, select bank0
   616  0092  1386               	bcf	6,7	;volatile
   617                           
   618                           ;mainP2.c: 177:             if(UART.datorecep){
   619  0093  1CA7               	btfss	_UART,1
   620  0094  2896               	goto	u771
   621  0095  2897               	goto	u770
   622  0096                     u771:
   623  0096  28A1               	goto	l1963
   624  0097                     u770:
   625  0097                     l1955:
   626                           
   627                           ;mainP2.c: 178:                 if(EXTREC == '0'){
   628  0097  3030               	movlw	48
   629  0098  0624               	xorwf	_EXTREC,w
   630  0099  1D03               	btfss	3,2
   631  009A  289C               	goto	u781
   632  009B  289D               	goto	u780
   633  009C                     u781:
   634  009C  28A0               	goto	l1961
   635  009D                     u780:
   636  009D                     l1957:
   637                           
   638                           ;mainP2.c: 179:                     T1CONbits.TMR1ON = 1;
   639  009D  1410               	bsf	16,0	;volatile
   640  009E                     l1959:
   641                           
   642                           ;mainP2.c: 180:                     PORTE = 1;
   643  009E  3001               	movlw	1
   644  009F  0089               	movwf	9	;volatile
   645  00A0                     l1961:
   646                           
   647                           ;mainP2.c: 182:                 UART.datorecep = 0;
   648  00A0  10A7               	bcf	_UART,1
   649  00A1                     l1963:
   650                           
   651                           ;mainP2.c: 185:             if(T1CONbits.TMR1ON){
   652  00A1  1C10               	btfss	16,0	;volatile
   653  00A2  28A4               	goto	u791
   654  00A3  28A5               	goto	u790
   655  00A4                     u791:
   656  00A4  28FD               	goto	l1987
   657  00A5                     u790:
   658  00A5  28DB               	goto	l1985
   659  00A6                     l1967:
   660  00A6  3000               	movlw	0
   661  00A7  120A  118A  22E6  120A  118A  	fcall	_leerSERVOS
   662                           
   663                           ;mainP2.c: 188:                         break;
   664  00AC  28FD               	goto	l1987
   665  00AD                     l1969:
   666  00AD  3005               	movlw	5
   667  00AE  120A  118A  22E6  120A  118A  	fcall	_leerSERVOS
   668                           
   669                           ;mainP2.c: 190:                         break;
   670  00B3  28FD               	goto	l1987
   671  00B4                     l1971:
   672  00B4  300A               	movlw	10
   673  00B5  120A  118A  22E6  120A  118A  	fcall	_leerSERVOS
   674                           
   675                           ;mainP2.c: 192:                         break;
   676  00BA  28FD               	goto	l1987
   677  00BB                     l1973:
   678  00BB  300F               	movlw	15
   679  00BC  120A  118A  22E6  120A  118A  	fcall	_leerSERVOS
   680                           
   681                           ;mainP2.c: 194:                         break;
   682  00C1  28FD               	goto	l1987
   683  00C2                     l1975:
   684  00C2  3014               	movlw	20
   685  00C3  120A  118A  22E6  120A  118A  	fcall	_leerSERVOS
   686                           
   687                           ;mainP2.c: 196:                         break;
   688  00C8  28FD               	goto	l1987
   689  00C9                     l1977:
   690  00C9  3019               	movlw	25
   691  00CA  120A  118A  22E6  120A  118A  	fcall	_leerSERVOS
   692                           
   693                           ;mainP2.c: 198:                         break;
   694  00CF  28FD               	goto	l1987
   695  00D0                     l1979:
   696  00D0  301E               	movlw	30
   697  00D1  120A  118A  22E6  120A  118A  	fcall	_leerSERVOS
   698                           
   699                           ;mainP2.c: 200:                         break;
   700  00D6  28FD               	goto	l1987
   701  00D7                     l148:	
   702                           ;mainP2.c: 201:                     case 13:
   703                           
   704                           
   705                           ;mainP2.c: 202:                         T1CONbits.TMR1ON = 0;
   706  00D7  1010               	bcf	16,0	;volatile
   707  00D8                     l1981:
   708                           
   709                           ;mainP2.c: 203:                         posicion = 0;
   710  00D8  01A0               	clrf	_posicion
   711                           
   712                           ;mainP2.c: 204:                         PORTE = 0;
   713  00D9  0189               	clrf	9	;volatile
   714                           
   715                           ;mainP2.c: 205:                         break;
   716  00DA  28FD               	goto	l1987
   717  00DB                     l1985:
   718  00DB  0820               	movf	_posicion,w
   719  00DC  00AA               	movwf	??_main
   720  00DD  01AB               	clrf	??_main+1
   721                           
   722                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   723                           ; Switch size 1, requested type "simple"
   724                           ; Number of cases is 1, Range of values is 0 to 0
   725                           ; switch strategies available:
   726                           ; Name         Instructions Cycles
   727                           ; simple_byte            4     3 (average)
   728                           ; direct_byte           11     8 (fixed)
   729                           ; jumptable            260     6 (fixed)
   730                           ;	Chosen strategy is simple_byte
   731  00DE  082B               	movf	??_main+1,w
   732  00DF  3A00               	xorlw	0	; case 0
   733  00E0  1903               	skipnz
   734  00E1  28E3               	goto	l2119
   735  00E2  28FD               	goto	l1987
   736  00E3                     l2119:
   737                           
   738                           ; Switch size 1, requested type "simple"
   739                           ; Number of cases is 8, Range of values is 0 to 13
   740                           ; switch strategies available:
   741                           ; Name         Instructions Cycles
   742                           ; simple_byte           25    13 (average)
   743                           ; direct_byte           50     8 (fixed)
   744                           ; jumptable            260     6 (fixed)
   745                           ;	Chosen strategy is simple_byte
   746  00E3  082A               	movf	??_main,w
   747  00E4  3A00               	xorlw	0	; case 0
   748  00E5  1903               	skipnz
   749  00E6  28A6               	goto	l1967
   750  00E7  3A02               	xorlw	2	; case 2
   751  00E8  1903               	skipnz
   752  00E9  28AD               	goto	l1969
   753  00EA  3A06               	xorlw	6	; case 4
   754  00EB  1903               	skipnz
   755  00EC  28B4               	goto	l1971
   756  00ED  3A02               	xorlw	2	; case 6
   757  00EE  1903               	skipnz
   758  00EF  28BB               	goto	l1973
   759  00F0  3A0E               	xorlw	14	; case 8
   760  00F1  1903               	skipnz
   761  00F2  28C2               	goto	l1975
   762  00F3  3A02               	xorlw	2	; case 10
   763  00F4  1903               	skipnz
   764  00F5  28C9               	goto	l1977
   765  00F6  3A06               	xorlw	6	; case 12
   766  00F7  1903               	skipnz
   767  00F8  28D0               	goto	l1979
   768  00F9  3A01               	xorlw	1	; case 13
   769  00FA  1903               	skipnz
   770  00FB  28D7               	goto	l148
   771  00FC  28FD               	goto	l1987
   772  00FD                     l1987:
   773                           
   774                           ;mainP2.c: 212:         servos();
   775  00FD  120A  118A  2224  120A  118A  	fcall	_servos
   776  0102  2825               	goto	l1923
   777  0103  120A  118A  280C   	ljmp	start
   778  0106                     __end_of_main:
   779                           
   780                           	psect	text1
   781  0224                     __ptext1:	
   782 ;; *************** function _servos *****************
   783 ;; Defined at:
   784 ;;		line 290 in file "mainP2.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   798 ;;      Params:         0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0
   800 ;;      Temps:          2       0       0       0       0
   801 ;;      Totals:         2       0       0       0       0
   802 ;;Total ram usage:        2 bytes
   803 ;; Hardware stack levels used:    1
   804 ;; Hardware stack levels required when called:    1
   805 ;; This function calls:
   806 ;;		Nothing
   807 ;; This function is called by:
   808 ;;		_main
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           
   813                           ;psect for function _servos
   814  0224                     _servos:
   815  0224                     l1573:	
   816                           ;incstack = 0
   817                           ; Regs used in _servos: [wreg-fsr0h+status,2+status,0]
   818                           
   819                           
   820                           ;mainP2.c: 292:     if(SERVOS.bit1){
   821  0224  1EFA               	btfss	_SERVOS,5
   822  0225  2A27               	goto	u501
   823  0226  2A28               	goto	u500
   824  0227                     u501:
   825  0227  2A86               	goto	l169
   826  0228                     u500:
   827  0228                     l1575:
   828                           
   829                           ;mainP2.c: 293:             if(SERVOS.bit0 == 15) SERVOS.bit0 = 0;
   830  0228  087A               	movf	_SERVOS,w
   831  0229  391F               	andlw	31
   832  022A  3A0F               	xorlw	15
   833  022B  1D03               	skipz
   834  022C  2A2E               	goto	u511
   835  022D  2A2F               	goto	u510
   836  022E                     u511:
   837  022E  2A31               	goto	l1579
   838  022F                     u510:
   839  022F                     l1577:
   840  022F  30E0               	movlw	-32
   841  0230  05FA               	andwf	_SERVOS,f
   842  0231                     l1579:
   843                           
   844                           ;mainP2.c: 294:             SERVOS.bit1 = 0;
   845  0231  12FA               	bcf	_SERVOS,5
   846                           
   847                           ;mainP2.c: 295:             switch(SERVOS.bit0){
   848  0232  2A63               	goto	l1615
   849  0233                     l1581:
   850                           
   851                           ;mainP2.c: 298:                     TMR0 = 255-POT1; PORTDbits.RD0 = 0;
   852  0233  0979               	comf	_POT1,w
   853  0234  1283               	bcf	3,5	;RP0=0, select bank0
   854  0235  1303               	bcf	3,6	;RP1=0, select bank0
   855  0236  0081               	movwf	1	;volatile
   856  0237                     l1583:
   857  0237  1008               	bcf	8,0	;volatile
   858                           
   859                           ;mainP2.c: 299:                     break;
   860  0238  2A86               	goto	l169
   861  0239                     l1585:
   862                           
   863                           ;mainP2.c: 301:                      TMR0 = 255-POT2; PORTDbits.RD1 = 0;
   864  0239  0978               	comf	_POT2,w
   865  023A  1283               	bcf	3,5	;RP0=0, select bank0
   866  023B  1303               	bcf	3,6	;RP1=0, select bank0
   867  023C  0081               	movwf	1	;volatile
   868  023D                     l1587:
   869  023D  1088               	bcf	8,1	;volatile
   870                           
   871                           ;mainP2.c: 302:                     break;
   872  023E  2A86               	goto	l169
   873  023F                     l1589:
   874                           
   875                           ;mainP2.c: 304:                     TMR0 = 255-POT3; PORTDbits.RD2 = 0;
   876  023F  1283               	bcf	3,5	;RP0=0, select bank0
   877  0240  1303               	bcf	3,6	;RP1=0, select bank0
   878  0241  0926               	comf	_POT3,w
   879  0242  0081               	movwf	1	;volatile
   880  0243                     l1591:
   881  0243  1108               	bcf	8,2	;volatile
   882                           
   883                           ;mainP2.c: 305:                     break;
   884  0244  2A86               	goto	l169
   885  0245                     l1593:
   886                           
   887                           ;mainP2.c: 307:                     TMR0 = 255-POT4; PORTDbits.RD3 = 0;
   888  0245  1283               	bcf	3,5	;RP0=0, select bank0
   889  0246  1303               	bcf	3,6	;RP1=0, select bank0
   890  0247  0925               	comf	_POT4,w
   891  0248  0081               	movwf	1	;volatile
   892  0249                     l1595:
   893  0249  1188               	bcf	8,3	;volatile
   894                           
   895                           ;mainP2.c: 308:                     break;
   896  024A  2A86               	goto	l169
   897  024B                     l1597:
   898                           
   899                           ;mainP2.c: 311:                     TMR0 = POT1; PORTDbits.RD0 = 1;
   900  024B  0879               	movf	_POT1,w
   901  024C  1283               	bcf	3,5	;RP0=0, select bank0
   902  024D  1303               	bcf	3,6	;RP1=0, select bank0
   903  024E  0081               	movwf	1	;volatile
   904  024F                     l1599:
   905  024F  1408               	bsf	8,0	;volatile
   906                           
   907                           ;mainP2.c: 312:                     break;
   908  0250  2A86               	goto	l169
   909  0251                     l1601:
   910                           
   911                           ;mainP2.c: 314:                     TMR0 = POT2; PORTDbits.RD1 = 1;
   912  0251  0878               	movf	_POT2,w
   913  0252  1283               	bcf	3,5	;RP0=0, select bank0
   914  0253  1303               	bcf	3,6	;RP1=0, select bank0
   915  0254  0081               	movwf	1	;volatile
   916  0255                     l1603:
   917  0255  1488               	bsf	8,1	;volatile
   918                           
   919                           ;mainP2.c: 315:                     break;
   920  0256  2A86               	goto	l169
   921  0257                     l1605:
   922                           
   923                           ;mainP2.c: 317:                     TMR0 = POT3; PORTDbits.RD2 = 1;
   924  0257  1283               	bcf	3,5	;RP0=0, select bank0
   925  0258  1303               	bcf	3,6	;RP1=0, select bank0
   926  0259  0826               	movf	_POT3,w
   927  025A  0081               	movwf	1	;volatile
   928  025B                     l1607:
   929  025B  1508               	bsf	8,2	;volatile
   930                           
   931                           ;mainP2.c: 318:                     break;
   932  025C  2A86               	goto	l169
   933  025D                     l1609:
   934                           
   935                           ;mainP2.c: 320:                     TMR0 = POT4; PORTDbits.RD3 = 1;
   936  025D  1283               	bcf	3,5	;RP0=0, select bank0
   937  025E  1303               	bcf	3,6	;RP1=0, select bank0
   938  025F  0825               	movf	_POT4,w
   939  0260  0081               	movwf	1	;volatile
   940  0261                     l1611:
   941  0261  1588               	bsf	8,3	;volatile
   942                           
   943                           ;mainP2.c: 321:                     break;
   944  0262  2A86               	goto	l169
   945  0263                     l1615:
   946  0263  087A               	movf	_SERVOS,w
   947  0264  391F               	andlw	31
   948  0265  00F3               	movwf	??_servos
   949  0266  01F4               	clrf	??_servos+1
   950                           
   951                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   952                           ; Switch size 1, requested type "simple"
   953                           ; Number of cases is 1, Range of values is 0 to 0
   954                           ; switch strategies available:
   955                           ; Name         Instructions Cycles
   956                           ; simple_byte            4     3 (average)
   957                           ; direct_byte           11     8 (fixed)
   958                           ; jumptable            260     6 (fixed)
   959                           ;	Chosen strategy is simple_byte
   960  0267  0874               	movf	??_servos+1,w
   961  0268  3A00               	xorlw	0	; case 0
   962  0269  1903               	skipnz
   963  026A  2A6C               	goto	l2121
   964  026B  2A86               	goto	l169
   965  026C                     l2121:
   966                           
   967                           ; Switch size 1, requested type "simple"
   968                           ; Number of cases is 8, Range of values is 0 to 10
   969                           ; switch strategies available:
   970                           ; Name         Instructions Cycles
   971                           ; simple_byte           25    13 (average)
   972                           ; direct_byte           41     8 (fixed)
   973                           ; jumptable            260     6 (fixed)
   974                           ;	Chosen strategy is simple_byte
   975  026C  0873               	movf	??_servos,w
   976  026D  3A00               	xorlw	0	; case 0
   977  026E  1903               	skipnz
   978  026F  2A4B               	goto	l1597
   979  0270  3A01               	xorlw	1	; case 1
   980  0271  1903               	skipnz
   981  0272  2A33               	goto	l1581
   982  0273  3A02               	xorlw	2	; case 3
   983  0274  1903               	skipnz
   984  0275  2A51               	goto	l1601
   985  0276  3A07               	xorlw	7	; case 4
   986  0277  1903               	skipnz
   987  0278  2A39               	goto	l1585
   988  0279  3A02               	xorlw	2	; case 6
   989  027A  1903               	skipnz
   990  027B  2A57               	goto	l1605
   991  027C  3A01               	xorlw	1	; case 7
   992  027D  1903               	skipnz
   993  027E  2A3F               	goto	l1589
   994  027F  3A0E               	xorlw	14	; case 9
   995  0280  1903               	skipnz
   996  0281  2A5D               	goto	l1609
   997  0282  3A03               	xorlw	3	; case 10
   998  0283  1903               	skipnz
   999  0284  2A45               	goto	l1593
  1000  0285  2A86               	goto	l169
  1001  0286                     l169:
  1002  0286  0008               	return
  1003  0287                     __end_of_servos:
  1004                           
  1005                           	psect	text2
  1006  02E6                     __ptext2:	
  1007 ;; *************** function _leerSERVOS *****************
  1008 ;; Defined at:
  1009 ;;		line 419 in file "mainP2.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  desfase         1    wreg     unsigned char 
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;  desfase         1    6[COMMON] unsigned char 
  1014 ;;  n               1    7[COMMON] unsigned char 
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      void 
  1017 ;; Registers used:
  1018 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1024 ;;      Params:         0       0       0       0       0
  1025 ;;      Locals:         2       0       0       0       0
  1026 ;;      Temps:          2       0       0       0       0
  1027 ;;      Totals:         4       0       0       0       0
  1028 ;;Total ram usage:        4 bytes
  1029 ;; Hardware stack levels used:    1
  1030 ;; Hardware stack levels required when called:    2
  1031 ;; This function calls:
  1032 ;;		_leerposiciones
  1033 ;; This function is called by:
  1034 ;;		_main
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           
  1039                           ;psect for function _leerSERVOS
  1040  02E6                     _leerSERVOS:
  1041                           
  1042                           ;incstack = 0
  1043                           ; Regs used in _leerSERVOS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1044                           ;leerSERVOS@desfase stored from wreg
  1045  02E6  00F6               	movwf	leerSERVOS@desfase
  1046  02E7                     l1545:
  1047                           
  1048                           ;mainP2.c: 420:     for(uint8_t n=0;n<=3; n++){
  1049  02E7  01F7               	clrf	leerSERVOS@n
  1050  02E8                     l1551:
  1051                           
  1052                           ;mainP2.c: 421:         addEEPROM = n + desfase;
  1053  02E8  0876               	movf	leerSERVOS@desfase,w
  1054  02E9  0777               	addwf	leerSERVOS@n,w
  1055  02EA  00F4               	movwf	??_leerSERVOS
  1056  02EB  0874               	movf	??_leerSERVOS,w
  1057  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  1058  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  1059  02EE  00A2               	movwf	_addEEPROM
  1060                           
  1061                           ;mainP2.c: 422:         switch(n){
  1062  02EF  2B1C               	goto	l1563
  1063  02F0                     l1553:
  1064  02F0  0822               	movf	_addEEPROM,w
  1065  02F1  120A  118A  23A5  120A  118A  	fcall	_leerposiciones
  1066  02F6  00F4               	movwf	??_leerSERVOS
  1067  02F7  0874               	movf	??_leerSERVOS,w
  1068  02F8  00F9               	movwf	_POT1
  1069                           
  1070                           ;mainP2.c: 424:                 break;
  1071  02F9  2B32               	goto	l1565
  1072  02FA                     l1555:
  1073  02FA  0822               	movf	_addEEPROM,w
  1074  02FB  120A  118A  23A5  120A  118A  	fcall	_leerposiciones
  1075  0300  00F4               	movwf	??_leerSERVOS
  1076  0301  0874               	movf	??_leerSERVOS,w
  1077  0302  00F8               	movwf	_POT2
  1078                           
  1079                           ;mainP2.c: 426:                 break;
  1080  0303  2B32               	goto	l1565
  1081  0304                     l1557:
  1082  0304  0822               	movf	_addEEPROM,w
  1083  0305  120A  118A  23A5  120A  118A  	fcall	_leerposiciones
  1084  030A  00F4               	movwf	??_leerSERVOS
  1085  030B  0874               	movf	??_leerSERVOS,w
  1086  030C  1283               	bcf	3,5	;RP0=0, select bank0
  1087  030D  1303               	bcf	3,6	;RP1=0, select bank0
  1088  030E  00A6               	movwf	_POT3
  1089                           
  1090                           ;mainP2.c: 428:                 break;
  1091  030F  2B32               	goto	l1565
  1092  0310                     l1559:
  1093  0310  0822               	movf	_addEEPROM,w
  1094  0311  120A  118A  23A5  120A  118A  	fcall	_leerposiciones
  1095  0316  00F4               	movwf	??_leerSERVOS
  1096  0317  0874               	movf	??_leerSERVOS,w
  1097  0318  1283               	bcf	3,5	;RP0=0, select bank0
  1098  0319  1303               	bcf	3,6	;RP1=0, select bank0
  1099  031A  00A5               	movwf	_POT4
  1100                           
  1101                           ;mainP2.c: 430:                 break;
  1102  031B  2B32               	goto	l1565
  1103  031C                     l1563:
  1104  031C  0877               	movf	leerSERVOS@n,w
  1105  031D  00F4               	movwf	??_leerSERVOS
  1106  031E  01F5               	clrf	??_leerSERVOS+1
  1107                           
  1108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1109                           ; Switch size 1, requested type "simple"
  1110                           ; Number of cases is 1, Range of values is 0 to 0
  1111                           ; switch strategies available:
  1112                           ; Name         Instructions Cycles
  1113                           ; simple_byte            4     3 (average)
  1114                           ; direct_byte           11     8 (fixed)
  1115                           ; jumptable            260     6 (fixed)
  1116                           ;	Chosen strategy is simple_byte
  1117  031F  0875               	movf	??_leerSERVOS+1,w
  1118  0320  3A00               	xorlw	0	; case 0
  1119  0321  1903               	skipnz
  1120  0322  2B24               	goto	l2123
  1121  0323  2B32               	goto	l1565
  1122  0324                     l2123:
  1123                           
  1124                           ; Switch size 1, requested type "simple"
  1125                           ; Number of cases is 4, Range of values is 0 to 3
  1126                           ; switch strategies available:
  1127                           ; Name         Instructions Cycles
  1128                           ; simple_byte           13     7 (average)
  1129                           ; direct_byte           20     8 (fixed)
  1130                           ; jumptable            260     6 (fixed)
  1131                           ;	Chosen strategy is simple_byte
  1132  0324  0874               	movf	??_leerSERVOS,w
  1133  0325  3A00               	xorlw	0	; case 0
  1134  0326  1903               	skipnz
  1135  0327  2AF0               	goto	l1553
  1136  0328  3A01               	xorlw	1	; case 1
  1137  0329  1903               	skipnz
  1138  032A  2AFA               	goto	l1555
  1139  032B  3A03               	xorlw	3	; case 2
  1140  032C  1903               	skipnz
  1141  032D  2B04               	goto	l1557
  1142  032E  3A01               	xorlw	1	; case 3
  1143  032F  1903               	skipnz
  1144  0330  2B10               	goto	l1559
  1145  0331  2B32               	goto	l1565
  1146  0332                     l1565:
  1147                           
  1148                           ;mainP2.c: 434:     }
  1149  0332  3001               	movlw	1
  1150  0333  00F4               	movwf	??_leerSERVOS
  1151  0334  0874               	movf	??_leerSERVOS,w
  1152  0335  07F7               	addwf	leerSERVOS@n,f
  1153  0336                     l1567:
  1154  0336  3004               	movlw	4
  1155  0337  0277               	subwf	leerSERVOS@n,w
  1156  0338  1C03               	skipc
  1157  0339  2B3B               	goto	u491
  1158  033A  2B3C               	goto	u490
  1159  033B                     u491:
  1160  033B  2AE8               	goto	l1551
  1161  033C                     u490:
  1162  033C                     l231:
  1163  033C  0008               	return
  1164  033D                     __end_of_leerSERVOS:
  1165                           
  1166                           	psect	text3
  1167  03A5                     __ptext3:	
  1168 ;; *************** function _leerposiciones *****************
  1169 ;; Defined at:
  1170 ;;		line 412 in file "mainP2.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  direccion       1    wreg     unsigned char 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;  direccion       1    3[COMMON] unsigned char 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      unsigned char 
  1177 ;; Registers used:
  1178 ;;		wreg
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1184 ;;      Params:         0       0       0       0       0
  1185 ;;      Locals:         1       0       0       0       0
  1186 ;;      Temps:          0       0       0       0       0
  1187 ;;      Totals:         1       0       0       0       0
  1188 ;;Total ram usage:        1 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; Hardware stack levels required when called:    1
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_leerSERVOS
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           
  1199                           ;psect for function _leerposiciones
  1200  03A5                     _leerposiciones:
  1201                           
  1202                           ;incstack = 0
  1203                           ; Regs used in _leerposiciones: [wreg]
  1204                           ;leerposiciones@direccion stored from wreg
  1205  03A5  00F3               	movwf	leerposiciones@direccion
  1206  03A6                     l1363:
  1207                           
  1208                           ;mainP2.c: 413:     EEADR = direccion;
  1209  03A6  0873               	movf	leerposiciones@direccion,w
  1210  03A7  1283               	bcf	3,5	;RP0=0, select bank2
  1211  03A8  1703               	bsf	3,6	;RP1=1, select bank2
  1212  03A9  008D               	movwf	13	;volatile
  1213  03AA                     l1365:
  1214                           
  1215                           ;mainP2.c: 414:     EECON1bits.EEPGD = 0;
  1216  03AA  1683               	bsf	3,5	;RP0=1, select bank3
  1217  03AB  1703               	bsf	3,6	;RP1=1, select bank3
  1218  03AC  138C               	bcf	12,7	;volsfr
  1219  03AD                     l1367:
  1220                           
  1221                           ;mainP2.c: 415:     EECON1bits.RD = 1;
  1222  03AD  140C               	bsf	12,0	;volsfr
  1223                           
  1224                           ;mainP2.c: 416:     return EEDAT;
  1225  03AE  1283               	bcf	3,5	;RP0=0, select bank2
  1226  03AF  1703               	bsf	3,6	;RP1=1, select bank2
  1227  03B0  080C               	movf	12,w	;volatile
  1228  03B1                     l220:
  1229  03B1  0008               	return
  1230  03B2                     __end_of_leerposiciones:
  1231                           
  1232                           	psect	text4
  1233  033D                     __ptext4:	
  1234 ;; *************** function _guardarservos *****************
  1235 ;; Defined at:
  1236 ;;		line 395 in file "mainP2.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;  desfase         1    wreg     unsigned char 
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;  desfase         1    0[BANK0 ] unsigned char 
  1241 ;;  n               1    1[BANK0 ] unsigned char 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1251 ;;      Params:         0       0       0       0       0
  1252 ;;      Locals:         0       2       0       0       0
  1253 ;;      Temps:          2       0       0       0       0
  1254 ;;      Totals:         2       2       0       0       0
  1255 ;;Total ram usage:        4 bytes
  1256 ;; Hardware stack levels used:    1
  1257 ;; Hardware stack levels required when called:    2
  1258 ;; This function calls:
  1259 ;;		_guardarposiciones
  1260 ;; This function is called by:
  1261 ;;		_main
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           
  1266                           ;psect for function _guardarservos
  1267  033D                     _guardarservos:
  1268                           
  1269                           ;incstack = 0
  1270                           ; Regs used in _guardarservos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1271                           ;guardarservos@desfase stored from wreg
  1272  033D  1283               	bcf	3,5	;RP0=0, select bank0
  1273  033E  1303               	bcf	3,6	;RP1=0, select bank0
  1274  033F  00A8               	movwf	guardarservos@desfase
  1275  0340                     l1891:
  1276                           
  1277                           ;mainP2.c: 396:     for(uint8_t n=0;n<=3;n++){
  1278  0340  01A9               	clrf	guardarservos@n
  1279  0341                     l1897:
  1280                           
  1281                           ;mainP2.c: 397:         addEEPROM = n + desfase;
  1282  0341  0828               	movf	guardarservos@desfase,w
  1283  0342  0729               	addwf	guardarservos@n,w
  1284  0343  00F5               	movwf	??_guardarservos
  1285  0344  0875               	movf	??_guardarservos,w
  1286  0345  00A2               	movwf	_addEEPROM
  1287                           
  1288                           ;mainP2.c: 398:         switch(n){
  1289  0346  2B5B               	goto	l1909
  1290  0347                     l1899:
  1291  0347  0879               	movf	_POT1,w
  1292  0348  00F5               	movwf	??_guardarservos
  1293  0349  0875               	movf	??_guardarservos,w
  1294  034A  00A1               	movwf	_datEEPROM
  1295                           
  1296                           ;mainP2.c: 400:                 break;
  1297  034B  2B71               	goto	l1911
  1298  034C                     l1901:
  1299  034C  0878               	movf	_POT2,w
  1300  034D  00F5               	movwf	??_guardarservos
  1301  034E  0875               	movf	??_guardarservos,w
  1302  034F  00A1               	movwf	_datEEPROM
  1303                           
  1304                           ;mainP2.c: 402:                 break;
  1305  0350  2B71               	goto	l1911
  1306  0351                     l1903:
  1307  0351  0826               	movf	_POT3,w
  1308  0352  00F5               	movwf	??_guardarservos
  1309  0353  0875               	movf	??_guardarservos,w
  1310  0354  00A1               	movwf	_datEEPROM
  1311                           
  1312                           ;mainP2.c: 404:                 break;
  1313  0355  2B71               	goto	l1911
  1314  0356                     l1905:
  1315  0356  0825               	movf	_POT4,w
  1316  0357  00F5               	movwf	??_guardarservos
  1317  0358  0875               	movf	??_guardarservos,w
  1318  0359  00A1               	movwf	_datEEPROM
  1319                           
  1320                           ;mainP2.c: 406:                 break;
  1321  035A  2B71               	goto	l1911
  1322  035B                     l1909:
  1323  035B  0829               	movf	guardarservos@n,w
  1324  035C  00F5               	movwf	??_guardarservos
  1325  035D  01F6               	clrf	??_guardarservos+1
  1326                           
  1327                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1328                           ; Switch size 1, requested type "simple"
  1329                           ; Number of cases is 1, Range of values is 0 to 0
  1330                           ; switch strategies available:
  1331                           ; Name         Instructions Cycles
  1332                           ; simple_byte            4     3 (average)
  1333                           ; direct_byte           11     8 (fixed)
  1334                           ; jumptable            260     6 (fixed)
  1335                           ;	Chosen strategy is simple_byte
  1336  035E  0876               	movf	??_guardarservos+1,w
  1337  035F  3A00               	xorlw	0	; case 0
  1338  0360  1903               	skipnz
  1339  0361  2B63               	goto	l2125
  1340  0362  2B71               	goto	l1911
  1341  0363                     l2125:
  1342                           
  1343                           ; Switch size 1, requested type "simple"
  1344                           ; Number of cases is 4, Range of values is 0 to 3
  1345                           ; switch strategies available:
  1346                           ; Name         Instructions Cycles
  1347                           ; simple_byte           13     7 (average)
  1348                           ; direct_byte           20     8 (fixed)
  1349                           ; jumptable            260     6 (fixed)
  1350                           ;	Chosen strategy is simple_byte
  1351  0363  0875               	movf	??_guardarservos,w
  1352  0364  3A00               	xorlw	0	; case 0
  1353  0365  1903               	skipnz
  1354  0366  2B47               	goto	l1899
  1355  0367  3A01               	xorlw	1	; case 1
  1356  0368  1903               	skipnz
  1357  0369  2B4C               	goto	l1901
  1358  036A  3A03               	xorlw	3	; case 2
  1359  036B  1903               	skipnz
  1360  036C  2B51               	goto	l1903
  1361  036D  3A01               	xorlw	1	; case 3
  1362  036E  1903               	skipnz
  1363  036F  2B56               	goto	l1905
  1364  0370  2B71               	goto	l1911
  1365  0371                     l1911:
  1366                           
  1367                           ;mainP2.c: 408:         guardarposiciones(datEEPROM,addEEPROM);
  1368  0371  0822               	movf	_addEEPROM,w
  1369  0372  00F5               	movwf	??_guardarservos
  1370  0373  0875               	movf	??_guardarservos,w
  1371  0374  00F3               	movwf	guardarposiciones@direccion
  1372  0375  0821               	movf	_datEEPROM,w
  1373  0376  120A  118A  2388  120A  118A  	fcall	_guardarposiciones
  1374  037B                     l1913:
  1375                           
  1376                           ;mainP2.c: 409:     }
  1377  037B  3001               	movlw	1
  1378  037C  00F5               	movwf	??_guardarservos
  1379  037D  0875               	movf	??_guardarservos,w
  1380  037E  1283               	bcf	3,5	;RP0=0, select bank0
  1381  037F  1303               	bcf	3,6	;RP1=0, select bank0
  1382  0380  07A9               	addwf	guardarservos@n,f
  1383  0381                     l1915:
  1384  0381  3004               	movlw	4
  1385  0382  0229               	subwf	guardarservos@n,w
  1386  0383  1C03               	skipc
  1387  0384  2B86               	goto	u741
  1388  0385  2B87               	goto	u740
  1389  0386                     u741:
  1390  0386  2B41               	goto	l1897
  1391  0387                     u740:
  1392  0387                     l217:
  1393  0387  0008               	return
  1394  0388                     __end_of_guardarservos:
  1395                           
  1396                           	psect	text5
  1397  0388                     __ptext5:	
  1398 ;; *************** function _guardarposiciones *****************
  1399 ;; Defined at:
  1400 ;;		line 381 in file "mainP2.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  guardar         1    wreg     unsigned char 
  1403 ;;  direccion       1    3[COMMON] unsigned char 
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;  guardar         1    4[COMMON] unsigned char 
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  1    wreg      void 
  1408 ;; Registers used:
  1409 ;;		wreg
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1415 ;;      Params:         1       0       0       0       0
  1416 ;;      Locals:         1       0       0       0       0
  1417 ;;      Temps:          0       0       0       0       0
  1418 ;;      Totals:         2       0       0       0       0
  1419 ;;Total ram usage:        2 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; Hardware stack levels required when called:    1
  1422 ;; This function calls:
  1423 ;;		Nothing
  1424 ;; This function is called by:
  1425 ;;		_guardarservos
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           
  1430                           ;psect for function _guardarposiciones
  1431  0388                     _guardarposiciones:
  1432                           
  1433                           ;incstack = 0
  1434                           ; Regs used in _guardarposiciones: [wreg]
  1435                           ;guardarposiciones@guardar stored from wreg
  1436  0388  00F4               	movwf	guardarposiciones@guardar
  1437  0389                     l1881:
  1438                           
  1439                           ;mainP2.c: 382:     EEADR = direccion;
  1440  0389  0873               	movf	guardarposiciones@direccion,w
  1441  038A  1283               	bcf	3,5	;RP0=0, select bank2
  1442  038B  1703               	bsf	3,6	;RP1=1, select bank2
  1443  038C  008D               	movwf	13	;volatile
  1444                           
  1445                           ;mainP2.c: 383:     EEDAT = guardar;
  1446  038D  0874               	movf	guardarposiciones@guardar,w
  1447  038E  008C               	movwf	12	;volatile
  1448  038F                     l1883:
  1449                           
  1450                           ;mainP2.c: 384:     EECON1bits.WREN = 1;
  1451  038F  1683               	bsf	3,5	;RP0=1, select bank3
  1452  0390  1703               	bsf	3,6	;RP1=1, select bank3
  1453  0391  150C               	bsf	12,2	;volsfr
  1454  0392                     l1885:
  1455                           
  1456                           ;mainP2.c: 385:     INTCONbits.GIE = 0;
  1457  0392  138B               	bcf	11,7	;volatile
  1458  0393                     l200:	
  1459                           ;mainP2.c: 386:     while(INTCONbits.GIE){}
  1460                           
  1461  0393  1B8B               	btfsc	11,7	;volatile
  1462  0394  2B96               	goto	u721
  1463  0395  2B97               	goto	u720
  1464  0396                     u721:
  1465  0396  2B93               	goto	l200
  1466  0397                     u720:
  1467  0397                     l1887:
  1468                           
  1469                           ;mainP2.c: 387:     EECON2 = 0X55;
  1470  0397  3055               	movlw	85
  1471  0398  1683               	bsf	3,5	;RP0=1, select bank3
  1472  0399  1703               	bsf	3,6	;RP1=1, select bank3
  1473  039A  008D               	movwf	13	;volsfr
  1474                           
  1475                           ;mainP2.c: 388:     EECON2 = 0XAA;
  1476  039B  30AA               	movlw	170
  1477  039C  008D               	movwf	13	;volsfr
  1478  039D                     l1889:
  1479                           
  1480                           ;mainP2.c: 389:     EECON1bits.WR = 1;
  1481  039D  148C               	bsf	12,1	;volsfr
  1482  039E                     l203:	
  1483                           ;mainP2.c: 390:     while(EECON1bits.WR){}
  1484                           
  1485  039E  188C               	btfsc	12,1	;volsfr
  1486  039F  2BA1               	goto	u731
  1487  03A0  2BA2               	goto	u730
  1488  03A1                     u731:
  1489  03A1  2B9E               	goto	l203
  1490  03A2                     u730:
  1491  03A2                     l205:
  1492                           
  1493                           ;mainP2.c: 391:     INTCONbits.GIE = 1;
  1494  03A2  178B               	bsf	11,7	;volatile
  1495                           
  1496                           ;mainP2.c: 392:     EECON1bits.WREN = 0;
  1497  03A3  110C               	bcf	12,2	;volsfr
  1498  03A4                     l206:
  1499  03A4  0008               	return
  1500  03A5                     __end_of_guardarposiciones:
  1501                           
  1502                           	psect	text6
  1503  0287                     __ptext6:	
  1504 ;; *************** function _configuraciones *****************
  1505 ;; Defined at:
  1506 ;;		line 219 in file "mainP2.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;		None
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;		None
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg, status,2, status,0
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1520 ;;      Params:         0       0       0       0       0
  1521 ;;      Locals:         0       0       0       0       0
  1522 ;;      Temps:          0       0       0       0       0
  1523 ;;      Totals:         0       0       0       0       0
  1524 ;;Total ram usage:        0 bytes
  1525 ;; Hardware stack levels used:    1
  1526 ;; Hardware stack levels required when called:    1
  1527 ;; This function calls:
  1528 ;;		Nothing
  1529 ;; This function is called by:
  1530 ;;		_main
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           
  1535                           ;psect for function _configuraciones
  1536  0287                     _configuraciones:
  1537  0287                     l1371:	
  1538                           ;incstack = 0
  1539                           ; Regs used in _configuraciones: [wreg+status,2+status,0]
  1540                           
  1541                           
  1542                           ;mainP2.c: 221:     ANSEL = 0X0F;
  1543  0287  300F               	movlw	15
  1544  0288  1683               	bsf	3,5	;RP0=1, select bank3
  1545  0289  1703               	bsf	3,6	;RP1=1, select bank3
  1546  028A  0088               	movwf	8	;volatile
  1547  028B                     l1373:
  1548                           
  1549                           ;mainP2.c: 222:     ANSELH = 0X00;
  1550  028B  0189               	clrf	9	;volatile
  1551  028C                     l1375:
  1552                           
  1553                           ;mainP2.c: 223:     TRISA = 0X0F;
  1554  028C  300F               	movlw	15
  1555  028D  1683               	bsf	3,5	;RP0=1, select bank1
  1556  028E  1303               	bcf	3,6	;RP1=0, select bank1
  1557  028F  0085               	movwf	5	;volatile
  1558  0290                     l1377:
  1559                           
  1560                           ;mainP2.c: 224:     TRISB = 0X07;
  1561  0290  3007               	movlw	7
  1562  0291  0086               	movwf	6	;volatile
  1563  0292                     l1379:
  1564                           
  1565                           ;mainP2.c: 225:     TRISC = 0X80;
  1566  0292  3080               	movlw	128
  1567  0293  0087               	movwf	7	;volatile
  1568                           
  1569                           ;mainP2.c: 226:     TRISD = 0X00;
  1570  0294  0188               	clrf	8	;volatile
  1571                           
  1572                           ;mainP2.c: 227:     TRISE = 0X00;
  1573  0295  0189               	clrf	9	;volatile
  1574                           
  1575                           ;mainP2.c: 228:     PORTA = 0X00;
  1576  0296  1283               	bcf	3,5	;RP0=0, select bank0
  1577  0297  1303               	bcf	3,6	;RP1=0, select bank0
  1578  0298  0185               	clrf	5	;volatile
  1579                           
  1580                           ;mainP2.c: 229:     PORTB = 0X00;
  1581  0299  0186               	clrf	6	;volatile
  1582                           
  1583                           ;mainP2.c: 230:     PORTC = 0X00;
  1584  029A  0187               	clrf	7	;volatile
  1585                           
  1586                           ;mainP2.c: 231:     PORTD = 0X00;
  1587  029B  0188               	clrf	8	;volatile
  1588                           
  1589                           ;mainP2.c: 232:     PORTE = 0X00;
  1590  029C  0189               	clrf	9	;volatile
  1591                           
  1592                           ;mainP2.c: 233:     posicion = 0;
  1593  029D  01A0               	clrf	_posicion
  1594  029E                     l1381:
  1595                           
  1596                           ;mainP2.c: 235:     OSCCONbits.IRCF = 0b111;
  1597  029E  3070               	movlw	112
  1598  029F  1683               	bsf	3,5	;RP0=1, select bank1
  1599  02A0  1303               	bcf	3,6	;RP1=0, select bank1
  1600  02A1  048F               	iorwf	15,f	;volatile
  1601  02A2                     l1383:
  1602                           
  1603                           ;mainP2.c: 236:     OSCCONbits.SCS = 0b1;
  1604  02A2  140F               	bsf	15,0	;volatile
  1605  02A3                     l1385:
  1606                           
  1607                           ;mainP2.c: 239:     T1CONbits.T1CKPS = 0B11;
  1608  02A3  3030               	movlw	48
  1609  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  1610  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  1611  02A6  0490               	iorwf	16,f	;volatile
  1612  02A7                     l1387:
  1613                           
  1614                           ;mainP2.c: 240:     TMR1H = 0B00001011;
  1615  02A7  300B               	movlw	11
  1616  02A8  008F               	movwf	15	;volatile
  1617  02A9                     l1389:
  1618                           
  1619                           ;mainP2.c: 241:     TMR1L = 0B11010001;
  1620  02A9  30D1               	movlw	209
  1621  02AA  008E               	movwf	14	;volatile
  1622  02AB                     l1391:
  1623                           
  1624                           ;mainP2.c: 242:     T1CONbits.TMR1ON = 0;
  1625  02AB  1010               	bcf	16,0	;volatile
  1626  02AC                     l1393:
  1627                           
  1628                           ;mainP2.c: 245:     INTCONbits.TMR0IF = 0;
  1629  02AC  110B               	bcf	11,2	;volatile
  1630  02AD                     l1395:
  1631                           
  1632                           ;mainP2.c: 246:     INTCONbits.TMR0IE = 1;
  1633  02AD  168B               	bsf	11,5	;volatile
  1634  02AE                     l1397:
  1635                           
  1636                           ;mainP2.c: 247:     PIR1bits.TMR1IF = 0;
  1637  02AE  100C               	bcf	12,0	;volatile
  1638  02AF                     l1399:
  1639                           
  1640                           ;mainP2.c: 248:     PIE1bits.TMR1IE = 1;
  1641  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  1642  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  1643  02B1  140C               	bsf	12,0	;volatile
  1644  02B2                     l1401:
  1645                           
  1646                           ;mainP2.c: 249:     INTCONbits.RBIF = 0;
  1647  02B2  100B               	bcf	11,0	;volatile
  1648  02B3                     l1403:
  1649                           
  1650                           ;mainP2.c: 250:     INTCONbits.RBIE = 0;
  1651  02B3  118B               	bcf	11,3	;volatile
  1652  02B4                     l1405:
  1653                           
  1654                           ;mainP2.c: 251:     INTCONbits.PEIE = 1;
  1655  02B4  170B               	bsf	11,6	;volatile
  1656  02B5                     l1407:
  1657                           
  1658                           ;mainP2.c: 252:     PIE1bits.RCIE = 1;
  1659  02B5  168C               	bsf	12,5	;volatile
  1660  02B6                     l1409:
  1661                           
  1662                           ;mainP2.c: 253:     INTCONbits.GIE = 1;
  1663  02B6  178B               	bsf	11,7	;volatile
  1664  02B7                     l1411:
  1665                           
  1666                           ;mainP2.c: 256:     IOCBbits.IOCB0 = 1;
  1667  02B7  1416               	bsf	22,0	;volatile
  1668  02B8                     l1413:
  1669                           
  1670                           ;mainP2.c: 257:     IOCBbits.IOCB1 = 1;
  1671  02B8  1496               	bsf	22,1	;volatile
  1672  02B9                     l1415:
  1673                           
  1674                           ;mainP2.c: 258:     IOCBbits.IOCB2 = 1;
  1675  02B9  1516               	bsf	22,2	;volatile
  1676  02BA                     l1417:
  1677                           
  1678                           ;mainP2.c: 261:     ADCON0bits.ADCS = 0b10;
  1679  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1680  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1681  02BC  081F               	movf	31,w	;volatile
  1682  02BD  393F               	andlw	-193
  1683  02BE  3880               	iorlw	128
  1684  02BF  009F               	movwf	31	;volatile
  1685  02C0                     l1419:
  1686                           
  1687                           ;mainP2.c: 262:     ADCON0bits.CHS = 0b0000;
  1688  02C0  30C3               	movlw	-61
  1689  02C1  059F               	andwf	31,f	;volatile
  1690  02C2                     l1421:
  1691                           
  1692                           ;mainP2.c: 263:     ADCON0bits.GO = 0b0;
  1693  02C2  109F               	bcf	31,1	;volatile
  1694  02C3                     l1423:
  1695                           
  1696                           ;mainP2.c: 264:     ADCON0bits.ADON = 0b1;
  1697  02C3  141F               	bsf	31,0	;volatile
  1698  02C4                     l1425:
  1699                           
  1700                           ;mainP2.c: 265:     ADCON1bits.ADFM = 0b0;
  1701  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  1702  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  1703  02C6  139F               	bcf	31,7	;volatile
  1704  02C7                     l1427:
  1705                           
  1706                           ;mainP2.c: 266:     ADCON1bits.VCFG1 = 0b0;
  1707  02C7  129F               	bcf	31,5	;volatile
  1708  02C8                     l1429:
  1709                           
  1710                           ;mainP2.c: 267:     ADCON1bits.VCFG0 = 0b0;
  1711  02C8  121F               	bcf	31,4	;volatile
  1712  02C9                     l1431:
  1713                           
  1714                           ;mainP2.c: 270:     SPBRG = 12;
  1715  02C9  300C               	movlw	12
  1716  02CA  0099               	movwf	25	;volatile
  1717  02CB                     l1433:
  1718                           
  1719                           ;mainP2.c: 271:     TXSTAbits.BRGH = 0;
  1720  02CB  1118               	bcf	24,2	;volatile
  1721  02CC                     l1435:
  1722                           
  1723                           ;mainP2.c: 272:     TXSTAbits.TXEN = 1;
  1724  02CC  1698               	bsf	24,5	;volatile
  1725  02CD                     l1437:
  1726                           
  1727                           ;mainP2.c: 273:     RCSTAbits.CREN = 1;
  1728  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  1729  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  1730  02CF  1618               	bsf	24,4	;volatile
  1731  02D0                     l1439:
  1732                           
  1733                           ;mainP2.c: 274:     TXSTAbits.SYNC = 0;
  1734  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  1735  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  1736  02D2  1218               	bcf	24,4	;volatile
  1737  02D3                     l1441:
  1738                           
  1739                           ;mainP2.c: 275:     RCSTAbits.SPEN = 1;
  1740  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  1741  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  1742  02D5  1798               	bsf	24,7	;volatile
  1743  02D6                     l1443:
  1744                           
  1745                           ;mainP2.c: 278:     OSCCONbits.SCS = 1;
  1746  02D6  1683               	bsf	3,5	;RP0=1, select bank1
  1747  02D7  1303               	bcf	3,6	;RP1=0, select bank1
  1748  02D8  140F               	bsf	15,0	;volatile
  1749  02D9                     l1445:
  1750                           
  1751                           ;mainP2.c: 279:     OPTION_REGbits.T0CS = 0;
  1752  02D9  1281               	bcf	1,5	;volatile
  1753  02DA                     l1447:
  1754                           
  1755                           ;mainP2.c: 280:     OPTION_REGbits.PSA = 0;
  1756  02DA  1181               	bcf	1,3	;volatile
  1757  02DB                     l1449:
  1758                           
  1759                           ;mainP2.c: 281:     OPTION_REGbits.PS2 = 0;
  1760  02DB  1101               	bcf	1,2	;volatile
  1761  02DC                     l1451:
  1762                           
  1763                           ;mainP2.c: 282:     OPTION_REGbits.PS1 = 1;
  1764  02DC  1481               	bsf	1,1	;volatile
  1765  02DD                     l1453:
  1766                           
  1767                           ;mainP2.c: 283:     OPTION_REGbits.PS0 = 1;
  1768  02DD  1401               	bsf	1,0	;volatile
  1769  02DE                     l1455:
  1770                           
  1771                           ;mainP2.c: 284:     INTCONbits.T0IF = 0;
  1772  02DE  110B               	bcf	11,2	;volatile
  1773  02DF                     l1457:
  1774                           
  1775                           ;mainP2.c: 285:     TMR0 = 131;
  1776  02DF  3083               	movlw	131
  1777  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  1778  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  1779  02E2  0081               	movwf	1	;volatile
  1780  02E3                     l1459:
  1781                           
  1782                           ;mainP2.c: 286:     SERVOS.bit1 = 0;
  1783  02E3  12FA               	bcf	_SERVOS,5
  1784  02E4                     l1461:
  1785                           
  1786                           ;mainP2.c: 287:     SERVOS.modo = 0;
  1787  02E4  137A               	bcf	_SERVOS,6
  1788  02E5                     l154:
  1789  02E5  0008               	return
  1790  02E6                     __end_of_configuraciones:
  1791                           
  1792                           	psect	text7
  1793  0106                     __ptext7:	
  1794 ;; *************** function _AnalogReadServo *****************
  1795 ;; Defined at:
  1796 ;;		line 328 in file "mainP2.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;		None
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;		None
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  1    wreg      void 
  1803 ;; Registers used:
  1804 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1810 ;;      Params:         0       0       0       0       0
  1811 ;;      Locals:         0       0       0       0       0
  1812 ;;      Temps:          2       0       0       0       0
  1813 ;;      Totals:         2       0       0       0       0
  1814 ;;Total ram usage:        2 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:    1
  1817 ;; This function calls:
  1818 ;;		Nothing
  1819 ;; This function is called by:
  1820 ;;		_main
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           
  1825                           ;psect for function _AnalogReadServo
  1826  0106                     _AnalogReadServo:
  1827  0106                     l1463:	
  1828                           ;incstack = 0
  1829                           ; Regs used in _AnalogReadServo: [wreg-fsr0h+status,2+status,0]
  1830                           
  1831                           
  1832                           ;mainP2.c: 330:     if(!ADCON0bits.GO){
  1833  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1834  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1835  0108  189F               	btfsc	31,1	;volatile
  1836  0109  290B               	goto	u391
  1837  010A  290C               	goto	u390
  1838  010B                     u391:
  1839  010B  29A6               	goto	l191
  1840  010C                     u390:
  1841  010C  2983               	goto	l1509
  1842  010D                     l1467:
  1843                           
  1844                           ;mainP2.c: 333:                  POT2 = ADRESH;
  1845  010D  081E               	movf	30,w	;volatile
  1846  010E  00F3               	movwf	??_AnalogReadServo
  1847  010F  0873               	movf	??_AnalogReadServo,w
  1848  0110  00F8               	movwf	_POT2
  1849                           
  1850                           ;mainP2.c: 334:             break;
  1851  0111  29A6               	goto	l191
  1852  0112                     l1469:
  1853                           
  1854                           ;mainP2.c: 337:                 ADCON0bits.CHS = 2;
  1855  0112  081F               	movf	31,w	;volatile
  1856  0113  39C3               	andlw	-61
  1857  0114  3808               	iorlw	8
  1858  0115  009F               	movwf	31	;volatile
  1859  0116                     l1471:
  1860                           
  1861                           ;mainP2.c: 338:                 if(POT2>190) POT2 = 190;
  1862  0116  30BF               	movlw	191
  1863  0117  0278               	subwf	_POT2,w
  1864  0118  1C03               	skipc
  1865  0119  291B               	goto	u401
  1866  011A  291C               	goto	u400
  1867  011B                     u401:
  1868  011B  2920               	goto	l177
  1869  011C                     u400:
  1870  011C                     l1473:
  1871  011C  30BE               	movlw	190
  1872  011D  00F3               	movwf	??_AnalogReadServo
  1873  011E  0873               	movf	??_AnalogReadServo,w
  1874  011F  00F8               	movwf	_POT2
  1875  0120                     l177:
  1876                           
  1877                           ;mainP2.c: 339:                 if(POT2<10) POT2 = 10;
  1878  0120  300A               	movlw	10
  1879  0121  0278               	subwf	_POT2,w
  1880  0122  1803               	skipnc
  1881  0123  2925               	goto	u411
  1882  0124  2926               	goto	u410
  1883  0125                     u411:
  1884  0125  29A6               	goto	l191
  1885  0126                     u410:
  1886  0126                     l1475:
  1887  0126  300A               	movlw	10
  1888  0127  00F3               	movwf	??_AnalogReadServo
  1889  0128  0873               	movf	??_AnalogReadServo,w
  1890  0129  00F8               	movwf	_POT2
  1891  012A  29A6               	goto	l191
  1892  012B                     l1477:
  1893                           
  1894                           ;mainP2.c: 343:                 POT3 = ADRESH;
  1895  012B  081E               	movf	30,w	;volatile
  1896  012C  00F3               	movwf	??_AnalogReadServo
  1897  012D  0873               	movf	??_AnalogReadServo,w
  1898  012E  00A6               	movwf	_POT3
  1899                           
  1900                           ;mainP2.c: 344:             break;
  1901  012F  29A6               	goto	l191
  1902  0130                     l1479:
  1903                           
  1904                           ;mainP2.c: 347:                 ADCON0bits.CHS = 3;
  1905  0130  081F               	movf	31,w	;volatile
  1906  0131  39C3               	andlw	-61
  1907  0132  380C               	iorlw	12
  1908  0133  009F               	movwf	31	;volatile
  1909  0134                     l1481:
  1910                           
  1911                           ;mainP2.c: 348:                 if(POT3>190) POT3 = 190;
  1912  0134  30BF               	movlw	191
  1913  0135  0226               	subwf	_POT3,w
  1914  0136  1C03               	skipc
  1915  0137  2939               	goto	u421
  1916  0138  293A               	goto	u420
  1917  0139                     u421:
  1918  0139  293E               	goto	l181
  1919  013A                     u420:
  1920  013A                     l1483:
  1921  013A  30BE               	movlw	190
  1922  013B  00F3               	movwf	??_AnalogReadServo
  1923  013C  0873               	movf	??_AnalogReadServo,w
  1924  013D  00A6               	movwf	_POT3
  1925  013E                     l181:
  1926                           
  1927                           ;mainP2.c: 349:                 if(POT3<10) POT3 = 10;
  1928  013E  300A               	movlw	10
  1929  013F  0226               	subwf	_POT3,w
  1930  0140  1803               	skipnc
  1931  0141  2943               	goto	u431
  1932  0142  2944               	goto	u430
  1933  0143                     u431:
  1934  0143  29A6               	goto	l191
  1935  0144                     u430:
  1936  0144                     l1485:
  1937  0144  300A               	movlw	10
  1938  0145  00F3               	movwf	??_AnalogReadServo
  1939  0146  0873               	movf	??_AnalogReadServo,w
  1940  0147  00A6               	movwf	_POT3
  1941  0148  29A6               	goto	l191
  1942  0149                     l1487:
  1943                           
  1944                           ;mainP2.c: 353:                 POT4 = ADRESH;
  1945  0149  081E               	movf	30,w	;volatile
  1946  014A  00F3               	movwf	??_AnalogReadServo
  1947  014B  0873               	movf	??_AnalogReadServo,w
  1948  014C  00A5               	movwf	_POT4
  1949                           
  1950                           ;mainP2.c: 354:             break;
  1951  014D  29A6               	goto	l191
  1952  014E                     l1489:
  1953                           
  1954                           ;mainP2.c: 357:                 ADCON0bits.CHS = 0;
  1955  014E  30C3               	movlw	-61
  1956  014F  059F               	andwf	31,f	;volatile
  1957  0150                     l1491:
  1958                           
  1959                           ;mainP2.c: 358:                 if(POT4>190) POT4 = 190;
  1960  0150  30BF               	movlw	191
  1961  0151  0225               	subwf	_POT4,w
  1962  0152  1C03               	skipc
  1963  0153  2955               	goto	u441
  1964  0154  2956               	goto	u440
  1965  0155                     u441:
  1966  0155  295A               	goto	l185
  1967  0156                     u440:
  1968  0156                     l1493:
  1969  0156  30BE               	movlw	190
  1970  0157  00F3               	movwf	??_AnalogReadServo
  1971  0158  0873               	movf	??_AnalogReadServo,w
  1972  0159  00A5               	movwf	_POT4
  1973  015A                     l185:
  1974                           
  1975                           ;mainP2.c: 359:                 if(POT4<10) POT4 = 10;
  1976  015A  300A               	movlw	10
  1977  015B  0225               	subwf	_POT4,w
  1978  015C  1803               	skipnc
  1979  015D  295F               	goto	u451
  1980  015E  2960               	goto	u450
  1981  015F                     u451:
  1982  015F  29A6               	goto	l191
  1983  0160                     u450:
  1984  0160                     l1495:
  1985  0160  300A               	movlw	10
  1986  0161  00F3               	movwf	??_AnalogReadServo
  1987  0162  0873               	movf	??_AnalogReadServo,w
  1988  0163  00A5               	movwf	_POT4
  1989  0164  29A6               	goto	l191
  1990  0165                     l1497:
  1991                           
  1992                           ;mainP2.c: 363:                 POT1 = ADRESH;
  1993  0165  081E               	movf	30,w	;volatile
  1994  0166  00F3               	movwf	??_AnalogReadServo
  1995  0167  0873               	movf	??_AnalogReadServo,w
  1996  0168  00F9               	movwf	_POT1
  1997                           
  1998                           ;mainP2.c: 364:             break;
  1999  0169  29A6               	goto	l191
  2000  016A                     l1499:
  2001                           
  2002                           ;mainP2.c: 367:                 ADCON0bits.CHS = 1;
  2003  016A  081F               	movf	31,w	;volatile
  2004  016B  39C3               	andlw	-61
  2005  016C  3804               	iorlw	4
  2006  016D  009F               	movwf	31	;volatile
  2007  016E                     l1501:
  2008                           
  2009                           ;mainP2.c: 368:                 if(POT1>190) POT1 = 190;
  2010  016E  30BF               	movlw	191
  2011  016F  0279               	subwf	_POT1,w
  2012  0170  1C03               	skipc
  2013  0171  2973               	goto	u461
  2014  0172  2974               	goto	u460
  2015  0173                     u461:
  2016  0173  2978               	goto	l189
  2017  0174                     u460:
  2018  0174                     l1503:
  2019  0174  30BE               	movlw	190
  2020  0175  00F3               	movwf	??_AnalogReadServo
  2021  0176  0873               	movf	??_AnalogReadServo,w
  2022  0177  00F9               	movwf	_POT1
  2023  0178                     l189:
  2024                           
  2025                           ;mainP2.c: 369:                 if(POT1<10) POT1 = 10;
  2026  0178  300A               	movlw	10
  2027  0179  0279               	subwf	_POT1,w
  2028  017A  1803               	skipnc
  2029  017B  297D               	goto	u471
  2030  017C  297E               	goto	u470
  2031  017D                     u471:
  2032  017D  29A6               	goto	l191
  2033  017E                     u470:
  2034  017E                     l1505:
  2035  017E  300A               	movlw	10
  2036  017F  00F3               	movwf	??_AnalogReadServo
  2037  0180  0873               	movf	??_AnalogReadServo,w
  2038  0181  00F9               	movwf	_POT1
  2039  0182  29A6               	goto	l191
  2040  0183                     l1509:
  2041  0183  087A               	movf	_SERVOS,w
  2042  0184  391F               	andlw	31
  2043  0185  00F3               	movwf	??_AnalogReadServo
  2044  0186  01F4               	clrf	??_AnalogReadServo+1
  2045                           
  2046                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2047                           ; Switch size 1, requested type "simple"
  2048                           ; Number of cases is 1, Range of values is 0 to 0
  2049                           ; switch strategies available:
  2050                           ; Name         Instructions Cycles
  2051                           ; simple_byte            4     3 (average)
  2052                           ; direct_byte           11     8 (fixed)
  2053                           ; jumptable            260     6 (fixed)
  2054                           ;	Chosen strategy is simple_byte
  2055  0187  0874               	movf	??_AnalogReadServo+1,w
  2056  0188  3A00               	xorlw	0	; case 0
  2057  0189  1903               	skipnz
  2058  018A  298C               	goto	l2127
  2059  018B  29A6               	goto	l191
  2060  018C                     l2127:
  2061                           
  2062                           ; Switch size 1, requested type "simple"
  2063                           ; Number of cases is 8, Range of values is 0 to 10
  2064                           ; switch strategies available:
  2065                           ; Name         Instructions Cycles
  2066                           ; simple_byte           25    13 (average)
  2067                           ; direct_byte           41     8 (fixed)
  2068                           ; jumptable            260     6 (fixed)
  2069                           ;	Chosen strategy is simple_byte
  2070  018C  0873               	movf	??_AnalogReadServo,w
  2071  018D  3A00               	xorlw	0	; case 0
  2072  018E  1903               	skipnz
  2073  018F  290D               	goto	l1467
  2074  0190  3A01               	xorlw	1	; case 1
  2075  0191  1903               	skipnz
  2076  0192  2912               	goto	l1469
  2077  0193  3A02               	xorlw	2	; case 3
  2078  0194  1903               	skipnz
  2079  0195  292B               	goto	l1477
  2080  0196  3A07               	xorlw	7	; case 4
  2081  0197  1903               	skipnz
  2082  0198  2930               	goto	l1479
  2083  0199  3A02               	xorlw	2	; case 6
  2084  019A  1903               	skipnz
  2085  019B  2949               	goto	l1487
  2086  019C  3A01               	xorlw	1	; case 7
  2087  019D  1903               	skipnz
  2088  019E  294E               	goto	l1489
  2089  019F  3A0E               	xorlw	14	; case 9
  2090  01A0  1903               	skipnz
  2091  01A1  2965               	goto	l1497
  2092  01A2  3A03               	xorlw	3	; case 10
  2093  01A3  1903               	skipnz
  2094  01A4  296A               	goto	l1499
  2095  01A5  29A6               	goto	l191
  2096  01A6                     l191:
  2097  01A6  0008               	return
  2098  01A7                     __end_of_AnalogReadServo:
  2099                           
  2100                           	psect	text8
  2101  01A7                     __ptext8:	
  2102 ;; *************** function _rutInter *****************
  2103 ;; Defined at:
  2104 ;;		line 84 in file "mainP2.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;		None
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg, status,2, status,0
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2118 ;;      Params:         0       0       0       0       0
  2119 ;;      Locals:         0       0       0       0       0
  2120 ;;      Temps:          3       0       0       0       0
  2121 ;;      Totals:         3       0       0       0       0
  2122 ;;Total ram usage:        3 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		Interrupt level 1
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           
  2132                           ;psect for function _rutInter
  2133  01A7                     _rutInter:
  2134  01A7                     i1l1621:
  2135                           
  2136                           ;mainP2.c: 86:     if(INTCONbits.TMR0IF) {
  2137  01A7  1D0B               	btfss	11,2	;volatile
  2138  01A8  29AA               	goto	u52_21
  2139  01A9  29AB               	goto	u52_20
  2140  01AA                     u52_21:
  2141  01AA  29BD               	goto	i1l109
  2142  01AB                     u52_20:
  2143  01AB                     i1l1623:
  2144                           
  2145                           ;mainP2.c: 87:         SERVOS.bit0++;
  2146  01AB  087A               	movf	_SERVOS,w
  2147  01AC  391F               	andlw	31
  2148  01AD  00F0               	movwf	??_rutInter
  2149  01AE  0AF0               	incf	??_rutInter,f
  2150  01AF  087A               	movf	_SERVOS,w
  2151  01B0  0670               	xorwf	??_rutInter,w
  2152  01B1  39E0               	andlw	-32
  2153  01B2  0670               	xorwf	??_rutInter,w
  2154  01B3  00FA               	movwf	_SERVOS
  2155  01B4                     i1l1625:
  2156                           
  2157                           ;mainP2.c: 88:         SERVOS.bit1 = 1;
  2158  01B4  16FA               	bsf	_SERVOS,5
  2159  01B5                     i1l1627:
  2160                           
  2161                           ;mainP2.c: 89:         INTCONbits.TMR0IF = 0;
  2162  01B5  110B               	bcf	11,2	;volatile
  2163  01B6                     i1l1629:
  2164                           
  2165                           ;mainP2.c: 90:         if(SERVOS.modo) ADCON0bits.GO = 1;
  2166  01B6  1F7A               	btfss	_SERVOS,6
  2167  01B7  29B9               	goto	u53_21
  2168  01B8  29BA               	goto	u53_20
  2169  01B9                     u53_21:
  2170  01B9  29BD               	goto	i1l109
  2171  01BA                     u53_20:
  2172  01BA                     i1l1631:
  2173  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2174  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  2175  01BC  149F               	bsf	31,1	;volatile
  2176  01BD                     i1l109:	
  2177                           ;mainP2.c: 91:     }
  2178                           
  2179                           
  2180                           ;mainP2.c: 93:     if(INTCONbits.RBIF && PORTBbits.RB0){
  2181  01BD  1C0B               	btfss	11,0	;volatile
  2182  01BE  29C0               	goto	u54_21
  2183  01BF  29C1               	goto	u54_20
  2184  01C0                     u54_21:
  2185  01C0  29D1               	goto	i1l1639
  2186  01C1                     u54_20:
  2187  01C1                     i1l1633:
  2188  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  2189  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  2190  01C3  1C06               	btfss	6,0	;volatile
  2191  01C4  29C6               	goto	u55_21
  2192  01C5  29C7               	goto	u55_20
  2193  01C6                     u55_21:
  2194  01C6  29D1               	goto	i1l1639
  2195  01C7                     u55_20:
  2196  01C7                     i1l1635:
  2197                           
  2198                           ;mainP2.c: 94:         SERVOS.modo = ~SERVOS.modo;
  2199  01C7  1003               	clrc
  2200  01C8  1F7A               	btfss	_SERVOS,6
  2201  01C9  1403               	setc
  2202  01CA  1803               	btfsc	3,0
  2203  01CB  29CD               	goto	u56_21
  2204  01CC  29CF               	goto	u56_20
  2205  01CD                     u56_21:
  2206  01CD  177A               	bsf	_SERVOS,6
  2207  01CE  29D0               	goto	u57_24
  2208  01CF                     u56_20:
  2209  01CF  137A               	bcf	_SERVOS,6
  2210  01D0                     u57_24:
  2211  01D0                     i1l1637:
  2212                           
  2213                           ;mainP2.c: 95:         INTCONbits.RBIF = 0;
  2214  01D0  100B               	bcf	11,0	;volatile
  2215  01D1                     i1l1639:
  2216                           
  2217                           ;mainP2.c: 98:     if(INTCONbits.RBIF && PORTBbits.RB1){
  2218  01D1  1C0B               	btfss	11,0	;volatile
  2219  01D2  29D4               	goto	u58_21
  2220  01D3  29D5               	goto	u58_20
  2221  01D4                     u58_21:
  2222  01D4  29E0               	goto	i1l1651
  2223  01D5                     u58_20:
  2224  01D5                     i1l1641:
  2225  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2226  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2227  01D7  1C86               	btfss	6,1	;volatile
  2228  01D8  29DA               	goto	u59_21
  2229  01D9  29DB               	goto	u59_20
  2230  01DA                     u59_21:
  2231  01DA  29E0               	goto	i1l1651
  2232  01DB                     u59_20:
  2233  01DB                     i1l1643:
  2234                           
  2235                           ;mainP2.c: 99:         T1CONbits.TMR1ON = 1;
  2236  01DB  1410               	bsf	16,0	;volatile
  2237  01DC                     i1l1645:
  2238                           
  2239                           ;mainP2.c: 100:         PORTE = 1;
  2240  01DC  3001               	movlw	1
  2241  01DD  0089               	movwf	9	;volatile
  2242  01DE                     i1l1647:
  2243                           
  2244                           ;mainP2.c: 101:         SERVOS.guardar = 1;
  2245  01DE  17FA               	bsf	_SERVOS,7
  2246  01DF                     i1l1649:
  2247                           
  2248                           ;mainP2.c: 102:         INTCONbits.RBIF = 0;
  2249  01DF  100B               	bcf	11,0	;volatile
  2250  01E0                     i1l1651:
  2251                           
  2252                           ;mainP2.c: 105:     if(INTCONbits.RBIF && PORTBbits.RB2){
  2253  01E0  1C0B               	btfss	11,0	;volatile
  2254  01E1  29E3               	goto	u60_21
  2255  01E2  29E4               	goto	u60_20
  2256  01E3                     u60_21:
  2257  01E3  29F6               	goto	i1l1663
  2258  01E4                     u60_20:
  2259  01E4                     i1l1653:
  2260  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  2261  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  2262  01E6  1D06               	btfss	6,2	;volatile
  2263  01E7  29E9               	goto	u61_21
  2264  01E8  29EA               	goto	u61_20
  2265  01E9                     u61_21:
  2266  01E9  29F6               	goto	i1l1663
  2267  01EA                     u61_20:
  2268  01EA                     i1l1655:
  2269                           
  2270                           ;mainP2.c: 106:         PORTE ++;
  2271  01EA  3001               	movlw	1
  2272  01EB  00F0               	movwf	??_rutInter
  2273  01EC  0870               	movf	??_rutInter,w
  2274  01ED  0789               	addwf	9,f	;volatile
  2275  01EE                     i1l1657:
  2276                           
  2277                           ;mainP2.c: 107:         if(PORTE>=4) PORTE = 0;
  2278  01EE  3004               	movlw	4
  2279  01EF  0209               	subwf	9,w	;volatile
  2280  01F0  1C03               	skipc
  2281  01F1  29F3               	goto	u62_21
  2282  01F2  29F4               	goto	u62_20
  2283  01F3                     u62_21:
  2284  01F3  29F5               	goto	i1l1661
  2285  01F4                     u62_20:
  2286  01F4                     i1l1659:
  2287  01F4  0189               	clrf	9	;volatile
  2288  01F5                     i1l1661:
  2289                           
  2290                           ;mainP2.c: 108:         INTCONbits.RBIF = 0;
  2291  01F5  100B               	bcf	11,0	;volatile
  2292  01F6                     i1l1663:
  2293                           
  2294                           ;mainP2.c: 111:     INTCONbits.RBIF = 0;
  2295  01F6  100B               	bcf	11,0	;volatile
  2296  01F7                     i1l1665:
  2297                           
  2298                           ;mainP2.c: 113:     if(PIR1bits.RCIF){
  2299  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  2300  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  2301  01F9  1E8C               	btfss	12,5	;volatile
  2302  01FA  29FC               	goto	u63_21
  2303  01FB  29FD               	goto	u63_20
  2304  01FC                     u63_21:
  2305  01FC  2A0F               	goto	i1l1673
  2306  01FD                     u63_20:
  2307  01FD                     i1l1667:
  2308                           
  2309                           ;mainP2.c: 114:         EXTREC = RCREG;
  2310  01FD  081A               	movf	26,w	;volatile
  2311  01FE  00F0               	movwf	??_rutInter
  2312  01FF  0870               	movf	??_rutInter,w
  2313  0200  00A4               	movwf	_EXTREC
  2314  0201                     i1l1669:
  2315                           
  2316                           ;mainP2.c: 115:         UART.indicador = ~UART.indicador;
  2317  0201  1003               	clrc
  2318  0202  1C27               	btfss	_UART,0
  2319  0203  1403               	setc
  2320  0204  1803               	btfsc	3,0
  2321  0205  2A07               	goto	u64_21
  2322  0206  2A0B               	goto	u64_20
  2323  0207                     u64_21:
  2324  0207  1283               	bcf	3,5	;RP0=0, select bank0
  2325  0208  1303               	bcf	3,6	;RP1=0, select bank0
  2326  0209  1427               	bsf	_UART,0
  2327  020A  2A0E               	goto	u65_24
  2328  020B                     u64_20:
  2329  020B  1283               	bcf	3,5	;RP0=0, select bank0
  2330  020C  1303               	bcf	3,6	;RP1=0, select bank0
  2331  020D  1027               	bcf	_UART,0
  2332  020E                     u65_24:
  2333  020E                     i1l1671:
  2334                           
  2335                           ;mainP2.c: 116:         UART.datorecep = 1;
  2336  020E  14A7               	bsf	_UART,1
  2337  020F                     i1l1673:
  2338                           
  2339                           ;mainP2.c: 119:     if(PIR1bits.TMR1IF){
  2340  020F  1C0C               	btfss	12,0	;volatile
  2341  0210  2A12               	goto	u66_21
  2342  0211  2A13               	goto	u66_20
  2343  0212                     u66_21:
  2344  0212  2A1D               	goto	i1l117
  2345  0213                     u66_20:
  2346  0213                     i1l1675:
  2347                           
  2348                           ;mainP2.c: 120:         SERVOS.guardar = 1;
  2349  0213  17FA               	bsf	_SERVOS,7
  2350  0214                     i1l1677:
  2351                           
  2352                           ;mainP2.c: 121:         posicion ++;
  2353  0214  3001               	movlw	1
  2354  0215  00F0               	movwf	??_rutInter
  2355  0216  0870               	movf	??_rutInter,w
  2356  0217  07A0               	addwf	_posicion,f
  2357  0218                     i1l1679:
  2358                           
  2359                           ;mainP2.c: 122:         PIR1bits.TMR1IF = 0;
  2360  0218  100C               	bcf	12,0	;volatile
  2361  0219                     i1l1681:
  2362                           
  2363                           ;mainP2.c: 123:         TMR1H = 0B00001011;
  2364  0219  300B               	movlw	11
  2365  021A  008F               	movwf	15	;volatile
  2366  021B                     i1l1683:
  2367                           
  2368                           ;mainP2.c: 124:         TMR1L = 0B11010001;
  2369  021B  30D1               	movlw	209
  2370  021C  008E               	movwf	14	;volatile
  2371  021D                     i1l117:
  2372  021D  0872               	movf	??_rutInter+2,w
  2373  021E  008A               	movwf	10
  2374  021F  0E71               	swapf	??_rutInter+1,w
  2375  0220  0083               	movwf	3
  2376  0221  0EFE               	swapf	btemp,f
  2377  0222  0E7E               	swapf	btemp,w
  2378  0223  0009               	retfie
  2379  0224                     __end_of_rutInter:
  2380  007E                     btemp	set	126	;btemp
  2381  007E                     wtemp0	set	126
  2382                           
  2383                           	psect	intentry
  2384  0004                     __pintentry:	
  2385                           ;incstack = 0
  2386                           ; Regs used in _rutInter: [wreg+status,2+status,0]
  2387                           
  2388  0004                     interrupt_function:
  2389  007E                     saved_w	set	btemp
  2390  0004  00FE               	movwf	btemp
  2391  0005  0E03               	swapf	3,w
  2392  0006  00F1               	movwf	??_rutInter+1
  2393  0007  080A               	movf	10,w
  2394  0008  00F2               	movwf	??_rutInter+2
  2395  0009  120A  118A  29A7   	ljmp	_rutInter
  2396                           
  2397                           	psect	config
  2398                           
  2399                           ;Config register CONFIG1 @ 0x2007
  2400                           ;	Oscillator Selection bits
  2401                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2402                           ;	Watchdog Timer Enable bit
  2403                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2404                           ;	Power-up Timer Enable bit
  2405                           ;	PWRTE = OFF, PWRT disabled
  2406                           ;	RE3/MCLR pin function select bit
  2407                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2408                           ;	Code Protection bit
  2409                           ;	CP = OFF, Program memory code protection is disabled
  2410                           ;	Data Code Protection bit
  2411                           ;	CPD = OFF, Data memory code protection is disabled
  2412                           ;	Brown Out Reset Selection bits
  2413                           ;	BOREN = OFF, BOR disabled
  2414                           ;	Internal External Switchover bit
  2415                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2416                           ;	Fail-Safe Clock Monitor Enabled bit
  2417                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2418                           ;	Low Voltage Programming Enable bit
  2419                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2420                           ;	In-Circuit Debugger Mode bit
  2421                           ;	DEBUG = 0x1, unprogrammed default
  2422  2007                     	org	8199
  2423  2007  20F4               	dw	8436
  2424                           
  2425                           ;Config register CONFIG2 @ 0x2008
  2426                           ;	Brown-out Reset Selection bit
  2427                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2428                           ;	Flash Program Memory Self Write Enable bits
  2429                           ;	WRT = OFF, Write protection off
  2430  2008                     	org	8200
  2431  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      4      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_leerSERVOS
    _leerSERVOS->_leerposiciones
    _guardarservos->_guardarposiciones

Critical Paths under _rutInter in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_guardarservos

Critical Paths under _rutInter in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rutInter in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutInter in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutInter in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     447
                                              2 BANK0      2     2      0
                    _AnalogReadServo
                    _configuraciones
                      _guardarservos
                         _leerSERVOS
                             _servos
 ---------------------------------------------------------------------------------
 (1) _servos                                               2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _leerSERVOS                                           4     4      0     134
                                              4 COMMON     4     4      0
                     _leerposiciones
 ---------------------------------------------------------------------------------
 (2) _leerposiciones                                       1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _guardarservos                                        4     4      0     313
                                              5 COMMON     2     2      0
                                              0 BANK0      2     2      0
                  _guardarposiciones
 ---------------------------------------------------------------------------------
 (2) _guardarposiciones                                    2     1      1     152
                                              3 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _configuraciones                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AnalogReadServo                                      2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _rutInter                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AnalogReadServo
   _configuraciones
   _guardarservos
     _guardarposiciones
   _leerSERVOS
     _leerposiciones
   _servos

 _rutInter (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      17       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      17      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed May 12 16:35:54 2021

                       l200 0393                         l203 039E                         l123 0090  
                       l220 03B1                         l205 03A2                         l206 03A4  
                       l134 0068                         l231 033C                         l127 008E  
                       l217 0387                         l154 02E5                         l148 00D7  
                       l181 013E                         l191 01A6                         l185 015A  
                       l177 0120                         l169 0286                         l189 0178  
                       u400 011C                         u401 011B                         u410 0126  
                       u411 0125                         u420 013A                         u500 0228  
                       u421 0139                         u501 0227                         u430 0144  
                       u510 022F                         u431 0143                         u511 022E  
                       u440 0156                         u441 0155                         u450 0160  
                       u451 015F                         u460 0174                         u461 0173  
                       u470 017E                         u390 010C                         u471 017D  
                       u391 010B                         u720 0397                         u721 0396  
                       u730 03A2                         u490 033C                         u731 03A1  
                       u491 033B                         u740 0387                         u741 0386  
                       u750 0029                         u751 0028                         u760 0036  
                       u761 0035                         u770 0097                         u771 0096  
                       u780 009D                         u781 009C                         u790 00A5  
                       u791 00A4                 leerSERVOS@n 0077                        l1401 02B2  
                      l2121 026C                        l1411 02B7                        l1403 02B3  
                      l2123 0324                        l1501 016E                        l1421 02C2  
                      l1413 02B8                        l1405 02B4                        l2125 0363  
                      l2117 0074                        l2127 018C                        l1503 0174  
                      l1431 02C9                        l1423 02C3                        l1415 02B9  
                      l1407 02B5                        l2119 00E3                        l1505 017E  
                      l1441 02D3                        l1433 02CB                        l1425 02C4  
                      l1417 02BA                        l1409 02B6                        l1601 0251  
                      l1451 02DC                        l1443 02D6                        l1435 02CC  
                      l1427 02C7                        l1419 02C0                        l1371 0287  
                      l1363 03A6                        l1611 0261                        l1603 0255  
                      l1509 0183                        l1461 02E4                        l1453 02DD  
                      l1445 02D9                        l1437 02CD                        l1429 02C8  
                      l1381 029E                        l1373 028B                        l1365 03AA  
                      l1605 0257                        l1471 0116                        l1463 0106  
                      l1455 02DE                        l1447 02DA                        l1439 02D0  
                      l1391 02AB                        l1383 02A2                        l1375 028C  
                      l1367 03AD                        l1551 02E8                        l1607 025B  
                      l1615 0263                        l1481 0134                        l1473 011C  
                      l1457 02DF                        l1449 02DB                        l1393 02AC  
                      l1385 02A3                        l1377 0290                        l1553 02F0  
                      l1545 02E7                        l1609 025D                        l1491 0150  
                      l1483 013A                        l1475 0126                        l1467 010D  
                      l1459 02E3                        l1395 02AD                        l1387 02A7  
                      l1379 0292                        l1555 02FA                        l1563 031C  
                      l1493 0156                        l1485 0144                        l1477 012B  
                      l1469 0112                        l1397 02AE                        l1389 02A9  
                      l1901 034C                        l1557 0304                        l1565 0332  
                      l1581 0233                        l1573 0224                        l1495 0160  
                      l1487 0149                        l1479 0130                        l1399 02AF  
                      l1903 0351                        l1911 0371                        l1567 0336  
                      l1559 0310                        l1591 0243                        l1583 0237  
                      l1575 0228                        l1497 0165                        l1489 014E  
                      l1913 037B                        l1905 0356                        l1593 0245  
                      l1585 0239                        l1577 022F                        l1921 0020  
                      l1499 016A                        l1915 0381                        l1595 0249  
                      l1587 023D                        l1579 0231                        l1931 0032  
                      l1923 0025                        l1909 035B                        l1597 024B  
                      l1589 023F                        l1941 004C                        l1925 0029  
                      l1599 024F                        l1943 0053                        l1935 0037  
                      l1927 002E                        l1881 0389                        l1961 00A0  
                      l1945 005A                        l1937 003E                        l1953 006C  
                      l1929 0031                        l1883 038F                        l1891 0340  
                      l1971 00B4                        l1955 0097                        l1963 00A1  
                      l1947 0061                        l1939 0045                        l1885 0392  
                      l1981 00D8                        l1973 00BB                        l1957 009D  
                      l1949 0069                        l1887 0397                        l1975 00C2  
                      l1967 00A6                        l1959 009E                        l1889 039D  
                      l1897 0341                        l1977 00C9                        l1969 00AD  
                      l1985 00DB                        l1899 0347                        l1979 00D0  
                      l1987 00FD                        _POT1 0079                        _POT2 0078  
                      _POT3 0026                        _POT4 0025                        _UART 0027  
                      _TMR0 0001                        _main 0020                        btemp 007E  
          ?_configuraciones 0070                        start 000C                       ?_main 0070  
                     _EEADR 010D                       _EEDAT 010C                       _ANSEL 0188  
                     i1l117 021D                       i1l109 01BD                       _RCREG 001A  
                     _TMR1H 000F                       _TMR1L 000E                       _SPBRG 0099  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _PORTD 0008                       _PORTE 0009                       u60_20 01E4  
                     u52_20 01AB                       u60_21 01E3                       u52_21 01AA  
                     u61_20 01EA                       u53_20 01BA                       u61_21 01E9  
                     u53_21 01B9                       u62_20 01F4                       u54_20 01C1  
                     u62_21 01F3                       u54_21 01C0                       u63_20 01FD  
                     u55_20 01C7                       u63_21 01FC                       u55_21 01C6  
                     u64_20 020B                       u56_20 01CF                       u64_21 0207  
                     u56_21 01CD                       _TRISA 0085                       u65_24 020E  
                     u57_24 01D0                       _TRISB 0086                       _TRISC 0087  
                     _TRISD 0088                       _TRISE 0089                       u66_20 0213  
                     u58_20 01D5                       u66_21 0212                       u58_21 01D4  
                     u59_20 01DB                       u59_21 01DA                       _TXREG 0019  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __initialization 000F                __end_of_main 0106                      ??_main 002A  
                    _ADRESH 001E                      _EECON2 018D      __size_of_guardarservos 004B  
                    _ANSELH 0189                      i1l1621 01A7                      i1l1631 01BA  
                    i1l1623 01AB                      i1l1641 01D5                      i1l1633 01C1  
                    i1l1625 01B4                      i1l1643 01DB                      i1l1651 01E0  
                    i1l1635 01C7                      i1l1627 01B5                      i1l1661 01F5  
                    i1l1653 01E4                      i1l1645 01DC                      i1l1637 01D0  
                    i1l1629 01B6                      i1l1671 020E                      i1l1655 01EA  
                    i1l1663 01F6                      i1l1647 01DE                      i1l1639 01D1  
                    i1l1681 0219                      i1l1673 020F                      i1l1665 01F7  
                    i1l1657 01EE                      i1l1649 01DF                      i1l1683 021B  
                    i1l1675 0213                      i1l1667 01FD                      i1l1659 01F4  
                    i1l1677 0214                      i1l1669 0201                      i1l1679 0218  
                    _EXTREC 0024                      _SERVOS 007A                      _servos 0224  
   __size_of_leerposiciones 000D                      saved_w 007E            __end_of_rutInter 0224  
guardarposiciones@direccion 0073     __end_of__initialization 001C              __pcstackCOMMON 0070  
             _guardarservos 033D              _OPTION_REGbits 0081    __size_of_AnalogReadServo 00A1  
                __pbssBANK0 0020                  __pmaintext 0020              ?_guardarservos 0070  
                __pintentry 0004                     ?_servos 0070                  _leerSERVOS 02E6  
         _guardarposiciones 0388          ?_guardarposiciones 0073         ??_guardarposiciones 0074  
  __size_of_configuraciones 005F                   ?_rutInter 0070                     __ptext1 0224  
                   __ptext2 02E6                     __ptext3 03A5                     __ptext4 033D  
                   __ptext5 0388                     __ptext6 0287                     __ptext7 0106  
                   __ptext8 01A7             __size_of_servos 0063                   _T1CONbits 0010  
            _leerposiciones 03A5   __end_of_guardarposiciones 03A5        end_of_initialization 001C  
         ??_AnalogReadServo 0073             ??_guardarservos 0075                   _RCSTAbits 0018  
                 _SERVINDIC 0023                  ??_rutInter 0070      __end_of_leerposiciones 03B2  
                 _PORTBbits 0006                   _PORTDbits 0008                 ?_leerSERVOS 0070  
                 _TXSTAbits 0098           leerSERVOS@desfase 0076             ?_leerposiciones 0070  
            __end_of_servos 0287           ??_configuraciones 0073         start_initialization 000F  
__size_of_guardarposiciones 001D        guardarservos@desfase 0028         __size_of_leerSERVOS 0057  
                 _addEEPROM 0022                    ??_servos 0073                 __pbssCOMMON 0078  
                 ___latbits 0002                   _datEEPROM 0021               __pcstackBANK0 0028  
            guardarservos@n 0029           __size_of_rutInter 007D             _AnalogReadServo 0106  
         interrupt_function 0004                    _IOCBbits 0096                    _PIE1bits 008C  
                  _PIR1bits 000C                  _ADCON0bits 001F                  _ADCON1bits 009F  
   leerposiciones@direccion 0073                ??_leerSERVOS 0074                  _EECON1bits 018C  
          ??_leerposiciones 0073       __end_of_guardarservos 0388             _configuraciones 0287  
        __end_of_leerSERVOS 033D     __end_of_AnalogReadServo 01A7               __size_of_main 00E6  
                  _posicion 0020    guardarposiciones@guardar 0074                    _rutInter 01A7  
                _INTCONbits 000B                    intlevel1 0000     __end_of_configuraciones 02E6  
                _OSCCONbits 008F            ?_AnalogReadServo 0070  
