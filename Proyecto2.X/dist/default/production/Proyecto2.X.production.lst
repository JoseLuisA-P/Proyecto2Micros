

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri May 07 10:13:04 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  001E                     _ADRESH	set	30
   207  0008                     _PORTDbits	set	8
   208  0001                     _TMR0	set	1
   209  0018                     _RCSTAbits	set	24
   210  0009                     _PORTE	set	9
   211  0008                     _PORTD	set	8
   212  0007                     _PORTC	set	7
   213  0006                     _PORTB	set	6
   214  0005                     _PORTA	set	5
   215  001A                     _RCREG	set	26
   216  000C                     _PIR1bits	set	12
   217  0006                     _PORTBbits	set	6
   218  001F                     _ADCON0bits	set	31
   219  000B                     _INTCONbits	set	11
   220  0081                     _OPTION_REGbits	set	129
   221  0098                     _TXSTAbits	set	152
   222  0099                     _SPBRG	set	153
   223  009F                     _ADCON1bits	set	159
   224  0096                     _IOCBbits	set	150
   225  008C                     _PIE1bits	set	140
   226  008F                     _OSCCONbits	set	143
   227  0089                     _TRISE	set	137
   228  0088                     _TRISD	set	136
   229  0087                     _TRISC	set	135
   230  0086                     _TRISB	set	134
   231  0085                     _TRISA	set	133
   232  0189                     _ANSELH	set	393
   233  0188                     _ANSEL	set	392
   234                           
   235                           	psect	cinit
   236  000F                     start_initialization:	
   237                           ; #config settings
   238                           
   239  000F                     __initialization:
   240                           
   241                           ; Clear objects allocated to COMMON
   242  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   243  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   244  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   245  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   246  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   247  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   248  0015                     end_of_initialization:	
   249                           ;End of C runtime variable initialization code
   250                           
   251  0015                     __end_of__initialization:
   252  0015  0183               	clrf	3
   253  0016  120A  118A  29A8   	ljmp	_main	;jump to C main() function
   254                           
   255                           	psect	bssCOMMON
   256  0070                     __pbssCOMMON:
   257  0070                     _EXTREC:
   258  0070                     	ds	1
   259  0071                     _POT4:
   260  0071                     	ds	1
   261  0072                     _POT3:
   262  0072                     	ds	1
   263  0073                     _POT2:
   264  0073                     	ds	1
   265  0074                     _POT1:
   266  0074                     	ds	1
   267  0075                     _SERVOS:
   268  0075                     	ds	1
   269                           
   270                           	psect	cstackCOMMON
   271  0076                     __pcstackCOMMON:
   272  0076                     ?_configuraciones:
   273  0076                     ?_AnalogReadServo:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0076                     ?_servos:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0076                     ?_rutInter:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0076                     ??_rutInter:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0076                     ?_main:	
   286                           ; 1 bytes @ 0x0
   287                           
   288                           
   289                           ; 1 bytes @ 0x0
   290  0076                     	ds	3
   291  0079                     ??_configuraciones:
   292  0079                     ??_AnalogReadServo:	
   293                           ; 1 bytes @ 0x3
   294                           
   295  0079                     ??_servos:	
   296                           ; 1 bytes @ 0x3
   297                           
   298                           
   299                           ; 1 bytes @ 0x3
   300  0079                     	ds	2
   301  007B                     ??_main:
   302                           
   303                           ; 1 bytes @ 0x5
   304  007B                     	ds	1
   305                           
   306                           	psect	maintext
   307  01A8                     __pmaintext:	
   308 ;;
   309 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   310 ;;
   311 ;; *************** function _main *****************
   312 ;; Defined at:
   313 ;;		line 91 in file "mainP2.c"
   314 ;; Parameters:    Size  Location     Type
   315 ;;		None
   316 ;; Auto vars:     Size  Location     Type
   317 ;;		None
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   322 ;; Tracked objects:
   323 ;;		On entry : B00/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   327 ;;      Params:         0       0       0       0       0
   328 ;;      Locals:         0       0       0       0       0
   329 ;;      Temps:          1       0       0       0       0
   330 ;;      Totals:         1       0       0       0       0
   331 ;;Total ram usage:        1 bytes
   332 ;; Hardware stack levels required when called:    2
   333 ;; This function calls:
   334 ;;		_AnalogReadServo
   335 ;;		_configuraciones
   336 ;;		_servos
   337 ;; This function is called by:
   338 ;;		Startup code after reset
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           
   343                           ;psect for function _main
   344  01A8                     _main:
   345  01A8                     l925:	
   346                           ;incstack = 0
   347                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   348                           
   349                           
   350                           ;mainP2.c: 92:     configuraciones();
   351  01A8  120A  118A  211D  120A  118A  	fcall	_configuraciones
   352  01AD                     l927:
   353                           
   354                           ;mainP2.c: 94:         if(SERVOS.modo){
   355  01AD  1F75               	btfss	_SERVOS,6
   356  01AE  29B0               	goto	u191
   357  01AF  29B1               	goto	u190
   358  01B0                     u191:
   359  01B0  29BA               	goto	l89
   360  01B1                     u190:
   361  01B1                     l929:
   362                           
   363                           ;mainP2.c: 95:             AnalogReadServo();
   364  01B1  120A  118A  2019  120A  118A  	fcall	_AnalogReadServo
   365  01B6                     l931:
   366                           
   367                           ;mainP2.c: 96:             PORTBbits.RB7 = 1;
   368  01B6  1283               	bcf	3,5	;RP0=0, select bank0
   369  01B7  1303               	bcf	3,6	;RP1=0, select bank0
   370  01B8  1786               	bsf	6,7	;volatile
   371                           
   372                           ;mainP2.c: 97:         }
   373  01B9  29C1               	goto	l935
   374  01BA                     l89:	
   375                           ;mainP2.c: 98:         else{ PORTBbits.RB7 = 0; POT1 = EXTREC;}
   376                           
   377  01BA  1283               	bcf	3,5	;RP0=0, select bank0
   378  01BB  1303               	bcf	3,6	;RP1=0, select bank0
   379  01BC  1386               	bcf	6,7	;volatile
   380  01BD                     l933:
   381  01BD  0870               	movf	_EXTREC,w
   382  01BE  00FB               	movwf	??_main
   383  01BF  087B               	movf	??_main,w
   384  01C0  00F4               	movwf	_POT1
   385  01C1                     l935:
   386                           
   387                           ;mainP2.c: 99:         servos();
   388  01C1  120A  118A  20BA  120A  118A  	fcall	_servos
   389  01C6  29AD               	goto	l927
   390  01C7  120A  118A  280C   	ljmp	start
   391  01CA                     __end_of_main:
   392                           
   393                           	psect	text1
   394  00BA                     __ptext1:	
   395 ;; *************** function _servos *****************
   396 ;; Defined at:
   397 ;;		line 167 in file "mainP2.c"
   398 ;; Parameters:    Size  Location     Type
   399 ;;		None
   400 ;; Auto vars:     Size  Location     Type
   401 ;;		None
   402 ;; Return value:  Size  Location     Type
   403 ;;                  1    wreg      void 
   404 ;; Registers used:
   405 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   406 ;; Tracked objects:
   407 ;;		On entry : 0/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   411 ;;      Params:         0       0       0       0       0
   412 ;;      Locals:         0       0       0       0       0
   413 ;;      Temps:          2       0       0       0       0
   414 ;;      Totals:         2       0       0       0       0
   415 ;;Total ram usage:        2 bytes
   416 ;; Hardware stack levels used:    1
   417 ;; Hardware stack levels required when called:    1
   418 ;; This function calls:
   419 ;;		Nothing
   420 ;; This function is called by:
   421 ;;		_main
   422 ;; This function uses a non-reentrant model
   423 ;;
   424                           
   425                           
   426                           ;psect for function _servos
   427  00BA                     _servos:
   428  00BA                     l853:	
   429                           ;incstack = 0
   430                           ; Regs used in _servos: [wreg-fsr0h+status,2+status,0]
   431                           
   432                           
   433                           ;mainP2.c: 169:     if(SERVOS.bit1){
   434  00BA  1EF5               	btfss	_SERVOS,5
   435  00BB  28BD               	goto	u101
   436  00BC  28BE               	goto	u100
   437  00BD                     u101:
   438  00BD  291C               	goto	l111
   439  00BE                     u100:
   440  00BE                     l855:
   441                           
   442                           ;mainP2.c: 170:             if(SERVOS.bit0 == 15) SERVOS.bit0 = 0;
   443  00BE  0875               	movf	_SERVOS,w
   444  00BF  391F               	andlw	31
   445  00C0  3A0F               	xorlw	15
   446  00C1  1D03               	skipz
   447  00C2  28C4               	goto	u111
   448  00C3  28C5               	goto	u110
   449  00C4                     u111:
   450  00C4  28C7               	goto	l859
   451  00C5                     u110:
   452  00C5                     l857:
   453  00C5  30E0               	movlw	-32
   454  00C6  05F5               	andwf	_SERVOS,f
   455  00C7                     l859:
   456                           
   457                           ;mainP2.c: 171:             SERVOS.bit1 = 0;
   458  00C7  12F5               	bcf	_SERVOS,5
   459                           
   460                           ;mainP2.c: 172:             switch(SERVOS.bit0){
   461  00C8  28F9               	goto	l895
   462  00C9                     l861:
   463                           
   464                           ;mainP2.c: 175:                     TMR0 = 255-POT1; PORTDbits.RD0 = 0;
   465  00C9  0974               	comf	_POT1,w
   466  00CA  1283               	bcf	3,5	;RP0=0, select bank0
   467  00CB  1303               	bcf	3,6	;RP1=0, select bank0
   468  00CC  0081               	movwf	1	;volatile
   469  00CD                     l863:
   470  00CD  1008               	bcf	8,0	;volatile
   471                           
   472                           ;mainP2.c: 176:                     break;
   473  00CE  291C               	goto	l111
   474  00CF                     l865:
   475                           
   476                           ;mainP2.c: 178:                      TMR0 = 255-POT2; PORTDbits.RD1 = 0;
   477  00CF  0973               	comf	_POT2,w
   478  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   479  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   480  00D2  0081               	movwf	1	;volatile
   481  00D3                     l867:
   482  00D3  1088               	bcf	8,1	;volatile
   483                           
   484                           ;mainP2.c: 179:                     break;
   485  00D4  291C               	goto	l111
   486  00D5                     l869:
   487                           
   488                           ;mainP2.c: 181:                     TMR0 = 255-POT3; PORTDbits.RD2 = 0;
   489  00D5  0972               	comf	_POT3,w
   490  00D6  1283               	bcf	3,5	;RP0=0, select bank0
   491  00D7  1303               	bcf	3,6	;RP1=0, select bank0
   492  00D8  0081               	movwf	1	;volatile
   493  00D9                     l871:
   494  00D9  1108               	bcf	8,2	;volatile
   495                           
   496                           ;mainP2.c: 182:                     break;
   497  00DA  291C               	goto	l111
   498  00DB                     l873:
   499                           
   500                           ;mainP2.c: 184:                     TMR0 = 255-POT4; PORTDbits.RD3 = 0;
   501  00DB  0971               	comf	_POT4,w
   502  00DC  1283               	bcf	3,5	;RP0=0, select bank0
   503  00DD  1303               	bcf	3,6	;RP1=0, select bank0
   504  00DE  0081               	movwf	1	;volatile
   505  00DF                     l875:
   506  00DF  1188               	bcf	8,3	;volatile
   507                           
   508                           ;mainP2.c: 185:                     break;
   509  00E0  291C               	goto	l111
   510  00E1                     l877:
   511                           
   512                           ;mainP2.c: 188:                     TMR0 = POT1; PORTDbits.RD0 = 1;
   513  00E1  0874               	movf	_POT1,w
   514  00E2  1283               	bcf	3,5	;RP0=0, select bank0
   515  00E3  1303               	bcf	3,6	;RP1=0, select bank0
   516  00E4  0081               	movwf	1	;volatile
   517  00E5                     l879:
   518  00E5  1408               	bsf	8,0	;volatile
   519                           
   520                           ;mainP2.c: 189:                     break;
   521  00E6  291C               	goto	l111
   522  00E7                     l881:
   523                           
   524                           ;mainP2.c: 191:                     TMR0 = POT2; PORTDbits.RD1 = 1;
   525  00E7  0873               	movf	_POT2,w
   526  00E8  1283               	bcf	3,5	;RP0=0, select bank0
   527  00E9  1303               	bcf	3,6	;RP1=0, select bank0
   528  00EA  0081               	movwf	1	;volatile
   529  00EB                     l883:
   530  00EB  1488               	bsf	8,1	;volatile
   531                           
   532                           ;mainP2.c: 192:                     break;
   533  00EC  291C               	goto	l111
   534  00ED                     l885:
   535                           
   536                           ;mainP2.c: 194:                     TMR0 = POT3; PORTDbits.RD2 = 1;
   537  00ED  0872               	movf	_POT3,w
   538  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   539  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   540  00F0  0081               	movwf	1	;volatile
   541  00F1                     l887:
   542  00F1  1508               	bsf	8,2	;volatile
   543                           
   544                           ;mainP2.c: 195:                     break;
   545  00F2  291C               	goto	l111
   546  00F3                     l889:
   547                           
   548                           ;mainP2.c: 197:                     TMR0 = POT4; PORTDbits.RD3 = 1;
   549  00F3  0871               	movf	_POT4,w
   550  00F4  1283               	bcf	3,5	;RP0=0, select bank0
   551  00F5  1303               	bcf	3,6	;RP1=0, select bank0
   552  00F6  0081               	movwf	1	;volatile
   553  00F7                     l891:
   554  00F7  1588               	bsf	8,3	;volatile
   555                           
   556                           ;mainP2.c: 198:                     break;
   557  00F8  291C               	goto	l111
   558  00F9                     l895:
   559  00F9  0875               	movf	_SERVOS,w
   560  00FA  391F               	andlw	31
   561  00FB  00F9               	movwf	??_servos
   562  00FC  01FA               	clrf	??_servos+1
   563                           
   564                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   565                           ; Switch size 1, requested type "simple"
   566                           ; Number of cases is 1, Range of values is 0 to 0
   567                           ; switch strategies available:
   568                           ; Name         Instructions Cycles
   569                           ; simple_byte            4     3 (average)
   570                           ; direct_byte           11     8 (fixed)
   571                           ; jumptable            260     6 (fixed)
   572                           ;	Chosen strategy is simple_byte
   573  00FD  087A               	movf	??_servos+1,w
   574  00FE  3A00               	xorlw	0	; case 0
   575  00FF  1903               	skipnz
   576  0100  2902               	goto	l977
   577  0101  291C               	goto	l111
   578  0102                     l977:
   579                           
   580                           ; Switch size 1, requested type "simple"
   581                           ; Number of cases is 8, Range of values is 0 to 10
   582                           ; switch strategies available:
   583                           ; Name         Instructions Cycles
   584                           ; simple_byte           25    13 (average)
   585                           ; direct_byte           41     8 (fixed)
   586                           ; jumptable            260     6 (fixed)
   587                           ;	Chosen strategy is simple_byte
   588  0102  0879               	movf	??_servos,w
   589  0103  3A00               	xorlw	0	; case 0
   590  0104  1903               	skipnz
   591  0105  28E1               	goto	l877
   592  0106  3A01               	xorlw	1	; case 1
   593  0107  1903               	skipnz
   594  0108  28C9               	goto	l861
   595  0109  3A02               	xorlw	2	; case 3
   596  010A  1903               	skipnz
   597  010B  28E7               	goto	l881
   598  010C  3A07               	xorlw	7	; case 4
   599  010D  1903               	skipnz
   600  010E  28CF               	goto	l865
   601  010F  3A02               	xorlw	2	; case 6
   602  0110  1903               	skipnz
   603  0111  28ED               	goto	l885
   604  0112  3A01               	xorlw	1	; case 7
   605  0113  1903               	skipnz
   606  0114  28D5               	goto	l869
   607  0115  3A0E               	xorlw	14	; case 9
   608  0116  1903               	skipnz
   609  0117  28F3               	goto	l889
   610  0118  3A03               	xorlw	3	; case 10
   611  0119  1903               	skipnz
   612  011A  28DB               	goto	l873
   613  011B  291C               	goto	l111
   614  011C                     l111:
   615  011C  0008               	return
   616  011D                     __end_of_servos:
   617                           
   618                           	psect	text2
   619  011D                     __ptext2:	
   620 ;; *************** function _configuraciones *****************
   621 ;; Defined at:
   622 ;;		line 106 in file "mainP2.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;		None
   625 ;; Auto vars:     Size  Location     Type
   626 ;;		None
   627 ;; Return value:  Size  Location     Type
   628 ;;                  1    wreg      void 
   629 ;; Registers used:
   630 ;;		wreg, status,2, status,0
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   636 ;;      Params:         0       0       0       0       0
   637 ;;      Locals:         0       0       0       0       0
   638 ;;      Temps:          0       0       0       0       0
   639 ;;      Totals:         0       0       0       0       0
   640 ;;Total ram usage:        0 bytes
   641 ;; Hardware stack levels used:    1
   642 ;; Hardware stack levels required when called:    1
   643 ;; This function calls:
   644 ;;		Nothing
   645 ;; This function is called by:
   646 ;;		_main
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           
   651                           ;psect for function _configuraciones
   652  011D                     _configuraciones:
   653  011D                     l725:	
   654                           ;incstack = 0
   655                           ; Regs used in _configuraciones: [wreg+status,2+status,0]
   656                           
   657                           
   658                           ;mainP2.c: 108:     ANSEL = 0X0F;
   659  011D  300F               	movlw	15
   660  011E  1683               	bsf	3,5	;RP0=1, select bank3
   661  011F  1703               	bsf	3,6	;RP1=1, select bank3
   662  0120  0088               	movwf	8	;volatile
   663  0121                     l727:
   664                           
   665                           ;mainP2.c: 109:     ANSELH = 0X00;
   666  0121  0189               	clrf	9	;volatile
   667  0122                     l729:
   668                           
   669                           ;mainP2.c: 110:     TRISA = 0X0F;
   670  0122  300F               	movlw	15
   671  0123  1683               	bsf	3,5	;RP0=1, select bank1
   672  0124  1303               	bcf	3,6	;RP1=0, select bank1
   673  0125  0085               	movwf	5	;volatile
   674  0126                     l731:
   675                           
   676                           ;mainP2.c: 111:     TRISB = 0X01;
   677  0126  3001               	movlw	1
   678  0127  0086               	movwf	6	;volatile
   679  0128                     l733:
   680                           
   681                           ;mainP2.c: 112:     TRISC = 0X80;
   682  0128  3080               	movlw	128
   683  0129  0087               	movwf	7	;volatile
   684                           
   685                           ;mainP2.c: 113:     TRISD = 0X00;
   686  012A  0188               	clrf	8	;volatile
   687                           
   688                           ;mainP2.c: 114:     TRISE = 0X00;
   689  012B  0189               	clrf	9	;volatile
   690                           
   691                           ;mainP2.c: 115:     PORTA = 0X00;
   692  012C  1283               	bcf	3,5	;RP0=0, select bank0
   693  012D  1303               	bcf	3,6	;RP1=0, select bank0
   694  012E  0185               	clrf	5	;volatile
   695                           
   696                           ;mainP2.c: 116:     PORTB = 0X00;
   697  012F  0186               	clrf	6	;volatile
   698                           
   699                           ;mainP2.c: 117:     PORTC = 0X00;
   700  0130  0187               	clrf	7	;volatile
   701                           
   702                           ;mainP2.c: 118:     PORTD = 0X00;
   703  0131  0188               	clrf	8	;volatile
   704                           
   705                           ;mainP2.c: 119:     PORTE = 0X00;
   706  0132  0189               	clrf	9	;volatile
   707  0133                     l735:
   708                           
   709                           ;mainP2.c: 122:     OSCCONbits.IRCF = 0b111;
   710  0133  3070               	movlw	112
   711  0134  1683               	bsf	3,5	;RP0=1, select bank1
   712  0135  1303               	bcf	3,6	;RP1=0, select bank1
   713  0136  048F               	iorwf	15,f	;volatile
   714  0137                     l737:
   715                           
   716                           ;mainP2.c: 123:     OSCCONbits.SCS = 0b1;
   717  0137  140F               	bsf	15,0	;volatile
   718  0138                     l739:
   719                           
   720                           ;mainP2.c: 126:     INTCONbits.TMR0IF = 0;
   721  0138  110B               	bcf	11,2	;volatile
   722  0139                     l741:
   723                           
   724                           ;mainP2.c: 127:     INTCONbits.TMR0IE = 1;
   725  0139  168B               	bsf	11,5	;volatile
   726  013A                     l743:
   727                           
   728                           ;mainP2.c: 128:     INTCONbits.RBIF = 0;
   729  013A  100B               	bcf	11,0	;volatile
   730  013B                     l745:
   731                           
   732                           ;mainP2.c: 129:     INTCONbits.RBIE = 0;
   733  013B  118B               	bcf	11,3	;volatile
   734  013C                     l747:
   735                           
   736                           ;mainP2.c: 130:     INTCONbits.PEIE = 1;
   737  013C  170B               	bsf	11,6	;volatile
   738  013D                     l749:
   739                           
   740                           ;mainP2.c: 131:     PIE1bits.RCIE = 1;
   741  013D  168C               	bsf	12,5	;volatile
   742  013E                     l751:
   743                           
   744                           ;mainP2.c: 132:     INTCONbits.GIE = 1;
   745  013E  178B               	bsf	11,7	;volatile
   746  013F                     l753:
   747                           
   748                           ;mainP2.c: 135:     IOCBbits.IOCB0 = 1;
   749  013F  1416               	bsf	22,0	;volatile
   750  0140                     l755:
   751                           
   752                           ;mainP2.c: 138:     ADCON0bits.ADCS = 0b10;
   753  0140  1283               	bcf	3,5	;RP0=0, select bank0
   754  0141  1303               	bcf	3,6	;RP1=0, select bank0
   755  0142  081F               	movf	31,w	;volatile
   756  0143  393F               	andlw	-193
   757  0144  3880               	iorlw	128
   758  0145  009F               	movwf	31	;volatile
   759  0146                     l757:
   760                           
   761                           ;mainP2.c: 139:     ADCON0bits.CHS = 0b0000;
   762  0146  30C3               	movlw	-61
   763  0147  059F               	andwf	31,f	;volatile
   764  0148                     l759:
   765                           
   766                           ;mainP2.c: 140:     ADCON0bits.GO = 0b0;
   767  0148  109F               	bcf	31,1	;volatile
   768  0149                     l761:
   769                           
   770                           ;mainP2.c: 141:     ADCON0bits.ADON = 0b1;
   771  0149  141F               	bsf	31,0	;volatile
   772  014A                     l763:
   773                           
   774                           ;mainP2.c: 142:     ADCON1bits.ADFM = 0b0;
   775  014A  1683               	bsf	3,5	;RP0=1, select bank1
   776  014B  1303               	bcf	3,6	;RP1=0, select bank1
   777  014C  139F               	bcf	31,7	;volatile
   778  014D                     l765:
   779                           
   780                           ;mainP2.c: 143:     ADCON1bits.VCFG1 = 0b0;
   781  014D  129F               	bcf	31,5	;volatile
   782  014E                     l767:
   783                           
   784                           ;mainP2.c: 144:     ADCON1bits.VCFG0 = 0b0;
   785  014E  121F               	bcf	31,4	;volatile
   786  014F                     l769:
   787                           
   788                           ;mainP2.c: 147:     SPBRG = 12;
   789  014F  300C               	movlw	12
   790  0150  0099               	movwf	25	;volatile
   791  0151                     l771:
   792                           
   793                           ;mainP2.c: 148:     TXSTAbits.BRGH = 0;
   794  0151  1118               	bcf	24,2	;volatile
   795  0152                     l773:
   796                           
   797                           ;mainP2.c: 149:     TXSTAbits.TXEN = 1;
   798  0152  1698               	bsf	24,5	;volatile
   799  0153                     l775:
   800                           
   801                           ;mainP2.c: 150:     RCSTAbits.CREN = 1;
   802  0153  1283               	bcf	3,5	;RP0=0, select bank0
   803  0154  1303               	bcf	3,6	;RP1=0, select bank0
   804  0155  1618               	bsf	24,4	;volatile
   805  0156                     l777:
   806                           
   807                           ;mainP2.c: 151:     TXSTAbits.SYNC = 0;
   808  0156  1683               	bsf	3,5	;RP0=1, select bank1
   809  0157  1303               	bcf	3,6	;RP1=0, select bank1
   810  0158  1218               	bcf	24,4	;volatile
   811  0159                     l779:
   812                           
   813                           ;mainP2.c: 152:     RCSTAbits.SPEN = 1;
   814  0159  1283               	bcf	3,5	;RP0=0, select bank0
   815  015A  1303               	bcf	3,6	;RP1=0, select bank0
   816  015B  1798               	bsf	24,7	;volatile
   817  015C                     l781:
   818                           
   819                           ;mainP2.c: 155:     OSCCONbits.SCS = 1;
   820  015C  1683               	bsf	3,5	;RP0=1, select bank1
   821  015D  1303               	bcf	3,6	;RP1=0, select bank1
   822  015E  140F               	bsf	15,0	;volatile
   823  015F                     l783:
   824                           
   825                           ;mainP2.c: 156:     OPTION_REGbits.T0CS = 0;
   826  015F  1281               	bcf	1,5	;volatile
   827  0160                     l785:
   828                           
   829                           ;mainP2.c: 157:     OPTION_REGbits.PSA = 0;
   830  0160  1181               	bcf	1,3	;volatile
   831  0161                     l787:
   832                           
   833                           ;mainP2.c: 158:     OPTION_REGbits.PS2 = 0;
   834  0161  1101               	bcf	1,2	;volatile
   835  0162                     l789:
   836                           
   837                           ;mainP2.c: 159:     OPTION_REGbits.PS1 = 1;
   838  0162  1481               	bsf	1,1	;volatile
   839  0163                     l791:
   840                           
   841                           ;mainP2.c: 160:     OPTION_REGbits.PS0 = 1;
   842  0163  1401               	bsf	1,0	;volatile
   843  0164                     l793:
   844                           
   845                           ;mainP2.c: 161:     INTCONbits.T0IF = 0;
   846  0164  110B               	bcf	11,2	;volatile
   847  0165                     l795:
   848                           
   849                           ;mainP2.c: 162:     TMR0 = 131;
   850  0165  3083               	movlw	131
   851  0166  1283               	bcf	3,5	;RP0=0, select bank0
   852  0167  1303               	bcf	3,6	;RP1=0, select bank0
   853  0168  0081               	movwf	1	;volatile
   854  0169                     l797:
   855                           
   856                           ;mainP2.c: 163:     SERVOS.bit1 = 0;
   857  0169  12F5               	bcf	_SERVOS,5
   858  016A                     l799:
   859                           
   860                           ;mainP2.c: 164:     SERVOS.modo = 0;
   861  016A  1375               	bcf	_SERVOS,6
   862  016B                     l96:
   863  016B  0008               	return
   864  016C                     __end_of_configuraciones:
   865                           
   866                           	psect	text3
   867  0019                     __ptext3:	
   868 ;; *************** function _AnalogReadServo *****************
   869 ;; Defined at:
   870 ;;		line 205 in file "mainP2.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;		None
   873 ;; Auto vars:     Size  Location     Type
   874 ;;		None
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   884 ;;      Params:         0       0       0       0       0
   885 ;;      Locals:         0       0       0       0       0
   886 ;;      Temps:          2       0       0       0       0
   887 ;;      Totals:         2       0       0       0       0
   888 ;;Total ram usage:        2 bytes
   889 ;; Hardware stack levels used:    1
   890 ;; Hardware stack levels required when called:    1
   891 ;; This function calls:
   892 ;;		Nothing
   893 ;; This function is called by:
   894 ;;		_main
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           
   899                           ;psect for function _AnalogReadServo
   900  0019                     _AnalogReadServo:
   901  0019                     l801:	
   902                           ;incstack = 0
   903                           ; Regs used in _AnalogReadServo: [wreg-fsr0h+status,2+status,0]
   904                           
   905                           
   906                           ;mainP2.c: 207:     if(!ADCON0bits.GO){
   907  0019  1283               	bcf	3,5	;RP0=0, select bank0
   908  001A  1303               	bcf	3,6	;RP1=0, select bank0
   909  001B  189F               	btfsc	31,1	;volatile
   910  001C  281E               	goto	u11
   911  001D  281F               	goto	u10
   912  001E                     u11:
   913  001E  28B9               	goto	l133
   914  001F                     u10:
   915  001F  2896               	goto	l847
   916  0020                     l805:
   917                           
   918                           ;mainP2.c: 210:                  POT2 = ADRESH;
   919  0020  081E               	movf	30,w	;volatile
   920  0021  00F9               	movwf	??_AnalogReadServo
   921  0022  0879               	movf	??_AnalogReadServo,w
   922  0023  00F3               	movwf	_POT2
   923                           
   924                           ;mainP2.c: 211:             break;
   925  0024  28B9               	goto	l133
   926  0025                     l807:
   927                           
   928                           ;mainP2.c: 214:                 ADCON0bits.CHS = 2;
   929  0025  081F               	movf	31,w	;volatile
   930  0026  39C3               	andlw	-61
   931  0027  3808               	iorlw	8
   932  0028  009F               	movwf	31	;volatile
   933  0029                     l809:
   934                           
   935                           ;mainP2.c: 215:                 if(POT2>190) POT2 = 190;
   936  0029  30BF               	movlw	191
   937  002A  0273               	subwf	_POT2,w
   938  002B  1C03               	skipc
   939  002C  282E               	goto	u21
   940  002D  282F               	goto	u20
   941  002E                     u21:
   942  002E  2833               	goto	l119
   943  002F                     u20:
   944  002F                     l811:
   945  002F  30BE               	movlw	190
   946  0030  00F9               	movwf	??_AnalogReadServo
   947  0031  0879               	movf	??_AnalogReadServo,w
   948  0032  00F3               	movwf	_POT2
   949  0033                     l119:
   950                           
   951                           ;mainP2.c: 216:                 if(POT2<10) POT2 = 10;
   952  0033  300A               	movlw	10
   953  0034  0273               	subwf	_POT2,w
   954  0035  1803               	skipnc
   955  0036  2838               	goto	u31
   956  0037  2839               	goto	u30
   957  0038                     u31:
   958  0038  28B9               	goto	l133
   959  0039                     u30:
   960  0039                     l813:
   961  0039  300A               	movlw	10
   962  003A  00F9               	movwf	??_AnalogReadServo
   963  003B  0879               	movf	??_AnalogReadServo,w
   964  003C  00F3               	movwf	_POT2
   965  003D  28B9               	goto	l133
   966  003E                     l815:
   967                           
   968                           ;mainP2.c: 220:                 POT3 = ADRESH;
   969  003E  081E               	movf	30,w	;volatile
   970  003F  00F9               	movwf	??_AnalogReadServo
   971  0040  0879               	movf	??_AnalogReadServo,w
   972  0041  00F2               	movwf	_POT3
   973                           
   974                           ;mainP2.c: 221:             break;
   975  0042  28B9               	goto	l133
   976  0043                     l817:
   977                           
   978                           ;mainP2.c: 224:                 ADCON0bits.CHS = 3;
   979  0043  081F               	movf	31,w	;volatile
   980  0044  39C3               	andlw	-61
   981  0045  380C               	iorlw	12
   982  0046  009F               	movwf	31	;volatile
   983  0047                     l819:
   984                           
   985                           ;mainP2.c: 225:                 if(POT3>190) POT3 = 190;
   986  0047  30BF               	movlw	191
   987  0048  0272               	subwf	_POT3,w
   988  0049  1C03               	skipc
   989  004A  284C               	goto	u41
   990  004B  284D               	goto	u40
   991  004C                     u41:
   992  004C  2851               	goto	l123
   993  004D                     u40:
   994  004D                     l821:
   995  004D  30BE               	movlw	190
   996  004E  00F9               	movwf	??_AnalogReadServo
   997  004F  0879               	movf	??_AnalogReadServo,w
   998  0050  00F2               	movwf	_POT3
   999  0051                     l123:
  1000                           
  1001                           ;mainP2.c: 226:                 if(POT3<10) POT3 = 10;
  1002  0051  300A               	movlw	10
  1003  0052  0272               	subwf	_POT3,w
  1004  0053  1803               	skipnc
  1005  0054  2856               	goto	u51
  1006  0055  2857               	goto	u50
  1007  0056                     u51:
  1008  0056  28B9               	goto	l133
  1009  0057                     u50:
  1010  0057                     l823:
  1011  0057  300A               	movlw	10
  1012  0058  00F9               	movwf	??_AnalogReadServo
  1013  0059  0879               	movf	??_AnalogReadServo,w
  1014  005A  00F2               	movwf	_POT3
  1015  005B  28B9               	goto	l133
  1016  005C                     l825:
  1017                           
  1018                           ;mainP2.c: 230:                 POT4 = ADRESH;
  1019  005C  081E               	movf	30,w	;volatile
  1020  005D  00F9               	movwf	??_AnalogReadServo
  1021  005E  0879               	movf	??_AnalogReadServo,w
  1022  005F  00F1               	movwf	_POT4
  1023                           
  1024                           ;mainP2.c: 231:             break;
  1025  0060  28B9               	goto	l133
  1026  0061                     l827:
  1027                           
  1028                           ;mainP2.c: 234:                 ADCON0bits.CHS = 0;
  1029  0061  30C3               	movlw	-61
  1030  0062  059F               	andwf	31,f	;volatile
  1031  0063                     l829:
  1032                           
  1033                           ;mainP2.c: 235:                 if(POT4>190) POT4 = 190;
  1034  0063  30BF               	movlw	191
  1035  0064  0271               	subwf	_POT4,w
  1036  0065  1C03               	skipc
  1037  0066  2868               	goto	u61
  1038  0067  2869               	goto	u60
  1039  0068                     u61:
  1040  0068  286D               	goto	l127
  1041  0069                     u60:
  1042  0069                     l831:
  1043  0069  30BE               	movlw	190
  1044  006A  00F9               	movwf	??_AnalogReadServo
  1045  006B  0879               	movf	??_AnalogReadServo,w
  1046  006C  00F1               	movwf	_POT4
  1047  006D                     l127:
  1048                           
  1049                           ;mainP2.c: 236:                 if(POT4<10) POT4 = 10;
  1050  006D  300A               	movlw	10
  1051  006E  0271               	subwf	_POT4,w
  1052  006F  1803               	skipnc
  1053  0070  2872               	goto	u71
  1054  0071  2873               	goto	u70
  1055  0072                     u71:
  1056  0072  28B9               	goto	l133
  1057  0073                     u70:
  1058  0073                     l833:
  1059  0073  300A               	movlw	10
  1060  0074  00F9               	movwf	??_AnalogReadServo
  1061  0075  0879               	movf	??_AnalogReadServo,w
  1062  0076  00F1               	movwf	_POT4
  1063  0077  28B9               	goto	l133
  1064  0078                     l835:
  1065                           
  1066                           ;mainP2.c: 240:                 POT1 = ADRESH;
  1067  0078  081E               	movf	30,w	;volatile
  1068  0079  00F9               	movwf	??_AnalogReadServo
  1069  007A  0879               	movf	??_AnalogReadServo,w
  1070  007B  00F4               	movwf	_POT1
  1071                           
  1072                           ;mainP2.c: 241:             break;
  1073  007C  28B9               	goto	l133
  1074  007D                     l837:
  1075                           
  1076                           ;mainP2.c: 244:                 ADCON0bits.CHS = 1;
  1077  007D  081F               	movf	31,w	;volatile
  1078  007E  39C3               	andlw	-61
  1079  007F  3804               	iorlw	4
  1080  0080  009F               	movwf	31	;volatile
  1081  0081                     l839:
  1082                           
  1083                           ;mainP2.c: 245:                 if(POT1>190) POT1 = 190;
  1084  0081  30BF               	movlw	191
  1085  0082  0274               	subwf	_POT1,w
  1086  0083  1C03               	skipc
  1087  0084  2886               	goto	u81
  1088  0085  2887               	goto	u80
  1089  0086                     u81:
  1090  0086  288B               	goto	l131
  1091  0087                     u80:
  1092  0087                     l841:
  1093  0087  30BE               	movlw	190
  1094  0088  00F9               	movwf	??_AnalogReadServo
  1095  0089  0879               	movf	??_AnalogReadServo,w
  1096  008A  00F4               	movwf	_POT1
  1097  008B                     l131:
  1098                           
  1099                           ;mainP2.c: 246:                 if(POT1<10) POT1 = 10;
  1100  008B  300A               	movlw	10
  1101  008C  0274               	subwf	_POT1,w
  1102  008D  1803               	skipnc
  1103  008E  2890               	goto	u91
  1104  008F  2891               	goto	u90
  1105  0090                     u91:
  1106  0090  28B9               	goto	l133
  1107  0091                     u90:
  1108  0091                     l843:
  1109  0091  300A               	movlw	10
  1110  0092  00F9               	movwf	??_AnalogReadServo
  1111  0093  0879               	movf	??_AnalogReadServo,w
  1112  0094  00F4               	movwf	_POT1
  1113  0095  28B9               	goto	l133
  1114  0096                     l847:
  1115  0096  0875               	movf	_SERVOS,w
  1116  0097  391F               	andlw	31
  1117  0098  00F9               	movwf	??_AnalogReadServo
  1118  0099  01FA               	clrf	??_AnalogReadServo+1
  1119                           
  1120                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1121                           ; Switch size 1, requested type "simple"
  1122                           ; Number of cases is 1, Range of values is 0 to 0
  1123                           ; switch strategies available:
  1124                           ; Name         Instructions Cycles
  1125                           ; simple_byte            4     3 (average)
  1126                           ; direct_byte           11     8 (fixed)
  1127                           ; jumptable            260     6 (fixed)
  1128                           ;	Chosen strategy is simple_byte
  1129  009A  087A               	movf	??_AnalogReadServo+1,w
  1130  009B  3A00               	xorlw	0	; case 0
  1131  009C  1903               	skipnz
  1132  009D  289F               	goto	l979
  1133  009E  28B9               	goto	l133
  1134  009F                     l979:
  1135                           
  1136                           ; Switch size 1, requested type "simple"
  1137                           ; Number of cases is 8, Range of values is 0 to 10
  1138                           ; switch strategies available:
  1139                           ; Name         Instructions Cycles
  1140                           ; simple_byte           25    13 (average)
  1141                           ; direct_byte           41     8 (fixed)
  1142                           ; jumptable            260     6 (fixed)
  1143                           ;	Chosen strategy is simple_byte
  1144  009F  0879               	movf	??_AnalogReadServo,w
  1145  00A0  3A00               	xorlw	0	; case 0
  1146  00A1  1903               	skipnz
  1147  00A2  2820               	goto	l805
  1148  00A3  3A01               	xorlw	1	; case 1
  1149  00A4  1903               	skipnz
  1150  00A5  2825               	goto	l807
  1151  00A6  3A02               	xorlw	2	; case 3
  1152  00A7  1903               	skipnz
  1153  00A8  283E               	goto	l815
  1154  00A9  3A07               	xorlw	7	; case 4
  1155  00AA  1903               	skipnz
  1156  00AB  2843               	goto	l817
  1157  00AC  3A02               	xorlw	2	; case 6
  1158  00AD  1903               	skipnz
  1159  00AE  285C               	goto	l825
  1160  00AF  3A01               	xorlw	1	; case 7
  1161  00B0  1903               	skipnz
  1162  00B1  2861               	goto	l827
  1163  00B2  3A0E               	xorlw	14	; case 9
  1164  00B3  1903               	skipnz
  1165  00B4  2878               	goto	l835
  1166  00B5  3A03               	xorlw	3	; case 10
  1167  00B6  1903               	skipnz
  1168  00B7  287D               	goto	l837
  1169  00B8  28B9               	goto	l133
  1170  00B9                     l133:
  1171  00B9  0008               	return
  1172  00BA                     __end_of_AnalogReadServo:
  1173                           
  1174                           	psect	text4
  1175  016C                     __ptext4:	
  1176 ;; *************** function _rutInter *****************
  1177 ;; Defined at:
  1178 ;;		line 67 in file "mainP2.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;		None
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;		None
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		wreg, status,2, status,0
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1192 ;;      Params:         0       0       0       0       0
  1193 ;;      Locals:         0       0       0       0       0
  1194 ;;      Temps:          3       0       0       0       0
  1195 ;;      Totals:         3       0       0       0       0
  1196 ;;Total ram usage:        3 bytes
  1197 ;; Hardware stack levels used:    1
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		Interrupt level 1
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           
  1206                           ;psect for function _rutInter
  1207  016C                     _rutInter:
  1208  016C                     i1l901:
  1209                           
  1210                           ;mainP2.c: 69:     if(INTCONbits.TMR0IF) {
  1211  016C  1D0B               	btfss	11,2	;volatile
  1212  016D  296F               	goto	u12_21
  1213  016E  2970               	goto	u12_20
  1214  016F                     u12_21:
  1215  016F  2982               	goto	i1l79
  1216  0170                     u12_20:
  1217  0170                     i1l903:
  1218                           
  1219                           ;mainP2.c: 70:         SERVOS.bit0++;
  1220  0170  0875               	movf	_SERVOS,w
  1221  0171  391F               	andlw	31
  1222  0172  00F6               	movwf	??_rutInter
  1223  0173  0AF6               	incf	??_rutInter,f
  1224  0174  0875               	movf	_SERVOS,w
  1225  0175  0676               	xorwf	??_rutInter,w
  1226  0176  39E0               	andlw	-32
  1227  0177  0676               	xorwf	??_rutInter,w
  1228  0178  00F5               	movwf	_SERVOS
  1229  0179                     i1l905:
  1230                           
  1231                           ;mainP2.c: 71:         SERVOS.bit1 = 1;
  1232  0179  16F5               	bsf	_SERVOS,5
  1233  017A                     i1l907:
  1234                           
  1235                           ;mainP2.c: 72:         INTCONbits.TMR0IF = 0;
  1236  017A  110B               	bcf	11,2	;volatile
  1237  017B                     i1l909:
  1238                           
  1239                           ;mainP2.c: 73:         if(SERVOS.modo) ADCON0bits.GO = 1;
  1240  017B  1F75               	btfss	_SERVOS,6
  1241  017C  297E               	goto	u13_21
  1242  017D  297F               	goto	u13_20
  1243  017E                     u13_21:
  1244  017E  2982               	goto	i1l79
  1245  017F                     u13_20:
  1246  017F                     i1l911:
  1247  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1248  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1249  0181  149F               	bsf	31,1	;volatile
  1250  0182                     i1l79:	
  1251                           ;mainP2.c: 74:     }
  1252                           
  1253                           
  1254                           ;mainP2.c: 76:     if(INTCONbits.RBIF && !PORTBbits.RB0){
  1255  0182  1C0B               	btfss	11,0	;volatile
  1256  0183  2985               	goto	u14_21
  1257  0184  2986               	goto	u14_20
  1258  0185                     u14_21:
  1259  0185  2996               	goto	i1l919
  1260  0186                     u14_20:
  1261  0186                     i1l913:
  1262  0186  1283               	bcf	3,5	;RP0=0, select bank0
  1263  0187  1303               	bcf	3,6	;RP1=0, select bank0
  1264  0188  1806               	btfsc	6,0	;volatile
  1265  0189  298B               	goto	u15_21
  1266  018A  298C               	goto	u15_20
  1267  018B                     u15_21:
  1268  018B  2996               	goto	i1l919
  1269  018C                     u15_20:
  1270  018C                     i1l915:
  1271                           
  1272                           ;mainP2.c: 77:         SERVOS.modo = ~SERVOS.modo;
  1273  018C  1003               	clrc
  1274  018D  1F75               	btfss	_SERVOS,6
  1275  018E  1403               	setc
  1276  018F  1803               	btfsc	3,0
  1277  0190  2992               	goto	u16_21
  1278  0191  2994               	goto	u16_20
  1279  0192                     u16_21:
  1280  0192  1775               	bsf	_SERVOS,6
  1281  0193  2995               	goto	u17_24
  1282  0194                     u16_20:
  1283  0194  1375               	bcf	_SERVOS,6
  1284  0195                     u17_24:
  1285  0195                     i1l917:
  1286                           
  1287                           ;mainP2.c: 78:         INTCONbits.RBIF = 0;
  1288  0195  100B               	bcf	11,0	;volatile
  1289  0196                     i1l919:
  1290                           
  1291                           ;mainP2.c: 80:     INTCONbits.RBIF = 0;
  1292  0196  100B               	bcf	11,0	;volatile
  1293  0197                     i1l921:
  1294                           
  1295                           ;mainP2.c: 82:     if(PIR1bits.RCIF){
  1296  0197  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0198  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0199  1E8C               	btfss	12,5	;volatile
  1299  019A  299C               	goto	u18_21
  1300  019B  299D               	goto	u18_20
  1301  019C                     u18_21:
  1302  019C  29A1               	goto	i1l83
  1303  019D                     u18_20:
  1304  019D                     i1l923:
  1305                           
  1306                           ;mainP2.c: 83:         EXTREC = RCREG;
  1307  019D  081A               	movf	26,w	;volatile
  1308  019E  00F6               	movwf	??_rutInter
  1309  019F  0876               	movf	??_rutInter,w
  1310  01A0  00F0               	movwf	_EXTREC
  1311  01A1                     i1l83:
  1312  01A1  0878               	movf	??_rutInter+2,w
  1313  01A2  008A               	movwf	10
  1314  01A3  0E77               	swapf	??_rutInter+1,w
  1315  01A4  0083               	movwf	3
  1316  01A5  0EFE               	swapf	btemp,f
  1317  01A6  0E7E               	swapf	btemp,w
  1318  01A7  0009               	retfie
  1319  01A8                     __end_of_rutInter:
  1320  007E                     btemp	set	126	;btemp
  1321  007E                     wtemp0	set	126
  1322                           
  1323                           	psect	intentry
  1324  0004                     __pintentry:	
  1325                           ;incstack = 0
  1326                           ; Regs used in _rutInter: [wreg+status,2+status,0]
  1327                           
  1328  0004                     interrupt_function:
  1329  007E                     saved_w	set	btemp
  1330  0004  00FE               	movwf	btemp
  1331  0005  0E03               	swapf	3,w
  1332  0006  00F7               	movwf	??_rutInter+1
  1333  0007  080A               	movf	10,w
  1334  0008  00F8               	movwf	??_rutInter+2
  1335  0009  120A  118A  296C   	ljmp	_rutInter
  1336                           
  1337                           	psect	config
  1338                           
  1339                           ;Config register CONFIG1 @ 0x2007
  1340                           ;	Oscillator Selection bits
  1341                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1342                           ;	Watchdog Timer Enable bit
  1343                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1344                           ;	Power-up Timer Enable bit
  1345                           ;	PWRTE = OFF, PWRT disabled
  1346                           ;	RE3/MCLR pin function select bit
  1347                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1348                           ;	Code Protection bit
  1349                           ;	CP = OFF, Program memory code protection is disabled
  1350                           ;	Data Code Protection bit
  1351                           ;	CPD = OFF, Data memory code protection is disabled
  1352                           ;	Brown Out Reset Selection bits
  1353                           ;	BOREN = OFF, BOR disabled
  1354                           ;	Internal External Switchover bit
  1355                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1356                           ;	Fail-Safe Clock Monitor Enabled bit
  1357                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1358                           ;	Low Voltage Programming Enable bit
  1359                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1360                           ;	In-Circuit Debugger Mode bit
  1361                           ;	DEBUG = 0x1, unprogrammed default
  1362  2007                     	org	8199
  1363  2007  20F4               	dw	8436
  1364                           
  1365                           ;Config register CONFIG2 @ 0x2008
  1366                           ;	Brown-out Reset Selection bit
  1367                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1368                           ;	Flash Program Memory Self Write Enable bits
  1369                           ;	WRT = OFF, Write protection off
  1370  2008                     	org	8200
  1371  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_AnalogReadServo
    _main->_servos

Critical Paths under _rutInter in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _rutInter in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rutInter in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutInter in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutInter in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              5 COMMON     1     1      0
                    _AnalogReadServo
                    _configuraciones
                             _servos
 ---------------------------------------------------------------------------------
 (1) _servos                                               2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _configuraciones                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AnalogReadServo                                      2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _rutInter                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AnalogReadServo
   _configuraciones
   _servos

 _rutInter (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri May 07 10:13:04 2021

                      l96 016B                        l89 01BA                        u10 001F  
                      u11 001E                        u20 002F                        u21 002E  
                      u30 0039                        u31 0038                        u40 004D  
                      u41 004C                        u50 0057                        u51 0056  
                      u60 0069                        u61 0068                        u70 0073  
                      u71 0072                        u80 0087                        u81 0086  
                      u90 0091                        u91 0090                       l111 011C  
                     l131 008B                       l123 0051                       l133 00B9  
                     l127 006D                       l119 0033                       l801 0019  
                     l811 002F                       l731 0126                       l821 004D  
                     l813 0039                       l805 0020                       l741 0139  
                     l733 0128                       l725 011D                       l831 0069  
                     l823 0057                       l815 003E                       l807 0025  
                     l751 013E                       l743 013A                       l735 0133  
                     l727 0121                       l841 0087                       l833 0073  
                     l825 005C                       l817 0043                       l809 0029  
                     l761 0149                       l753 013F                       l745 013B  
                     l737 0137                       l729 0122                       l843 0091  
                     l835 0078                       l827 0061                       l819 0047  
                     l771 0151                       l763 014A                       l755 0140  
                     l747 013C                       l739 0138                       l931 01B6  
                     l837 007D                       l829 0063                       l781 015C  
                     l773 0152                       l765 014D                       l757 0146  
                     l749 013D                       l861 00C9                       l853 00BA  
                     l933 01BD                       l925 01A8                       l839 0081  
                     l847 0096                       l791 0163                       l783 015F  
                     l775 0153                       l767 014E                       l759 0148  
                     l871 00D9                       l863 00CD                       l855 00BE  
                     l935 01C1                       l927 01AD                       l793 0164  
                     l785 0160                       l777 0156                       l769 014F  
                     l881 00E7                       l873 00DB                       l865 00CF  
                     l857 00C5                       l929 01B1                       l795 0165  
                     l787 0161                       l779 0159                       l891 00F7  
                     l883 00EB                       l875 00DF                       l867 00D3  
                     l859 00C7                       l797 0169                       l789 0162  
                     l885 00ED                       l877 00E1                       l869 00D5  
                     l799 016A                       l887 00F1                       l879 00E5  
                     l895 00F9                       l977 0102                       l889 00F3  
                     l979 009F                       u100 00BE                       u101 00BD  
                     u110 00C5                       u111 00C4                       u190 01B1  
                     u191 01B0                      i1l83 01A1                      i1l79 0182  
                    _POT1 0074                      _POT2 0073                      _POT3 0072  
                    _POT4 0071                      _TMR0 0001                      _main 01A8  
                    btemp 007E          ?_configuraciones 0076                      start 000C  
                   ?_main 0076                     _ANSEL 0188                     i1l901 016C  
                   i1l911 017F                     i1l903 0170                     i1l921 0197  
                   i1l913 0186                     i1l905 0179                     i1l923 019D  
                   i1l915 018C                     i1l907 017A                     i1l917 0195  
                   i1l909 017B                     i1l919 0196                     _RCREG 001A  
                   u12_20 0170                     u12_21 016F                     u13_20 017F  
                   u13_21 017E                     u14_20 0186                     u14_21 0185  
                   u15_20 018C                     u15_21 018B                     u16_20 0194  
                   u16_21 0192                     u17_24 0195                     u18_20 019D  
                   u18_21 019C                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __initialization 000F              __end_of_main 01CA                    ??_main 007B  
                  _ADRESH 001E                    _ANSELH 0189                    _EXTREC 0070  
                  _SERVOS 0075                    _servos 00BA                    saved_w 007E  
        __end_of_rutInter 01A8   __end_of__initialization 0015            __pcstackCOMMON 0076  
          _OPTION_REGbits 0081  __size_of_AnalogReadServo 00A1                __pmaintext 01A8  
              __pintentry 0004                   ?_servos 0076  __size_of_configuraciones 004F  
               ?_rutInter 0076                   __ptext1 00BA                   __ptext2 011D  
                 __ptext3 0019                   __ptext4 016C           __size_of_servos 0063  
    end_of_initialization 0015         ??_AnalogReadServo 0079                 _RCSTAbits 0018  
              ??_rutInter 0076                 _PORTBbits 0006                 _PORTDbits 0008  
               _TXSTAbits 0098            __end_of_servos 011D         ??_configuraciones 0079  
     start_initialization 000F                  ??_servos 0079               __pbssCOMMON 0070  
               ___latbits 0002         __size_of_rutInter 003C           _AnalogReadServo 0019  
       interrupt_function 0004                  _IOCBbits 0096                  _PIE1bits 008C  
                _PIR1bits 000C                _ADCON0bits 001F                _ADCON1bits 009F  
         _configuraciones 011D   __end_of_AnalogReadServo 00BA             __size_of_main 0022  
                _rutInter 016C                _INTCONbits 000B                  intlevel1 0000  
 __end_of_configuraciones 016C                _OSCCONbits 008F          ?_AnalogReadServo 0076  
