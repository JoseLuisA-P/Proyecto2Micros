

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue May 18 11:40:34 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0019                     _TXREG	set	25
   216  001E                     _ADRESH	set	30
   217  0008                     _PORTDbits	set	8
   218  0001                     _TMR0	set	1
   219  0018                     _RCSTAbits	set	24
   220  0012                     _T2CONbits	set	18
   221  001D                     _CCP2CONbits	set	29
   222  0009                     _PORTE	set	9
   223  0008                     _PORTD	set	8
   224  0007                     _PORTC	set	7
   225  0006                     _PORTB	set	6
   226  0005                     _PORTA	set	5
   227  001B                     _CCPR2L	set	27
   228  001A                     _RCREG	set	26
   229  0009                     _PORTEbits	set	9
   230  0010                     _T1CONbits	set	16
   231  0006                     _PORTBbits	set	6
   232  000E                     _TMR1L	set	14
   233  000F                     _TMR1H	set	15
   234  000C                     _PIR1bits	set	12
   235  001F                     _ADCON0bits	set	31
   236  000B                     _INTCONbits	set	11
   237  0081                     _OPTION_REGbits	set	129
   238  0098                     _TXSTAbits	set	152
   239  0099                     _SPBRG	set	153
   240  0092                     _PR2	set	146
   241  009F                     _ADCON1bits	set	159
   242  0096                     _IOCBbits	set	150
   243  008C                     _PIE1bits	set	140
   244  008F                     _OSCCONbits	set	143
   245  0089                     _TRISE	set	137
   246  0088                     _TRISD	set	136
   247  0087                     _TRISC	set	135
   248  0086                     _TRISB	set	134
   249  0085                     _TRISA	set	133
   250  010C                     _EEDAT	set	268
   251  010D                     _EEADR	set	269
   252  018D                     _EECON2	set	397
   253  018C                     _EECON1bits	set	396
   254  0189                     _ANSELH	set	393
   255  0188                     _ANSEL	set	392
   256                           
   257                           	psect	cinit
   258  0011                     start_initialization:	
   259                           ; #config settings
   260                           
   261  0011                     __initialization:
   262                           
   263                           ; Clear objects allocated to COMMON
   264  0011  01F6               	clrf	__pbssCOMMON& (0+127)
   265  0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   266                           
   267                           ; Clear objects allocated to BANK0
   268  0013  1283               	bcf	3,5	;RP0=0, select bank0
   269  0014  1303               	bcf	3,6	;RP1=0, select bank0
   270  0015  01AB               	clrf	__pbssBANK0& (0+127)
   271  0016  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   272  0017  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   273  0018  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   274  0019  01AF               	clrf	(__pbssBANK0+4)& (0+127)
   275  001A  01B0               	clrf	(__pbssBANK0+5)& (0+127)
   276  001B  01B1               	clrf	(__pbssBANK0+6)& (0+127)
   277  001C  01B2               	clrf	(__pbssBANK0+7)& (0+127)
   278  001D                     end_of_initialization:	
   279                           ;End of C runtime variable initialization code
   280                           
   281  001D                     __end_of__initialization:
   282  001D  0183               	clrf	3
   283  001E  120A  118A  29A3   	ljmp	_main	;jump to C main() function
   284                           
   285                           	psect	bssCOMMON
   286  0076                     __pbssCOMMON:
   287  0076                     _datEEPROM:
   288  0076                     	ds	1
   289  0077                     _SERVINDIC:
   290  0077                     	ds	1
   291                           
   292                           	psect	bssBANK0
   293  002B                     __pbssBANK0:
   294  002B                     _posicion:
   295  002B                     	ds	1
   296  002C                     _EXTREC:
   297  002C                     	ds	1
   298  002D                     _POT4:
   299  002D                     	ds	1
   300  002E                     _POT3:
   301  002E                     	ds	1
   302  002F                     _POT2:
   303  002F                     	ds	1
   304  0030                     _POT1:
   305  0030                     	ds	1
   306  0031                     _UART:
   307  0031                     	ds	1
   308  0032                     _SERVOS:
   309  0032                     	ds	1
   310                           
   311                           	psect	cstackCOMMON
   312  0070                     __pcstackCOMMON:
   313  0070                     ?_servos:
   314  0070                     ??_servos:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ?_configuraciones:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_send1dato:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_leer3SEG:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_guardar3SEG:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_AnalogReadServo:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_rutInter:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_main:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_guardarservos:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_leerposiciones:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_leerSERVOS:	
   345                           ; 1 bytes @ 0x0
   346                           
   347                           
   348                           ; 1 bytes @ 0x0
   349  0070                     	ds	2
   350  0072                     ??_rutInter:
   351                           
   352                           ; 1 bytes @ 0x2
   353  0072                     	ds	4
   354  0076                     ??_configuraciones:
   355  0076                     ??_send1dato:	
   356                           ; 1 bytes @ 0x6
   357                           
   358  0076                     ??_guardarposiciones:	
   359                           ; 1 bytes @ 0x6
   360                           
   361  0076                     ??_leerposiciones:	
   362                           ; 1 bytes @ 0x6
   363                           
   364                           
   365                           	psect	cstackBANK0
   366  0020                     __pcstackBANK0:	
   367                           ; 1 bytes @ 0x6
   368                           
   369  0020                     ??_AnalogReadServo:
   370  0020                     ?_guardarposiciones:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0020                     send1dato@dato:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0020                     guardarposiciones@direccion:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0020                     leerposiciones@direccion:	
   380                           ; 1 bytes @ 0x0
   381                           
   382                           
   383                           ; 1 bytes @ 0x0
   384  0020                     	ds	1
   385  0021                     ??_leerSERVOS:
   386  0021                     guardarposiciones@guardar:	
   387                           ; 1 bytes @ 0x1
   388                           
   389                           
   390                           ; 1 bytes @ 0x1
   391  0021                     	ds	1
   392  0022                     ??_guardarservos:
   393                           
   394                           ; 1 bytes @ 0x2
   395  0022                     	ds	1
   396  0023                     leerSERVOS@desfase:
   397                           
   398                           ; 1 bytes @ 0x3
   399  0023                     	ds	1
   400  0024                     guardarservos@desfase:
   401  0024                     leerSERVOS@n:	
   402                           ; 1 bytes @ 0x4
   403                           
   404                           
   405                           ; 1 bytes @ 0x4
   406  0024                     	ds	1
   407  0025                     ??_leer3SEG:
   408  0025                     guardarservos@n:	
   409                           ; 1 bytes @ 0x5
   410                           
   411                           
   412                           ; 1 bytes @ 0x5
   413  0025                     	ds	1
   414  0026                     ??_guardar3SEG:
   415                           
   416                           ; 1 bytes @ 0x6
   417  0026                     	ds	2
   418  0028                     ??_main:
   419                           
   420                           ; 1 bytes @ 0x8
   421  0028                     	ds	3
   422                           
   423                           	psect	maintext
   424  01A3                     __pmaintext:	
   425 ;;
   426 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   427 ;;
   428 ;; *************** function _main *****************
   429 ;; Defined at:
   430 ;;		line 131 in file "mainP2.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : B00/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   444 ;;      Params:         0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0
   446 ;;      Temps:          0       3       0       0       0
   447 ;;      Totals:         0       3       0       0       0
   448 ;;Total ram usage:        3 bytes
   449 ;; Hardware stack levels required when called:    5
   450 ;; This function calls:
   451 ;;		_AnalogReadServo
   452 ;;		_configuraciones
   453 ;;		_guardar3SEG
   454 ;;		_leer3SEG
   455 ;;		_send1dato
   456 ;; This function is called by:
   457 ;;		Startup code after reset
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           
   462                           ;psect for function _main
   463  01A3                     _main:
   464  01A3                     l2120:	
   465                           ;incstack = 0
   466                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   467                           
   468                           
   469                           ;mainP2.c: 132:     configuraciones();
   470  01A3  120A  118A  212E  120A  118A  	fcall	_configuraciones
   471  01A8  29F8               	goto	l2150
   472  01A9                     l135:	
   473                           ;mainP2.c: 136:             case 0:
   474                           
   475                           
   476                           ;mainP2.c: 137:                 PORTBbits.RB7 = 0;
   477  01A9  1386               	bcf	6,7	;volatile
   478                           
   479                           ;mainP2.c: 139:                 if(UART.datorecep){
   480  01AA  1C31               	btfss	_UART,0
   481  01AB  29AD               	goto	u1181
   482  01AC  29AE               	goto	u1180
   483  01AD                     u1181:
   484  01AD  29DB               	goto	l136
   485  01AE                     u1180:
   486  01AE  29C7               	goto	l2140
   487  01AF                     l138:	
   488                           ;mainP2.c: 141:                         case '1':
   489                           
   490                           
   491                           ;mainP2.c: 142:                             T1CONbits.TMR1ON = 1;
   492  01AF  1410               	bsf	16,0	;volatile
   493                           
   494                           ;mainP2.c: 143:                             PORTEbits.RE0 = 1;
   495  01B0  1409               	bsf	9,0	;volatile
   496  01B1                     l2124:
   497                           
   498                           ;mainP2.c: 144:                             EXTREC = 0;
   499  01B1  1283               	bcf	3,5	;RP0=0, select bank0
   500  01B2  1303               	bcf	3,6	;RP1=0, select bank0
   501  01B3  01AC               	clrf	_EXTREC
   502                           
   503                           ;mainP2.c: 145:                             break;
   504  01B4  29DA               	goto	l139
   505  01B5                     l2126:
   506                           
   507                           ;mainP2.c: 147:                             CCPR2L = 0xFF;
   508  01B5  30FF               	movlw	255
   509  01B6  009B               	movwf	27	;volatile
   510  01B7                     l2128:
   511                           
   512                           ;mainP2.c: 148:                             send1dato('b');
   513  01B7  3062               	movlw	98
   514  01B8  120A  118A  2401  120A  118A  	fcall	_send1dato
   515  01BD  29B1               	goto	l2124
   516  01BE                     l2132:
   517                           
   518                           ;mainP2.c: 152:                             CCPR2L = 0x0F;
   519  01BE  300F               	movlw	15
   520  01BF  009B               	movwf	27	;volatile
   521  01C0                     l2134:
   522                           
   523                           ;mainP2.c: 153:                             send1dato('c');
   524  01C0  3063               	movlw	99
   525  01C1  120A  118A  2401  120A  118A  	fcall	_send1dato
   526  01C6  29B1               	goto	l2124
   527  01C7                     l2140:
   528  01C7  082C               	movf	_EXTREC,w
   529  01C8  00A8               	movwf	??_main
   530  01C9  01A9               	clrf	??_main+1
   531                           
   532                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   533                           ; Switch size 1, requested type "simple"
   534                           ; Number of cases is 1, Range of values is 0 to 0
   535                           ; switch strategies available:
   536                           ; Name         Instructions Cycles
   537                           ; simple_byte            4     3 (average)
   538                           ; direct_byte           11     8 (fixed)
   539                           ; jumptable            260     6 (fixed)
   540                           ;	Chosen strategy is simple_byte
   541  01CA  0829               	movf	??_main+1,w
   542  01CB  3A00               	xorlw	0	; case 0
   543  01CC  1903               	skipnz
   544  01CD  29CF               	goto	l2320
   545  01CE  29DA               	goto	l139
   546  01CF                     l2320:
   547                           
   548                           ; Switch size 1, requested type "simple"
   549                           ; Number of cases is 3, Range of values is 49 to 51
   550                           ; switch strategies available:
   551                           ; Name         Instructions Cycles
   552                           ; simple_byte           10     6 (average)
   553                           ; direct_byte           20    11 (fixed)
   554                           ; jumptable            263     9 (fixed)
   555                           ;	Chosen strategy is simple_byte
   556  01CF  0828               	movf	??_main,w
   557  01D0  3A31               	xorlw	49	; case 49
   558  01D1  1903               	skipnz
   559  01D2  29AF               	goto	l138
   560  01D3  3A03               	xorlw	3	; case 50
   561  01D4  1903               	skipnz
   562  01D5  29B5               	goto	l2126
   563  01D6  3A01               	xorlw	1	; case 51
   564  01D7  1903               	skipnz
   565  01D8  29BE               	goto	l2132
   566  01D9  29DA               	goto	l139
   567  01DA                     l139:
   568                           
   569                           ;mainP2.c: 160:                     UART.datorecep = 0;
   570  01DA  1031               	bcf	_UART,0
   571  01DB                     l136:	
   572                           ;mainP2.c: 161:                 }
   573                           
   574                           
   575                           ;mainP2.c: 163:                 if(T1CONbits.TMR1ON){
   576  01DB  1C10               	btfss	16,0	;volatile
   577  01DC  29DE               	goto	u1191
   578  01DD  29DF               	goto	u1190
   579  01DE                     u1191:
   580  01DE  29F8               	goto	l134
   581  01DF                     u1190:
   582  01DF                     l2142:
   583                           
   584                           ;mainP2.c: 164:                     leer3SEG();
   585  01DF  120A  118A  2381  120A  118A  	fcall	_leer3SEG
   586  01E4  29F8               	goto	l2150
   587  01E5                     l145:	
   588                           ;mainP2.c: 168:             case 1:
   589                           
   590                           
   591                           ;mainP2.c: 169:                 PORTBbits.RB7 = 1;
   592  01E5  1786               	bsf	6,7	;volatile
   593                           
   594                           ;mainP2.c: 171:                 if(SERVOS.guardar){
   595  01E6  1FB2               	btfss	_SERVOS,7
   596  01E7  29E9               	goto	u1201
   597  01E8  29EA               	goto	u1200
   598  01E9                     u1201:
   599  01E9  29F2               	goto	l146
   600  01EA                     u1200:
   601  01EA                     l2144:
   602                           
   603                           ;mainP2.c: 172:                     guardar3SEG();
   604  01EA  120A  118A  23AE  120A  118A  	fcall	_guardar3SEG
   605  01EF                     l2146:
   606                           
   607                           ;mainP2.c: 173:                     SERVOS.guardar = 0;
   608  01EF  1283               	bcf	3,5	;RP0=0, select bank0
   609  01F0  1303               	bcf	3,6	;RP1=0, select bank0
   610  01F1  13B2               	bcf	_SERVOS,7
   611  01F2                     l146:	
   612                           ;mainP2.c: 174:                 }
   613                           
   614                           
   615                           ;mainP2.c: 176:                 AnalogReadServo();
   616  01F2  120A  118A  2021  120A  118A  	fcall	_AnalogReadServo
   617                           
   618                           ;mainP2.c: 177:                 break;
   619  01F7  29F8               	goto	l2150
   620  01F8                     l134:
   621  01F8                     l2150:
   622  01F8  1283               	bcf	3,5	;RP0=0, select bank0
   623  01F9  1303               	bcf	3,6	;RP1=0, select bank0
   624  01FA  0E32               	swapf	_SERVOS,w
   625  01FB  00A8               	movwf	??_main
   626  01FC  0CA8               	rrf	??_main,f
   627  01FD  0C28               	rrf	??_main,w
   628  01FE  3901               	andlw	1
   629  01FF  00A9               	movwf	??_main+1
   630  0200  01AA               	clrf	??_main+2
   631                           
   632                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   633                           ; Switch size 1, requested type "simple"
   634                           ; Number of cases is 1, Range of values is 0 to 0
   635                           ; switch strategies available:
   636                           ; Name         Instructions Cycles
   637                           ; simple_byte            4     3 (average)
   638                           ; direct_byte           11     8 (fixed)
   639                           ; jumptable            260     6 (fixed)
   640                           ;	Chosen strategy is simple_byte
   641  0201  082A               	movf	??_main+2,w
   642  0202  3A00               	xorlw	0	; case 0
   643  0203  1903               	skipnz
   644  0204  2A06               	goto	l2322
   645  0205  29F8               	goto	l2150
   646  0206                     l2322:
   647                           
   648                           ; Switch size 1, requested type "simple"
   649                           ; Number of cases is 2, Range of values is 0 to 1
   650                           ; switch strategies available:
   651                           ; Name         Instructions Cycles
   652                           ; simple_byte            7     4 (average)
   653                           ; direct_byte           14     8 (fixed)
   654                           ; jumptable            260     6 (fixed)
   655                           ;	Chosen strategy is simple_byte
   656  0206  0829               	movf	??_main+1,w
   657  0207  3A00               	xorlw	0	; case 0
   658  0208  1903               	skipnz
   659  0209  29A9               	goto	l135
   660  020A  3A01               	xorlw	1	; case 1
   661  020B  1903               	skipnz
   662  020C  29E5               	goto	l145
   663  020D  29F8               	goto	l2150
   664  020E  120A  118A  280E   	ljmp	start
   665  0211                     __end_of_main:
   666                           
   667                           	psect	text1
   668  0381                     __ptext1:	
   669 ;; *************** function _leer3SEG *****************
   670 ;; Defined at:
   671 ;;		line 424 in file "mainP2.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   685 ;;      Params:         0       0       0       0       0
   686 ;;      Locals:         0       0       0       0       0
   687 ;;      Temps:          0       2       0       0       0
   688 ;;      Totals:         0       2       0       0       0
   689 ;;Total ram usage:        2 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; Hardware stack levels required when called:    4
   692 ;; This function calls:
   693 ;;		_leerSERVOS
   694 ;;		_send1dato
   695 ;; This function is called by:
   696 ;;		_main
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           
   701                           ;psect for function _leer3SEG
   702  0381                     _leer3SEG:
   703  0381                     l2030:	
   704                           ;incstack = 0
   705                           ; Regs used in _leer3SEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   706                           
   707                           
   708                           ;mainP2.c: 425:     switch(posicion){
   709  0381  2B9E               	goto	l2040
   710  0382                     l251:	
   711                           ;mainP2.c: 426:         case 31:
   712                           
   713                           
   714                           ;mainP2.c: 427:             T1CONbits.TMR1ON = 0;
   715  0382  1010               	bcf	16,0	;volatile
   716  0383                     l2032:
   717                           
   718                           ;mainP2.c: 428:             TMR1H = 0;
   719  0383  018F               	clrf	15	;volatile
   720                           
   721                           ;mainP2.c: 429:             TMR1L = 0;
   722  0384  018E               	clrf	14	;volatile
   723                           
   724                           ;mainP2.c: 430:             posicion = 0;
   725  0385  01AB               	clrf	_posicion
   726                           
   727                           ;mainP2.c: 431:             PORTE = 0;
   728  0386  0189               	clrf	9	;volatile
   729  0387                     l2034:
   730                           
   731                           ;mainP2.c: 432:             send1dato('a');
   732  0387  3061               	movlw	97
   733  0388  120A  118A  2401  120A  118A  	fcall	_send1dato
   734                           
   735                           ;mainP2.c: 433:             break;
   736  038D  2BAD               	goto	l254
   737  038E                     l2036:
   738                           
   739                           ;mainP2.c: 435:             leerSERVOS(4*posicion);
   740  038E  082B               	movf	_posicion,w
   741  038F  00A5               	movwf	??_leer3SEG
   742  0390  3001               	movlw	1
   743  0391                     u955:
   744  0391  1003               	clrc
   745  0392  0DA5               	rlf	??_leer3SEG,f
   746  0393  3EFF               	addlw	-1
   747  0394  1D03               	skipz
   748  0395  2B91               	goto	u955
   749  0396  1003               	clrc
   750  0397  0D25               	rlf	??_leer3SEG,w
   751  0398  120A  118A  227F  120A  118A  	fcall	_leerSERVOS
   752                           
   753                           ;mainP2.c: 436:             break;
   754  039D  2BAD               	goto	l254
   755  039E                     l2040:
   756  039E  1283               	bcf	3,5	;RP0=0, select bank0
   757  039F  1303               	bcf	3,6	;RP1=0, select bank0
   758  03A0  082B               	movf	_posicion,w
   759  03A1  00A5               	movwf	??_leer3SEG
   760  03A2  01A6               	clrf	??_leer3SEG+1
   761                           
   762                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   763                           ; Switch size 1, requested type "simple"
   764                           ; Number of cases is 1, Range of values is 0 to 0
   765                           ; switch strategies available:
   766                           ; Name         Instructions Cycles
   767                           ; simple_byte            4     3 (average)
   768                           ; direct_byte           11     8 (fixed)
   769                           ; jumptable            260     6 (fixed)
   770                           ;	Chosen strategy is simple_byte
   771  03A3  0826               	movf	??_leer3SEG+1,w
   772  03A4  3A00               	xorlw	0	; case 0
   773  03A5  1903               	skipnz
   774  03A6  2BA8               	goto	l2324
   775  03A7  2B8E               	goto	l2036
   776  03A8                     l2324:
   777                           
   778                           ; Switch size 1, requested type "simple"
   779                           ; Number of cases is 1, Range of values is 31 to 31
   780                           ; switch strategies available:
   781                           ; Name         Instructions Cycles
   782                           ; simple_byte            4     3 (average)
   783                           ; direct_byte           14    11 (fixed)
   784                           ; jumptable            263     9 (fixed)
   785                           ;	Chosen strategy is simple_byte
   786  03A8  0825               	movf	??_leer3SEG,w
   787  03A9  3A1F               	xorlw	31	; case 31
   788  03AA  1903               	skipnz
   789  03AB  2B82               	goto	l251
   790  03AC  2B8E               	goto	l2036
   791  03AD                     l254:
   792  03AD  0008               	return
   793  03AE                     __end_of_leer3SEG:
   794                           
   795                           	psect	text2
   796  0401                     __ptext2:	
   797 ;; *************** function _send1dato *****************
   798 ;; Defined at:
   799 ;;		line 354 in file "mainP2.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  dato            1    wreg     unsigned char 
   802 ;; Auto vars:     Size  Location     Type
   803 ;;  dato            1    0[BANK0 ] unsigned char 
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   813 ;;      Params:         0       0       0       0       0
   814 ;;      Locals:         0       1       0       0       0
   815 ;;      Temps:          0       0       0       0       0
   816 ;;      Totals:         0       1       0       0       0
   817 ;;Total ram usage:        1 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    2
   820 ;; This function calls:
   821 ;;		Nothing
   822 ;; This function is called by:
   823 ;;		_main
   824 ;;		_leer3SEG
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           
   829                           ;psect for function _send1dato
   830  0401                     _send1dato:
   831                           
   832                           ;incstack = 0
   833                           ; Regs used in _send1dato: [wreg]
   834                           ;send1dato@dato stored from wreg
   835  0401  1283               	bcf	3,5	;RP0=0, select bank0
   836  0402  1303               	bcf	3,6	;RP1=0, select bank0
   837  0403  00A0               	movwf	send1dato@dato
   838  0404                     l1976:
   839                           
   840                           ;mainP2.c: 355:     TXREG = dato;
   841  0404  0820               	movf	send1dato@dato,w
   842  0405  0099               	movwf	25	;volatile
   843  0406                     l206:	
   844                           ;mainP2.c: 356:     while(!TXSTAbits.TRMT);
   845                           
   846  0406  1683               	bsf	3,5	;RP0=1, select bank1
   847  0407  1303               	bcf	3,6	;RP1=0, select bank1
   848  0408  1C98               	btfss	24,1	;volatile
   849  0409  2C0B               	goto	u921
   850  040A  2C0C               	goto	u920
   851  040B                     u921:
   852  040B  2C06               	goto	l206
   853  040C                     u920:
   854  040C                     l209:
   855  040C  0008               	return
   856  040D                     __end_of_send1dato:
   857                           
   858                           	psect	text3
   859  027F                     __ptext3:	
   860 ;; *************** function _leerSERVOS *****************
   861 ;; Defined at:
   862 ;;		line 394 in file "mainP2.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  desfase         1    wreg     unsigned char 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  desfase         1    3[BANK0 ] unsigned char 
   867 ;;  n               1    4[BANK0 ] unsigned char 
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   877 ;;      Params:         0       0       0       0       0
   878 ;;      Locals:         0       2       0       0       0
   879 ;;      Temps:          0       2       0       0       0
   880 ;;      Totals:         0       4       0       0       0
   881 ;;Total ram usage:        4 bytes
   882 ;; Hardware stack levels used:    1
   883 ;; Hardware stack levels required when called:    3
   884 ;; This function calls:
   885 ;;		_leerposiciones
   886 ;; This function is called by:
   887 ;;		_leer3SEG
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           
   892                           ;psect for function _leerSERVOS
   893  027F                     _leerSERVOS:
   894                           
   895                           ;incstack = 0
   896                           ; Regs used in _leerSERVOS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   897                           ;leerSERVOS@desfase stored from wreg
   898  027F  1283               	bcf	3,5	;RP0=0, select bank0
   899  0280  1303               	bcf	3,6	;RP1=0, select bank0
   900  0281  00A3               	movwf	leerSERVOS@desfase
   901  0282                     l2004:
   902                           
   903                           ;mainP2.c: 395:     for(uint8_t n=0;n<=3; n++){
   904  0282  01A4               	clrf	leerSERVOS@n
   905  0283  2AB8               	goto	l2020
   906  0284                     l2010:
   907  0284  0823               	movf	leerSERVOS@desfase,w
   908  0285  0724               	addwf	leerSERVOS@n,w
   909  0286  120A  118A  23F2  120A  118A  	fcall	_leerposiciones
   910  028B  1283               	bcf	3,5	;RP0=0, select bank0
   911  028C  1303               	bcf	3,6	;RP1=0, select bank0
   912  028D  00A1               	movwf	??_leerSERVOS
   913  028E  0821               	movf	??_leerSERVOS,w
   914  028F  00B0               	movwf	_POT1
   915                           
   916                           ;mainP2.c: 398:                 break;
   917  0290  2ACE               	goto	l2022
   918  0291                     l2012:
   919  0291  0823               	movf	leerSERVOS@desfase,w
   920  0292  0724               	addwf	leerSERVOS@n,w
   921  0293  120A  118A  23F2  120A  118A  	fcall	_leerposiciones
   922  0298  1283               	bcf	3,5	;RP0=0, select bank0
   923  0299  1303               	bcf	3,6	;RP1=0, select bank0
   924  029A  00A1               	movwf	??_leerSERVOS
   925  029B  0821               	movf	??_leerSERVOS,w
   926  029C  00AF               	movwf	_POT2
   927                           
   928                           ;mainP2.c: 400:                 break;
   929  029D  2ACE               	goto	l2022
   930  029E                     l2014:
   931  029E  0823               	movf	leerSERVOS@desfase,w
   932  029F  0724               	addwf	leerSERVOS@n,w
   933  02A0  120A  118A  23F2  120A  118A  	fcall	_leerposiciones
   934  02A5  1283               	bcf	3,5	;RP0=0, select bank0
   935  02A6  1303               	bcf	3,6	;RP1=0, select bank0
   936  02A7  00A1               	movwf	??_leerSERVOS
   937  02A8  0821               	movf	??_leerSERVOS,w
   938  02A9  00AE               	movwf	_POT3
   939                           
   940                           ;mainP2.c: 402:                 break;
   941  02AA  2ACE               	goto	l2022
   942  02AB                     l2016:
   943  02AB  0823               	movf	leerSERVOS@desfase,w
   944  02AC  0724               	addwf	leerSERVOS@n,w
   945  02AD  120A  118A  23F2  120A  118A  	fcall	_leerposiciones
   946  02B2  1283               	bcf	3,5	;RP0=0, select bank0
   947  02B3  1303               	bcf	3,6	;RP1=0, select bank0
   948  02B4  00A1               	movwf	??_leerSERVOS
   949  02B5  0821               	movf	??_leerSERVOS,w
   950  02B6  00AD               	movwf	_POT4
   951                           
   952                           ;mainP2.c: 404:                 break;
   953  02B7  2ACE               	goto	l2022
   954  02B8                     l2020:
   955  02B8  0824               	movf	leerSERVOS@n,w
   956  02B9  00A1               	movwf	??_leerSERVOS
   957  02BA  01A2               	clrf	??_leerSERVOS+1
   958                           
   959                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   960                           ; Switch size 1, requested type "simple"
   961                           ; Number of cases is 1, Range of values is 0 to 0
   962                           ; switch strategies available:
   963                           ; Name         Instructions Cycles
   964                           ; simple_byte            4     3 (average)
   965                           ; direct_byte           11     8 (fixed)
   966                           ; jumptable            260     6 (fixed)
   967                           ;	Chosen strategy is simple_byte
   968  02BB  0822               	movf	??_leerSERVOS+1,w
   969  02BC  3A00               	xorlw	0	; case 0
   970  02BD  1903               	skipnz
   971  02BE  2AC0               	goto	l2326
   972  02BF  2ACE               	goto	l2022
   973  02C0                     l2326:
   974                           
   975                           ; Switch size 1, requested type "simple"
   976                           ; Number of cases is 4, Range of values is 0 to 3
   977                           ; switch strategies available:
   978                           ; Name         Instructions Cycles
   979                           ; simple_byte           13     7 (average)
   980                           ; direct_byte           20     8 (fixed)
   981                           ; jumptable            260     6 (fixed)
   982                           ;	Chosen strategy is simple_byte
   983  02C0  0821               	movf	??_leerSERVOS,w
   984  02C1  3A00               	xorlw	0	; case 0
   985  02C2  1903               	skipnz
   986  02C3  2A84               	goto	l2010
   987  02C4  3A01               	xorlw	1	; case 1
   988  02C5  1903               	skipnz
   989  02C6  2A91               	goto	l2012
   990  02C7  3A03               	xorlw	3	; case 2
   991  02C8  1903               	skipnz
   992  02C9  2A9E               	goto	l2014
   993  02CA  3A01               	xorlw	1	; case 3
   994  02CB  1903               	skipnz
   995  02CC  2AAB               	goto	l2016
   996  02CD  2ACE               	goto	l2022
   997  02CE                     l2022:
   998                           
   999                           ;mainP2.c: 406:     }
  1000  02CE  3001               	movlw	1
  1001  02CF  00A1               	movwf	??_leerSERVOS
  1002  02D0  0821               	movf	??_leerSERVOS,w
  1003  02D1  07A4               	addwf	leerSERVOS@n,f
  1004  02D2                     l2024:
  1005  02D2  3004               	movlw	4
  1006  02D3  0224               	subwf	leerSERVOS@n,w
  1007  02D4  1C03               	skipc
  1008  02D5  2AD7               	goto	u941
  1009  02D6  2AD8               	goto	u940
  1010  02D7                     u941:
  1011  02D7  2AB8               	goto	l2020
  1012  02D8                     u940:
  1013  02D8                     l240:
  1014  02D8  0008               	return
  1015  02D9                     __end_of_leerSERVOS:
  1016                           
  1017                           	psect	text4
  1018  03F2                     __ptext4:	
  1019 ;; *************** function _leerposiciones *****************
  1020 ;; Defined at:
  1021 ;;		line 387 in file "mainP2.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  direccion       1    wreg     unsigned char 
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  direccion       1    0[BANK0 ] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      unsigned char 
  1028 ;; Registers used:
  1029 ;;		wreg
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1035 ;;      Params:         0       0       0       0       0
  1036 ;;      Locals:         0       1       0       0       0
  1037 ;;      Temps:          0       0       0       0       0
  1038 ;;      Totals:         0       1       0       0       0
  1039 ;;Total ram usage:        1 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; Hardware stack levels required when called:    2
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_leerSERVOS
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           
  1050                           ;psect for function _leerposiciones
  1051  03F2                     _leerposiciones:
  1052                           
  1053                           ;incstack = 0
  1054                           ; Regs used in _leerposiciones: [wreg]
  1055                           ;leerposiciones@direccion stored from wreg
  1056  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  1057  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  1058  03F4  00A0               	movwf	leerposiciones@direccion
  1059  03F5                     l1968:
  1060                           
  1061                           ;mainP2.c: 388:     EEADR = direccion;
  1062  03F5  0820               	movf	leerposiciones@direccion,w
  1063  03F6  1283               	bcf	3,5	;RP0=0, select bank2
  1064  03F7  1703               	bsf	3,6	;RP1=1, select bank2
  1065  03F8  008D               	movwf	13	;volatile
  1066  03F9                     l1970:
  1067                           
  1068                           ;mainP2.c: 389:     EECON1bits.EEPGD = 0;
  1069  03F9  1683               	bsf	3,5	;RP0=1, select bank3
  1070  03FA  1703               	bsf	3,6	;RP1=1, select bank3
  1071  03FB  138C               	bcf	12,7	;volsfr
  1072  03FC                     l1972:
  1073                           
  1074                           ;mainP2.c: 390:     EECON1bits.RD = 1;
  1075  03FC  140C               	bsf	12,0	;volsfr
  1076                           
  1077                           ;mainP2.c: 391:     return EEDAT;
  1078  03FD  1283               	bcf	3,5	;RP0=0, select bank2
  1079  03FE  1703               	bsf	3,6	;RP1=1, select bank2
  1080  03FF  080C               	movf	12,w	;volatile
  1081  0400                     l229:
  1082  0400  0008               	return
  1083  0401                     __end_of_leerposiciones:
  1084                           
  1085                           	psect	text5
  1086  03AE                     __ptext5:	
  1087 ;; *************** function _guardar3SEG *****************
  1088 ;; Defined at:
  1089 ;;		line 409 in file "mainP2.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1103 ;;      Params:         0       0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0
  1105 ;;      Temps:          0       2       0       0       0
  1106 ;;      Totals:         0       2       0       0       0
  1107 ;;Total ram usage:        2 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; Hardware stack levels required when called:    4
  1110 ;; This function calls:
  1111 ;;		_guardarservos
  1112 ;; This function is called by:
  1113 ;;		_main
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           
  1118                           ;psect for function _guardar3SEG
  1119  03AE                     _guardar3SEG:
  1120  03AE                     l2046:	
  1121                           ;incstack = 0
  1122                           ; Regs used in _guardar3SEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1123                           
  1124                           
  1125                           ;mainP2.c: 410:     switch(posicion){
  1126  03AE  2BC5               	goto	l2054
  1127  03AF                     l244:	
  1128                           ;mainP2.c: 411:         case 31:
  1129                           
  1130                           
  1131                           ;mainP2.c: 412:             T1CONbits.TMR1ON = 0;
  1132  03AF  1010               	bcf	16,0	;volatile
  1133  03B0                     l2048:
  1134                           
  1135                           ;mainP2.c: 413:             TMR1H = 0;
  1136  03B0  018F               	clrf	15	;volatile
  1137                           
  1138                           ;mainP2.c: 414:             TMR1L = 0;
  1139  03B1  018E               	clrf	14	;volatile
  1140                           
  1141                           ;mainP2.c: 415:             posicion = 0;
  1142  03B2  01AB               	clrf	_posicion
  1143                           
  1144                           ;mainP2.c: 416:             PORTE = 0;
  1145  03B3  0189               	clrf	9	;volatile
  1146                           
  1147                           ;mainP2.c: 417:             break;
  1148  03B4  2BD4               	goto	l247
  1149  03B5                     l2050:
  1150                           
  1151                           ;mainP2.c: 419:             guardarservos(4*posicion);
  1152  03B5  082B               	movf	_posicion,w
  1153  03B6  00A6               	movwf	??_guardar3SEG
  1154  03B7  3001               	movlw	1
  1155  03B8                     u965:
  1156  03B8  1003               	clrc
  1157  03B9  0DA6               	rlf	??_guardar3SEG,f
  1158  03BA  3EFF               	addlw	-1
  1159  03BB  1D03               	skipz
  1160  03BC  2BB8               	goto	u965
  1161  03BD  1003               	clrc
  1162  03BE  0D26               	rlf	??_guardar3SEG,w
  1163  03BF  120A  118A  22D9  120A  118A  	fcall	_guardarservos
  1164                           
  1165                           ;mainP2.c: 420:             break;
  1166  03C4  2BD4               	goto	l247
  1167  03C5                     l2054:
  1168  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  1169  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  1170  03C7  082B               	movf	_posicion,w
  1171  03C8  00A6               	movwf	??_guardar3SEG
  1172  03C9  01A7               	clrf	??_guardar3SEG+1
  1173                           
  1174                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1175                           ; Switch size 1, requested type "simple"
  1176                           ; Number of cases is 1, Range of values is 0 to 0
  1177                           ; switch strategies available:
  1178                           ; Name         Instructions Cycles
  1179                           ; simple_byte            4     3 (average)
  1180                           ; direct_byte           11     8 (fixed)
  1181                           ; jumptable            260     6 (fixed)
  1182                           ;	Chosen strategy is simple_byte
  1183  03CA  0827               	movf	??_guardar3SEG+1,w
  1184  03CB  3A00               	xorlw	0	; case 0
  1185  03CC  1903               	skipnz
  1186  03CD  2BCF               	goto	l2328
  1187  03CE  2BB5               	goto	l2050
  1188  03CF                     l2328:
  1189                           
  1190                           ; Switch size 1, requested type "simple"
  1191                           ; Number of cases is 1, Range of values is 31 to 31
  1192                           ; switch strategies available:
  1193                           ; Name         Instructions Cycles
  1194                           ; simple_byte            4     3 (average)
  1195                           ; direct_byte           14    11 (fixed)
  1196                           ; jumptable            263     9 (fixed)
  1197                           ;	Chosen strategy is simple_byte
  1198  03CF  0826               	movf	??_guardar3SEG,w
  1199  03D0  3A1F               	xorlw	31	; case 31
  1200  03D1  1903               	skipnz
  1201  03D2  2BAF               	goto	l244
  1202  03D3  2BB5               	goto	l2050
  1203  03D4                     l247:
  1204  03D4  0008               	return
  1205  03D5                     __end_of_guardar3SEG:
  1206                           
  1207                           	psect	text6
  1208  02D9                     __ptext6:	
  1209 ;; *************** function _guardarservos *****************
  1210 ;; Defined at:
  1211 ;;		line 372 in file "mainP2.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;  desfase         1    wreg     unsigned char 
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;  desfase         1    4[BANK0 ] unsigned char 
  1216 ;;  n               1    5[BANK0 ] unsigned char 
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       0       0       0       0
  1227 ;;      Locals:         0       2       0       0       0
  1228 ;;      Temps:          0       2       0       0       0
  1229 ;;      Totals:         0       4       0       0       0
  1230 ;;Total ram usage:        4 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    3
  1233 ;; This function calls:
  1234 ;;		_guardarposiciones
  1235 ;; This function is called by:
  1236 ;;		_guardar3SEG
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           
  1241                           ;psect for function _guardarservos
  1242  02D9                     _guardarservos:
  1243                           
  1244                           ;incstack = 0
  1245                           ; Regs used in _guardarservos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1246                           ;guardarservos@desfase stored from wreg
  1247  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  1248  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  1249  02DB  00A4               	movwf	guardarservos@desfase
  1250  02DC                     l1978:
  1251                           
  1252                           ;mainP2.c: 373:     for(uint8_t n=0;n<=3;n++){
  1253  02DC  01A5               	clrf	guardarservos@n
  1254  02DD  2B0E               	goto	l1994
  1255  02DE                     l1984:
  1256  02DE  0824               	movf	guardarservos@desfase,w
  1257  02DF  0725               	addwf	guardarservos@n,w
  1258  02E0  00A2               	movwf	??_guardarservos
  1259  02E1  0822               	movf	??_guardarservos,w
  1260  02E2  00A0               	movwf	guardarposiciones@direccion
  1261  02E3  0830               	movf	_POT1,w
  1262  02E4  120A  118A  23D5  120A  118A  	fcall	_guardarposiciones
  1263                           
  1264                           ;mainP2.c: 376:                 break;
  1265  02E9  2B24               	goto	l1996
  1266  02EA                     l1986:
  1267  02EA  0824               	movf	guardarservos@desfase,w
  1268  02EB  0725               	addwf	guardarservos@n,w
  1269  02EC  00A2               	movwf	??_guardarservos
  1270  02ED  0822               	movf	??_guardarservos,w
  1271  02EE  00A0               	movwf	guardarposiciones@direccion
  1272  02EF  082F               	movf	_POT2,w
  1273  02F0  120A  118A  23D5  120A  118A  	fcall	_guardarposiciones
  1274                           
  1275                           ;mainP2.c: 378:                 break;
  1276  02F5  2B24               	goto	l1996
  1277  02F6                     l1988:
  1278  02F6  0824               	movf	guardarservos@desfase,w
  1279  02F7  0725               	addwf	guardarservos@n,w
  1280  02F8  00A2               	movwf	??_guardarservos
  1281  02F9  0822               	movf	??_guardarservos,w
  1282  02FA  00A0               	movwf	guardarposiciones@direccion
  1283  02FB  082E               	movf	_POT3,w
  1284  02FC  120A  118A  23D5  120A  118A  	fcall	_guardarposiciones
  1285                           
  1286                           ;mainP2.c: 380:                 break;
  1287  0301  2B24               	goto	l1996
  1288  0302                     l1990:
  1289  0302  0824               	movf	guardarservos@desfase,w
  1290  0303  0725               	addwf	guardarservos@n,w
  1291  0304  00A2               	movwf	??_guardarservos
  1292  0305  0822               	movf	??_guardarservos,w
  1293  0306  00A0               	movwf	guardarposiciones@direccion
  1294  0307  082D               	movf	_POT4,w
  1295  0308  120A  118A  23D5  120A  118A  	fcall	_guardarposiciones
  1296                           
  1297                           ;mainP2.c: 382:                 break;
  1298  030D  2B24               	goto	l1996
  1299  030E                     l1994:
  1300  030E  0825               	movf	guardarservos@n,w
  1301  030F  00A2               	movwf	??_guardarservos
  1302  0310  01A3               	clrf	??_guardarservos+1
  1303                           
  1304                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1305                           ; Switch size 1, requested type "simple"
  1306                           ; Number of cases is 1, Range of values is 0 to 0
  1307                           ; switch strategies available:
  1308                           ; Name         Instructions Cycles
  1309                           ; simple_byte            4     3 (average)
  1310                           ; direct_byte           11     8 (fixed)
  1311                           ; jumptable            260     6 (fixed)
  1312                           ;	Chosen strategy is simple_byte
  1313  0311  0823               	movf	??_guardarservos+1,w
  1314  0312  3A00               	xorlw	0	; case 0
  1315  0313  1903               	skipnz
  1316  0314  2B16               	goto	l2330
  1317  0315  2B24               	goto	l1996
  1318  0316                     l2330:
  1319                           
  1320                           ; Switch size 1, requested type "simple"
  1321                           ; Number of cases is 4, Range of values is 0 to 3
  1322                           ; switch strategies available:
  1323                           ; Name         Instructions Cycles
  1324                           ; simple_byte           13     7 (average)
  1325                           ; direct_byte           20     8 (fixed)
  1326                           ; jumptable            260     6 (fixed)
  1327                           ;	Chosen strategy is simple_byte
  1328  0316  0822               	movf	??_guardarservos,w
  1329  0317  3A00               	xorlw	0	; case 0
  1330  0318  1903               	skipnz
  1331  0319  2ADE               	goto	l1984
  1332  031A  3A01               	xorlw	1	; case 1
  1333  031B  1903               	skipnz
  1334  031C  2AEA               	goto	l1986
  1335  031D  3A03               	xorlw	3	; case 2
  1336  031E  1903               	skipnz
  1337  031F  2AF6               	goto	l1988
  1338  0320  3A01               	xorlw	1	; case 3
  1339  0321  1903               	skipnz
  1340  0322  2B02               	goto	l1990
  1341  0323  2B24               	goto	l1996
  1342  0324                     l1996:
  1343                           
  1344                           ;mainP2.c: 384:     }
  1345  0324  3001               	movlw	1
  1346  0325  1283               	bcf	3,5	;RP0=0, select bank0
  1347  0326  1303               	bcf	3,6	;RP1=0, select bank0
  1348  0327  00A2               	movwf	??_guardarservos
  1349  0328  0822               	movf	??_guardarservos,w
  1350  0329  07A5               	addwf	guardarservos@n,f
  1351  032A                     l1998:
  1352  032A  3004               	movlw	4
  1353  032B  0225               	subwf	guardarservos@n,w
  1354  032C  1C03               	skipc
  1355  032D  2B2F               	goto	u931
  1356  032E  2B30               	goto	u930
  1357  032F                     u931:
  1358  032F  2B0E               	goto	l1994
  1359  0330                     u930:
  1360  0330                     l226:
  1361  0330  0008               	return
  1362  0331                     __end_of_guardarservos:
  1363                           
  1364                           	psect	text7
  1365  03D5                     __ptext7:	
  1366 ;; *************** function _guardarposiciones *****************
  1367 ;; Defined at:
  1368 ;;		line 359 in file "mainP2.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  guardar         1    wreg     unsigned char 
  1371 ;;  direccion       1    0[BANK0 ] unsigned char 
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  guardar         1    1[BANK0 ] unsigned char 
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      void 
  1376 ;; Registers used:
  1377 ;;		wreg
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1383 ;;      Params:         0       1       0       0       0
  1384 ;;      Locals:         0       1       0       0       0
  1385 ;;      Temps:          0       0       0       0       0
  1386 ;;      Totals:         0       2       0       0       0
  1387 ;;Total ram usage:        2 bytes
  1388 ;; Hardware stack levels used:    1
  1389 ;; Hardware stack levels required when called:    2
  1390 ;; This function calls:
  1391 ;;		Nothing
  1392 ;; This function is called by:
  1393 ;;		_guardarservos
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           
  1398                           ;psect for function _guardarposiciones
  1399  03D5                     _guardarposiciones:
  1400                           
  1401                           ;incstack = 0
  1402                           ; Regs used in _guardarposiciones: [wreg]
  1403                           ;guardarposiciones@guardar stored from wreg
  1404  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  1405  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  1406  03D7  00A1               	movwf	guardarposiciones@guardar
  1407  03D8                     l1958:
  1408                           
  1409                           ;mainP2.c: 360:     EEADR = direccion;
  1410  03D8  0820               	movf	guardarposiciones@direccion,w
  1411  03D9  1283               	bcf	3,5	;RP0=0, select bank2
  1412  03DA  1703               	bsf	3,6	;RP1=1, select bank2
  1413  03DB  008D               	movwf	13	;volatile
  1414                           
  1415                           ;mainP2.c: 361:     EEDAT = guardar;
  1416  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  1417  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  1418  03DE  0821               	movf	guardarposiciones@guardar,w
  1419  03DF  1283               	bcf	3,5	;RP0=0, select bank2
  1420  03E0  1703               	bsf	3,6	;RP1=1, select bank2
  1421  03E1  008C               	movwf	12	;volatile
  1422  03E2                     l1960:
  1423                           
  1424                           ;mainP2.c: 362:     EECON1bits.WREN = 1;
  1425  03E2  1683               	bsf	3,5	;RP0=1, select bank3
  1426  03E3  1703               	bsf	3,6	;RP1=1, select bank3
  1427  03E4  150C               	bsf	12,2	;volsfr
  1428  03E5                     l1962:
  1429                           
  1430                           ;mainP2.c: 363:     INTCONbits.GIE = 0;
  1431  03E5  138B               	bcf	11,7	;volatile
  1432                           
  1433                           ;mainP2.c: 364:     EECON2 = 0X55;
  1434  03E6  3055               	movlw	85
  1435  03E7  008D               	movwf	13	;volsfr
  1436                           
  1437                           ;mainP2.c: 365:     EECON2 = 0XAA;
  1438  03E8  30AA               	movlw	170
  1439  03E9  008D               	movwf	13	;volsfr
  1440  03EA                     l1964:
  1441                           
  1442                           ;mainP2.c: 366:     EECON1bits.WR = 1;
  1443  03EA  148C               	bsf	12,1	;volsfr
  1444  03EB                     l1966:
  1445                           
  1446                           ;mainP2.c: 367:     INTCONbits.GIE = 1;
  1447  03EB  178B               	bsf	11,7	;volatile
  1448  03EC                     l212:	
  1449                           ;mainP2.c: 368:     while(EECON1bits.WR);
  1450                           
  1451  03EC  188C               	btfsc	12,1	;volsfr
  1452  03ED  2BEF               	goto	u911
  1453  03EE  2BF0               	goto	u910
  1454  03EF                     u911:
  1455  03EF  2BEC               	goto	l212
  1456  03F0                     u910:
  1457  03F0                     l214:
  1458                           
  1459                           ;mainP2.c: 369:     EECON1bits.WREN = 0;
  1460  03F0  110C               	bcf	12,2	;volsfr
  1461  03F1                     l215:
  1462  03F1  0008               	return
  1463  03F2                     __end_of_guardarposiciones:
  1464                           
  1465                           	psect	text8
  1466  012E                     __ptext8:	
  1467 ;; *************** function _configuraciones *****************
  1468 ;; Defined at:
  1469 ;;		line 186 in file "mainP2.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, status,2, status,0
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1483 ;;      Params:         0       0       0       0       0
  1484 ;;      Locals:         0       0       0       0       0
  1485 ;;      Temps:          0       0       0       0       0
  1486 ;;      Totals:         0       0       0       0       0
  1487 ;;Total ram usage:        0 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    2
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           
  1498                           ;psect for function _configuraciones
  1499  012E                     _configuraciones:
  1500  012E                     l1518:	
  1501                           ;incstack = 0
  1502                           ; Regs used in _configuraciones: [wreg+status,2+status,0]
  1503                           
  1504                           
  1505                           ;mainP2.c: 188:     ANSEL = 0X0F;
  1506  012E  300F               	movlw	15
  1507  012F  1683               	bsf	3,5	;RP0=1, select bank3
  1508  0130  1703               	bsf	3,6	;RP1=1, select bank3
  1509  0131  0088               	movwf	8	;volatile
  1510  0132                     l1520:
  1511                           
  1512                           ;mainP2.c: 189:     ANSELH = 0X00;
  1513  0132  0189               	clrf	9	;volatile
  1514  0133                     l1522:
  1515                           
  1516                           ;mainP2.c: 190:     TRISA = 0X0F;
  1517  0133  300F               	movlw	15
  1518  0134  1683               	bsf	3,5	;RP0=1, select bank1
  1519  0135  1303               	bcf	3,6	;RP1=0, select bank1
  1520  0136  0085               	movwf	5	;volatile
  1521  0137                     l1524:
  1522                           
  1523                           ;mainP2.c: 191:     TRISB = 0X07;
  1524  0137  3007               	movlw	7
  1525  0138  0086               	movwf	6	;volatile
  1526  0139                     l1526:
  1527                           
  1528                           ;mainP2.c: 192:     TRISC = 0X82;
  1529  0139  3082               	movlw	130
  1530  013A  0087               	movwf	7	;volatile
  1531                           
  1532                           ;mainP2.c: 193:     TRISD = 0X00;
  1533  013B  0188               	clrf	8	;volatile
  1534                           
  1535                           ;mainP2.c: 194:     TRISE = 0X00;
  1536  013C  0189               	clrf	9	;volatile
  1537                           
  1538                           ;mainP2.c: 195:     PORTA = 0X00;
  1539  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1540  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1541  013F  0185               	clrf	5	;volatile
  1542                           
  1543                           ;mainP2.c: 196:     PORTB = 0X00;
  1544  0140  0186               	clrf	6	;volatile
  1545                           
  1546                           ;mainP2.c: 197:     PORTC = 0X00;
  1547  0141  0187               	clrf	7	;volatile
  1548                           
  1549                           ;mainP2.c: 198:     PORTD = 0X00;
  1550  0142  0188               	clrf	8	;volatile
  1551                           
  1552                           ;mainP2.c: 199:     PORTE = 0X00;
  1553  0143  0189               	clrf	9	;volatile
  1554                           
  1555                           ;mainP2.c: 200:     posicion = 0;
  1556  0144  01AB               	clrf	_posicion
  1557  0145                     l1528:
  1558                           
  1559                           ;mainP2.c: 202:     OSCCONbits.IRCF = 0b111;
  1560  0145  3070               	movlw	112
  1561  0146  1683               	bsf	3,5	;RP0=1, select bank1
  1562  0147  1303               	bcf	3,6	;RP1=0, select bank1
  1563  0148  048F               	iorwf	15,f	;volatile
  1564  0149                     l1530:
  1565                           
  1566                           ;mainP2.c: 203:     OSCCONbits.SCS = 0b1;
  1567  0149  140F               	bsf	15,0	;volatile
  1568  014A                     l1532:
  1569                           
  1570                           ;mainP2.c: 206:     T1CONbits.T1CKPS = 0B10;
  1571  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1572  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1573  014C  0810               	movf	16,w	;volatile
  1574  014D  39CF               	andlw	-49
  1575  014E  3820               	iorlw	32
  1576  014F  0090               	movwf	16	;volatile
  1577  0150                     l1534:
  1578                           
  1579                           ;mainP2.c: 207:     TMR1H = 0B00111100;
  1580  0150  303C               	movlw	60
  1581  0151  008F               	movwf	15	;volatile
  1582  0152                     l1536:
  1583                           
  1584                           ;mainP2.c: 208:     TMR1L = 0B10101111;
  1585  0152  30AF               	movlw	175
  1586  0153  008E               	movwf	14	;volatile
  1587  0154                     l1538:
  1588                           
  1589                           ;mainP2.c: 209:     T1CONbits.TMR1ON = 0;
  1590  0154  1010               	bcf	16,0	;volatile
  1591  0155                     l1540:
  1592                           
  1593                           ;mainP2.c: 212:     INTCONbits.TMR0IF = 0;
  1594  0155  110B               	bcf	11,2	;volatile
  1595  0156                     l1542:
  1596                           
  1597                           ;mainP2.c: 213:     INTCONbits.TMR0IE = 1;
  1598  0156  168B               	bsf	11,5	;volatile
  1599  0157                     l1544:
  1600                           
  1601                           ;mainP2.c: 214:     PIR1bits.TMR1IF = 0;
  1602  0157  100C               	bcf	12,0	;volatile
  1603  0158                     l1546:
  1604                           
  1605                           ;mainP2.c: 215:     PIE1bits.TMR1IE = 1;
  1606  0158  1683               	bsf	3,5	;RP0=1, select bank1
  1607  0159  1303               	bcf	3,6	;RP1=0, select bank1
  1608  015A  140C               	bsf	12,0	;volatile
  1609  015B                     l1548:
  1610                           
  1611                           ;mainP2.c: 216:     INTCONbits.RBIF = 0;
  1612  015B  100B               	bcf	11,0	;volatile
  1613  015C                     l1550:
  1614                           
  1615                           ;mainP2.c: 217:     INTCONbits.RBIE = 0;
  1616  015C  118B               	bcf	11,3	;volatile
  1617  015D                     l1552:
  1618                           
  1619                           ;mainP2.c: 218:     INTCONbits.PEIE = 1;
  1620  015D  170B               	bsf	11,6	;volatile
  1621  015E                     l1554:
  1622                           
  1623                           ;mainP2.c: 219:     PIE1bits.RCIE = 1;
  1624  015E  168C               	bsf	12,5	;volatile
  1625  015F                     l1556:
  1626                           
  1627                           ;mainP2.c: 220:     INTCONbits.GIE = 1;
  1628  015F  178B               	bsf	11,7	;volatile
  1629  0160                     l1558:
  1630                           
  1631                           ;mainP2.c: 223:     IOCBbits.IOCB0 = 1;
  1632  0160  1416               	bsf	22,0	;volatile
  1633  0161                     l1560:
  1634                           
  1635                           ;mainP2.c: 224:     IOCBbits.IOCB1 = 1;
  1636  0161  1496               	bsf	22,1	;volatile
  1637  0162                     l1562:
  1638                           
  1639                           ;mainP2.c: 225:     IOCBbits.IOCB2 = 1;
  1640  0162  1516               	bsf	22,2	;volatile
  1641  0163                     l1564:
  1642                           
  1643                           ;mainP2.c: 228:     ADCON0bits.ADCS = 0b10;
  1644  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1645  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1646  0165  081F               	movf	31,w	;volatile
  1647  0166  393F               	andlw	-193
  1648  0167  3880               	iorlw	128
  1649  0168  009F               	movwf	31	;volatile
  1650  0169                     l1566:
  1651                           
  1652                           ;mainP2.c: 229:     ADCON0bits.CHS = 0b0000;
  1653  0169  30C3               	movlw	-61
  1654  016A  059F               	andwf	31,f	;volatile
  1655  016B                     l1568:
  1656                           
  1657                           ;mainP2.c: 230:     ADCON0bits.GO = 0b0;
  1658  016B  109F               	bcf	31,1	;volatile
  1659  016C                     l1570:
  1660                           
  1661                           ;mainP2.c: 231:     ADCON0bits.ADON = 0b1;
  1662  016C  141F               	bsf	31,0	;volatile
  1663  016D                     l1572:
  1664                           
  1665                           ;mainP2.c: 232:     ADCON1bits.ADFM = 0b0;
  1666  016D  1683               	bsf	3,5	;RP0=1, select bank1
  1667  016E  1303               	bcf	3,6	;RP1=0, select bank1
  1668  016F  139F               	bcf	31,7	;volatile
  1669  0170                     l1574:
  1670                           
  1671                           ;mainP2.c: 233:     ADCON1bits.VCFG1 = 0b0;
  1672  0170  129F               	bcf	31,5	;volatile
  1673  0171                     l1576:
  1674                           
  1675                           ;mainP2.c: 234:     ADCON1bits.VCFG0 = 0b0;
  1676  0171  121F               	bcf	31,4	;volatile
  1677  0172                     l1578:
  1678                           
  1679                           ;mainP2.c: 237:     PR2 = 249;
  1680  0172  30F9               	movlw	249
  1681  0173  0092               	movwf	18	;volatile
  1682  0174                     l1580:
  1683                           
  1684                           ;mainP2.c: 238:     CCP2CONbits.CCP2M = 0b1111;
  1685  0174  300F               	movlw	15
  1686  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1687  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1688  0177  049D               	iorwf	29,f	;volatile
  1689  0178                     l1582:
  1690                           
  1691                           ;mainP2.c: 239:     CCPR2L = 0x0F;
  1692  0178  300F               	movlw	15
  1693  0179  009B               	movwf	27	;volatile
  1694  017A                     l1584:
  1695                           
  1696                           ;mainP2.c: 240:     PIR1bits.TMR2IF = 0;
  1697  017A  108C               	bcf	12,1	;volatile
  1698  017B                     l1586:
  1699                           
  1700                           ;mainP2.c: 241:     T2CONbits.T2CKPS = 0b11;
  1701  017B  3003               	movlw	3
  1702  017C  0492               	iorwf	18,f	;volatile
  1703  017D                     l1588:
  1704                           
  1705                           ;mainP2.c: 242:     T2CONbits.TMR2ON = 1;
  1706  017D  1512               	bsf	18,2	;volatile
  1707  017E                     l152:	
  1708                           ;mainP2.c: 244:     while(!PIR1bits.TMR2IF);
  1709                           
  1710  017E  1C8C               	btfss	12,1	;volatile
  1711  017F  2981               	goto	u511
  1712  0180  2982               	goto	u510
  1713  0181                     u511:
  1714  0181  297E               	goto	l152
  1715  0182                     u510:
  1716  0182                     l1590:
  1717                           
  1718                           ;mainP2.c: 245:     TRISC = 0X80;
  1719  0182  3080               	movlw	128
  1720  0183  1683               	bsf	3,5	;RP0=1, select bank1
  1721  0184  1303               	bcf	3,6	;RP1=0, select bank1
  1722  0185  0087               	movwf	7	;volatile
  1723                           
  1724                           ;mainP2.c: 248:     SPBRG = 12;
  1725  0186  300C               	movlw	12
  1726  0187  0099               	movwf	25	;volatile
  1727  0188                     l1592:
  1728                           
  1729                           ;mainP2.c: 249:     TXSTAbits.BRGH = 0;
  1730  0188  1118               	bcf	24,2	;volatile
  1731  0189                     l1594:
  1732                           
  1733                           ;mainP2.c: 250:     TXSTAbits.TXEN = 1;
  1734  0189  1698               	bsf	24,5	;volatile
  1735  018A                     l1596:
  1736                           
  1737                           ;mainP2.c: 251:     RCSTAbits.CREN = 1;
  1738  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1739  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1740  018C  1618               	bsf	24,4	;volatile
  1741  018D                     l1598:
  1742                           
  1743                           ;mainP2.c: 252:     TXSTAbits.SYNC = 0;
  1744  018D  1683               	bsf	3,5	;RP0=1, select bank1
  1745  018E  1303               	bcf	3,6	;RP1=0, select bank1
  1746  018F  1218               	bcf	24,4	;volatile
  1747  0190                     l1600:
  1748                           
  1749                           ;mainP2.c: 253:     RCSTAbits.SPEN = 1;
  1750  0190  1283               	bcf	3,5	;RP0=0, select bank0
  1751  0191  1303               	bcf	3,6	;RP1=0, select bank0
  1752  0192  1798               	bsf	24,7	;volatile
  1753  0193                     l1602:
  1754                           
  1755                           ;mainP2.c: 256:     OSCCONbits.SCS = 1;
  1756  0193  1683               	bsf	3,5	;RP0=1, select bank1
  1757  0194  1303               	bcf	3,6	;RP1=0, select bank1
  1758  0195  140F               	bsf	15,0	;volatile
  1759  0196                     l1604:
  1760                           
  1761                           ;mainP2.c: 257:     OPTION_REGbits.T0CS = 0;
  1762  0196  1281               	bcf	1,5	;volatile
  1763  0197                     l1606:
  1764                           
  1765                           ;mainP2.c: 258:     OPTION_REGbits.PSA = 0;
  1766  0197  1181               	bcf	1,3	;volatile
  1767  0198                     l1608:
  1768                           
  1769                           ;mainP2.c: 259:     OPTION_REGbits.PS2 = 0;
  1770  0198  1101               	bcf	1,2	;volatile
  1771  0199                     l1610:
  1772                           
  1773                           ;mainP2.c: 260:     OPTION_REGbits.PS1 = 1;
  1774  0199  1481               	bsf	1,1	;volatile
  1775  019A                     l1612:
  1776                           
  1777                           ;mainP2.c: 261:     OPTION_REGbits.PS0 = 1;
  1778  019A  1401               	bsf	1,0	;volatile
  1779  019B                     l1614:
  1780                           
  1781                           ;mainP2.c: 262:     INTCONbits.T0IF = 0;
  1782  019B  110B               	bcf	11,2	;volatile
  1783                           
  1784                           ;mainP2.c: 263:     TMR0 = 131;
  1785  019C  3083               	movlw	131
  1786  019D  1283               	bcf	3,5	;RP0=0, select bank0
  1787  019E  1303               	bcf	3,6	;RP1=0, select bank0
  1788  019F  0081               	movwf	1	;volatile
  1789  01A0                     l1616:
  1790                           
  1791                           ;mainP2.c: 264:     SERVOS.bit1 = 0;
  1792  01A0  12B2               	bcf	_SERVOS,5
  1793  01A1                     l1618:
  1794                           
  1795                           ;mainP2.c: 265:     SERVOS.modo = 0;
  1796  01A1  1332               	bcf	_SERVOS,6
  1797  01A2                     l155:
  1798  01A2  0008               	return
  1799  01A3                     __end_of_configuraciones:
  1800                           
  1801                           	psect	text9
  1802  0021                     __ptext9:	
  1803 ;; *************** function _AnalogReadServo *****************
  1804 ;; Defined at:
  1805 ;;		line 302 in file "mainP2.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1819 ;;      Params:         0       0       0       0       0
  1820 ;;      Locals:         0       0       0       0       0
  1821 ;;      Temps:          0       2       0       0       0
  1822 ;;      Totals:         0       2       0       0       0
  1823 ;;Total ram usage:        2 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    2
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_main
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function _AnalogReadServo
  1835  0021                     _AnalogReadServo:
  1836  0021                     l2060:	
  1837                           ;incstack = 0
  1838                           ; Regs used in _AnalogReadServo: [wreg-fsr0h+status,2+status,0]
  1839                           
  1840                           
  1841                           ;mainP2.c: 304:     if(!ADCON0bits.GO){
  1842  0021  1283               	bcf	3,5	;RP0=0, select bank0
  1843  0022  1303               	bcf	3,6	;RP1=0, select bank0
  1844  0023  189F               	btfsc	31,1	;volatile
  1845  0024  2826               	goto	u971
  1846  0025  2827               	goto	u970
  1847  0026                     u971:
  1848  0026  292D               	goto	l203
  1849  0027                     u970:
  1850  0027  290A               	goto	l2114
  1851  0028                     l174:	
  1852                           ;mainP2.c: 306:             case 0:
  1853                           
  1854                           
  1855                           ;mainP2.c: 307:                  if(!EECON1bits.WR && ADCON0bits.CHS == 1)POT2 = ADRESH;
  1856  0028  1683               	bsf	3,5	;RP0=1, select bank3
  1857  0029  1703               	bsf	3,6	;RP1=1, select bank3
  1858  002A  188C               	btfsc	12,1	;volsfr
  1859  002B  282D               	goto	u981
  1860  002C  282E               	goto	u980
  1861  002D                     u981:
  1862  002D  292D               	goto	l177
  1863  002E                     u980:
  1864  002E                     l2064:
  1865  002E  1283               	bcf	3,5	;RP0=0, select bank0
  1866  002F  1303               	bcf	3,6	;RP1=0, select bank0
  1867  0030  0C1F               	rrf	31,w	;volatile
  1868  0031  00A0               	movwf	??_AnalogReadServo
  1869  0032  0C20               	rrf	??_AnalogReadServo,w
  1870  0033  390F               	andlw	15
  1871  0034  3A01               	xorlw	1
  1872  0035  1D03               	skipz
  1873  0036  2838               	goto	u991
  1874  0037  2839               	goto	u990
  1875  0038                     u991:
  1876  0038  292D               	goto	l177
  1877  0039                     u990:
  1878  0039                     l2066:
  1879  0039  081E               	movf	30,w	;volatile
  1880  003A  00A0               	movwf	??_AnalogReadServo
  1881  003B  0820               	movf	??_AnalogReadServo,w
  1882  003C  00AF               	movwf	_POT2
  1883  003D  292D               	goto	l203
  1884  003E                     l178:	
  1885                           ;mainP2.c: 311:             case 1:
  1886                           
  1887                           
  1888                           ;mainP2.c: 312:                 if(!EECON1bits.WR)ADCON0bits.CHS = 2;
  1889  003E  1683               	bsf	3,5	;RP0=1, select bank3
  1890  003F  1703               	bsf	3,6	;RP1=1, select bank3
  1891  0040  188C               	btfsc	12,1	;volsfr
  1892  0041  2843               	goto	u1001
  1893  0042  2844               	goto	u1000
  1894  0043                     u1001:
  1895  0043  284A               	goto	l2070
  1896  0044                     u1000:
  1897  0044                     l2068:
  1898  0044  1283               	bcf	3,5	;RP0=0, select bank0
  1899  0045  1303               	bcf	3,6	;RP1=0, select bank0
  1900  0046  081F               	movf	31,w	;volatile
  1901  0047  39C3               	andlw	-61
  1902  0048  3808               	iorlw	8
  1903  0049  009F               	movwf	31	;volatile
  1904  004A                     l2070:
  1905                           
  1906                           ;mainP2.c: 313:                 if(POT2>=160) POT2 = 160;
  1907  004A  30A0               	movlw	160
  1908  004B  1283               	bcf	3,5	;RP0=0, select bank0
  1909  004C  1303               	bcf	3,6	;RP1=0, select bank0
  1910  004D  022F               	subwf	_POT2,w
  1911  004E  1C03               	skipc
  1912  004F  2851               	goto	u1011
  1913  0050  2852               	goto	u1010
  1914  0051                     u1011:
  1915  0051  2856               	goto	l180
  1916  0052                     u1010:
  1917  0052                     l2072:
  1918  0052  30A0               	movlw	160
  1919  0053  00A0               	movwf	??_AnalogReadServo
  1920  0054  0820               	movf	??_AnalogReadServo,w
  1921  0055  00AF               	movwf	_POT2
  1922  0056                     l180:
  1923                           
  1924                           ;mainP2.c: 314:                 if(POT2<=10) POT2 = 10;
  1925  0056  300B               	movlw	11
  1926  0057  022F               	subwf	_POT2,w
  1927  0058  1803               	skipnc
  1928  0059  285B               	goto	u1021
  1929  005A  285C               	goto	u1020
  1930  005B                     u1021:
  1931  005B  292D               	goto	l203
  1932  005C                     u1020:
  1933  005C                     l2074:
  1934  005C  300A               	movlw	10
  1935  005D  00A0               	movwf	??_AnalogReadServo
  1936  005E  0820               	movf	??_AnalogReadServo,w
  1937  005F  00AF               	movwf	_POT2
  1938  0060  292D               	goto	l203
  1939  0061                     l182:	
  1940                           ;mainP2.c: 317:             case 3:
  1941                           
  1942                           
  1943                           ;mainP2.c: 318:                 if(!EECON1bits.WR && ADCON0bits.CHS == 2)POT3 = ADRESH;
  1944  0061  1683               	bsf	3,5	;RP0=1, select bank3
  1945  0062  1703               	bsf	3,6	;RP1=1, select bank3
  1946  0063  188C               	btfsc	12,1	;volsfr
  1947  0064  2866               	goto	u1031
  1948  0065  2867               	goto	u1030
  1949  0066                     u1031:
  1950  0066  292D               	goto	l177
  1951  0067                     u1030:
  1952  0067                     l2076:
  1953  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1954  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1955  0069  0C1F               	rrf	31,w	;volatile
  1956  006A  00A0               	movwf	??_AnalogReadServo
  1957  006B  0C20               	rrf	??_AnalogReadServo,w
  1958  006C  390F               	andlw	15
  1959  006D  3A02               	xorlw	2
  1960  006E  1D03               	skipz
  1961  006F  2871               	goto	u1041
  1962  0070  2872               	goto	u1040
  1963  0071                     u1041:
  1964  0071  292D               	goto	l177
  1965  0072                     u1040:
  1966  0072                     l2078:
  1967  0072  081E               	movf	30,w	;volatile
  1968  0073  00A0               	movwf	??_AnalogReadServo
  1969  0074  0820               	movf	??_AnalogReadServo,w
  1970  0075  00AE               	movwf	_POT3
  1971  0076  292D               	goto	l203
  1972  0077                     l185:	
  1973                           ;mainP2.c: 322:             case 4:
  1974                           
  1975                           
  1976                           ;mainP2.c: 323:                 if(!EECON1bits.WR)ADCON0bits.CHS = 3;
  1977  0077  1683               	bsf	3,5	;RP0=1, select bank3
  1978  0078  1703               	bsf	3,6	;RP1=1, select bank3
  1979  0079  188C               	btfsc	12,1	;volsfr
  1980  007A  287C               	goto	u1051
  1981  007B  287D               	goto	u1050
  1982  007C                     u1051:
  1983  007C  2883               	goto	l2082
  1984  007D                     u1050:
  1985  007D                     l2080:
  1986  007D  1283               	bcf	3,5	;RP0=0, select bank0
  1987  007E  1303               	bcf	3,6	;RP1=0, select bank0
  1988  007F  081F               	movf	31,w	;volatile
  1989  0080  39C3               	andlw	-61
  1990  0081  380C               	iorlw	12
  1991  0082  009F               	movwf	31	;volatile
  1992  0083                     l2082:
  1993                           
  1994                           ;mainP2.c: 324:                 if(POT3>=160) POT3 = 160;
  1995  0083  30A0               	movlw	160
  1996  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1997  0085  1303               	bcf	3,6	;RP1=0, select bank0
  1998  0086  022E               	subwf	_POT3,w
  1999  0087  1C03               	skipc
  2000  0088  288A               	goto	u1061
  2001  0089  288B               	goto	u1060
  2002  008A                     u1061:
  2003  008A  288F               	goto	l187
  2004  008B                     u1060:
  2005  008B                     l2084:
  2006  008B  30A0               	movlw	160
  2007  008C  00A0               	movwf	??_AnalogReadServo
  2008  008D  0820               	movf	??_AnalogReadServo,w
  2009  008E  00AE               	movwf	_POT3
  2010  008F                     l187:
  2011                           
  2012                           ;mainP2.c: 325:                 if(POT3<=10) POT3 = 10;
  2013  008F  300B               	movlw	11
  2014  0090  022E               	subwf	_POT3,w
  2015  0091  1803               	skipnc
  2016  0092  2894               	goto	u1071
  2017  0093  2895               	goto	u1070
  2018  0094                     u1071:
  2019  0094  292D               	goto	l203
  2020  0095                     u1070:
  2021  0095                     l2086:
  2022  0095  300A               	movlw	10
  2023  0096  00A0               	movwf	??_AnalogReadServo
  2024  0097  0820               	movf	??_AnalogReadServo,w
  2025  0098  00AE               	movwf	_POT3
  2026  0099  292D               	goto	l203
  2027  009A                     l189:	
  2028                           ;mainP2.c: 328:             case 6:
  2029                           
  2030                           
  2031                           ;mainP2.c: 329:                 if(!EECON1bits.WR && ADCON0bits.CHS == 3)POT4 = ADRESH;
  2032  009A  1683               	bsf	3,5	;RP0=1, select bank3
  2033  009B  1703               	bsf	3,6	;RP1=1, select bank3
  2034  009C  188C               	btfsc	12,1	;volsfr
  2035  009D  289F               	goto	u1081
  2036  009E  28A0               	goto	u1080
  2037  009F                     u1081:
  2038  009F  292D               	goto	l177
  2039  00A0                     u1080:
  2040  00A0                     l2088:
  2041  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  2042  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  2043  00A2  0C1F               	rrf	31,w	;volatile
  2044  00A3  00A0               	movwf	??_AnalogReadServo
  2045  00A4  0C20               	rrf	??_AnalogReadServo,w
  2046  00A5  390F               	andlw	15
  2047  00A6  3A03               	xorlw	3
  2048  00A7  1D03               	skipz
  2049  00A8  28AA               	goto	u1091
  2050  00A9  28AB               	goto	u1090
  2051  00AA                     u1091:
  2052  00AA  292D               	goto	l177
  2053  00AB                     u1090:
  2054  00AB                     l2090:
  2055  00AB  081E               	movf	30,w	;volatile
  2056  00AC  00A0               	movwf	??_AnalogReadServo
  2057  00AD  0820               	movf	??_AnalogReadServo,w
  2058  00AE  00AD               	movwf	_POT4
  2059  00AF  292D               	goto	l203
  2060  00B0                     l192:	
  2061                           ;mainP2.c: 333:             case 7:
  2062                           
  2063                           
  2064                           ;mainP2.c: 334:                 if(!EECON1bits.WR)ADCON0bits.CHS = 0;
  2065  00B0  1683               	bsf	3,5	;RP0=1, select bank3
  2066  00B1  1703               	bsf	3,6	;RP1=1, select bank3
  2067  00B2  188C               	btfsc	12,1	;volsfr
  2068  00B3  28B5               	goto	u1101
  2069  00B4  28B6               	goto	u1100
  2070  00B5                     u1101:
  2071  00B5  28BA               	goto	l2094
  2072  00B6                     u1100:
  2073  00B6                     l2092:
  2074  00B6  30C3               	movlw	-61
  2075  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  2076  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  2077  00B9  059F               	andwf	31,f	;volatile
  2078  00BA                     l2094:
  2079                           
  2080                           ;mainP2.c: 335:                 if(POT4>=160) POT4 = 160;
  2081  00BA  30A0               	movlw	160
  2082  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  2083  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  2084  00BD  022D               	subwf	_POT4,w
  2085  00BE  1C03               	skipc
  2086  00BF  28C1               	goto	u1111
  2087  00C0  28C2               	goto	u1110
  2088  00C1                     u1111:
  2089  00C1  28C6               	goto	l194
  2090  00C2                     u1110:
  2091  00C2                     l2096:
  2092  00C2  30A0               	movlw	160
  2093  00C3  00A0               	movwf	??_AnalogReadServo
  2094  00C4  0820               	movf	??_AnalogReadServo,w
  2095  00C5  00AD               	movwf	_POT4
  2096  00C6                     l194:
  2097                           
  2098                           ;mainP2.c: 336:                 if(POT4<=10) POT4 = 10;
  2099  00C6  300B               	movlw	11
  2100  00C7  022D               	subwf	_POT4,w
  2101  00C8  1803               	skipnc
  2102  00C9  28CB               	goto	u1121
  2103  00CA  28CC               	goto	u1120
  2104  00CB                     u1121:
  2105  00CB  292D               	goto	l203
  2106  00CC                     u1120:
  2107  00CC                     l2098:
  2108  00CC  300A               	movlw	10
  2109  00CD  00A0               	movwf	??_AnalogReadServo
  2110  00CE  0820               	movf	??_AnalogReadServo,w
  2111  00CF  00AD               	movwf	_POT4
  2112  00D0  292D               	goto	l203
  2113  00D1                     l196:	
  2114                           ;mainP2.c: 339:             case 9:
  2115                           
  2116                           
  2117                           ;mainP2.c: 340:                 if(!EECON1bits.WR && ADCON0bits.CHS == 0)POT1 = ADRESH;
  2118  00D1  1683               	bsf	3,5	;RP0=1, select bank3
  2119  00D2  1703               	bsf	3,6	;RP1=1, select bank3
  2120  00D3  188C               	btfsc	12,1	;volsfr
  2121  00D4  28D6               	goto	u1131
  2122  00D5  28D7               	goto	u1130
  2123  00D6                     u1131:
  2124  00D6  292D               	goto	l177
  2125  00D7                     u1130:
  2126  00D7                     l2100:
  2127  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  2128  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  2129  00D9  0C1F               	rrf	31,w	;volatile
  2130  00DA  00A0               	movwf	??_AnalogReadServo
  2131  00DB  0C20               	rrf	??_AnalogReadServo,w
  2132  00DC  390F               	andlw	15
  2133  00DD  3A00               	xorlw	0
  2134  00DE  1D03               	skipz
  2135  00DF  28E1               	goto	u1141
  2136  00E0  28E2               	goto	u1140
  2137  00E1                     u1141:
  2138  00E1  292D               	goto	l177
  2139  00E2                     u1140:
  2140  00E2                     l2102:
  2141  00E2  081E               	movf	30,w	;volatile
  2142  00E3  00A0               	movwf	??_AnalogReadServo
  2143  00E4  0820               	movf	??_AnalogReadServo,w
  2144  00E5  00B0               	movwf	_POT1
  2145  00E6  292D               	goto	l203
  2146  00E7                     l199:	
  2147                           ;mainP2.c: 344:             case 10:
  2148                           
  2149                           
  2150                           ;mainP2.c: 345:                 if(!EECON1bits.WR)ADCON0bits.CHS = 1;
  2151  00E7  1683               	bsf	3,5	;RP0=1, select bank3
  2152  00E8  1703               	bsf	3,6	;RP1=1, select bank3
  2153  00E9  188C               	btfsc	12,1	;volsfr
  2154  00EA  28EC               	goto	u1151
  2155  00EB  28ED               	goto	u1150
  2156  00EC                     u1151:
  2157  00EC  28F3               	goto	l2106
  2158  00ED                     u1150:
  2159  00ED                     l2104:
  2160  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  2161  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  2162  00EF  081F               	movf	31,w	;volatile
  2163  00F0  39C3               	andlw	-61
  2164  00F1  3804               	iorlw	4
  2165  00F2  009F               	movwf	31	;volatile
  2166  00F3                     l2106:
  2167                           
  2168                           ;mainP2.c: 346:                 if(POT1>=160) POT1 = 160;
  2169  00F3  30A0               	movlw	160
  2170  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  2171  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  2172  00F6  0230               	subwf	_POT1,w
  2173  00F7  1C03               	skipc
  2174  00F8  28FA               	goto	u1161
  2175  00F9  28FB               	goto	u1160
  2176  00FA                     u1161:
  2177  00FA  28FF               	goto	l201
  2178  00FB                     u1160:
  2179  00FB                     l2108:
  2180  00FB  30A0               	movlw	160
  2181  00FC  00A0               	movwf	??_AnalogReadServo
  2182  00FD  0820               	movf	??_AnalogReadServo,w
  2183  00FE  00B0               	movwf	_POT1
  2184  00FF                     l201:
  2185                           
  2186                           ;mainP2.c: 347:                 if(POT1<=10) POT1 = 10;
  2187  00FF  300B               	movlw	11
  2188  0100  0230               	subwf	_POT1,w
  2189  0101  1803               	skipnc
  2190  0102  2904               	goto	u1171
  2191  0103  2905               	goto	u1170
  2192  0104                     u1171:
  2193  0104  292D               	goto	l203
  2194  0105                     u1170:
  2195  0105                     l2110:
  2196  0105  300A               	movlw	10
  2197  0106  00A0               	movwf	??_AnalogReadServo
  2198  0107  0820               	movf	??_AnalogReadServo,w
  2199  0108  00B0               	movwf	_POT1
  2200  0109  292D               	goto	l203
  2201  010A                     l2114:
  2202  010A  0832               	movf	_SERVOS,w
  2203  010B  391F               	andlw	31
  2204  010C  00A0               	movwf	??_AnalogReadServo
  2205  010D  01A1               	clrf	??_AnalogReadServo+1
  2206                           
  2207                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2208                           ; Switch size 1, requested type "simple"
  2209                           ; Number of cases is 1, Range of values is 0 to 0
  2210                           ; switch strategies available:
  2211                           ; Name         Instructions Cycles
  2212                           ; simple_byte            4     3 (average)
  2213                           ; direct_byte           11     8 (fixed)
  2214                           ; jumptable            260     6 (fixed)
  2215                           ;	Chosen strategy is simple_byte
  2216  010E  0821               	movf	??_AnalogReadServo+1,w
  2217  010F  3A00               	xorlw	0	; case 0
  2218  0110  1903               	skipnz
  2219  0111  2913               	goto	l2332
  2220  0112  292D               	goto	l203
  2221  0113                     l2332:
  2222                           
  2223                           ; Switch size 1, requested type "simple"
  2224                           ; Number of cases is 8, Range of values is 0 to 10
  2225                           ; switch strategies available:
  2226                           ; Name         Instructions Cycles
  2227                           ; simple_byte           25    13 (average)
  2228                           ; direct_byte           41     8 (fixed)
  2229                           ; jumptable            260     6 (fixed)
  2230                           ;	Chosen strategy is simple_byte
  2231  0113  0820               	movf	??_AnalogReadServo,w
  2232  0114  3A00               	xorlw	0	; case 0
  2233  0115  1903               	skipnz
  2234  0116  2828               	goto	l174
  2235  0117  3A01               	xorlw	1	; case 1
  2236  0118  1903               	skipnz
  2237  0119  283E               	goto	l178
  2238  011A  3A02               	xorlw	2	; case 3
  2239  011B  1903               	skipnz
  2240  011C  2861               	goto	l182
  2241  011D  3A07               	xorlw	7	; case 4
  2242  011E  1903               	skipnz
  2243  011F  2877               	goto	l185
  2244  0120  3A02               	xorlw	2	; case 6
  2245  0121  1903               	skipnz
  2246  0122  289A               	goto	l189
  2247  0123  3A01               	xorlw	1	; case 7
  2248  0124  1903               	skipnz
  2249  0125  28B0               	goto	l192
  2250  0126  3A0E               	xorlw	14	; case 9
  2251  0127  1903               	skipnz
  2252  0128  28D1               	goto	l196
  2253  0129  3A03               	xorlw	3	; case 10
  2254  012A  1903               	skipnz
  2255  012B  28E7               	goto	l199
  2256  012C  292D               	goto	l203
  2257  012D                     l177:
  2258  012D                     l203:
  2259  012D  0008               	return
  2260  012E                     __end_of_AnalogReadServo:
  2261                           
  2262                           	psect	text10
  2263  0211                     __ptext10:	
  2264 ;; *************** function _rutInter *****************
  2265 ;; Defined at:
  2266 ;;		line 87 in file "mainP2.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;		None
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;		None
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  1    wreg      void 
  2273 ;; Registers used:
  2274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2280 ;;      Params:         0       0       0       0       0
  2281 ;;      Locals:         0       0       0       0       0
  2282 ;;      Temps:          4       0       0       0       0
  2283 ;;      Totals:         4       0       0       0       0
  2284 ;;Total ram usage:        4 bytes
  2285 ;; Hardware stack levels used:    1
  2286 ;; Hardware stack levels required when called:    1
  2287 ;; This function calls:
  2288 ;;		_servos
  2289 ;; This function is called by:
  2290 ;;		Interrupt level 1
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           
  2295                           ;psect for function _rutInter
  2296  0211                     _rutInter:
  2297  0211                     i1l1710:
  2298                           
  2299                           ;mainP2.c: 89:     if(INTCONbits.TMR0IF) {
  2300  0211  1D0B               	btfss	11,2	;volatile
  2301  0212  2A14               	goto	u75_21
  2302  0213  2A15               	goto	u75_20
  2303  0214                     u75_21:
  2304  0214  2A2D               	goto	i1l119
  2305  0215                     u75_20:
  2306  0215                     i1l1712:
  2307                           
  2308                           ;mainP2.c: 90:         SERVOS.bit0++;
  2309  0215  1283               	bcf	3,5	;RP0=0, select bank0
  2310  0216  1303               	bcf	3,6	;RP1=0, select bank0
  2311  0217  0832               	movf	_SERVOS,w
  2312  0218  391F               	andlw	31
  2313  0219  00F2               	movwf	??_rutInter
  2314  021A  0AF2               	incf	??_rutInter,f
  2315  021B  0832               	movf	_SERVOS,w
  2316  021C  0672               	xorwf	??_rutInter,w
  2317  021D  39E0               	andlw	-32
  2318  021E  0672               	xorwf	??_rutInter,w
  2319  021F  00B2               	movwf	_SERVOS
  2320  0220                     i1l1714:
  2321                           
  2322                           ;mainP2.c: 91:         INTCONbits.TMR0IF = 0;
  2323  0220  110B               	bcf	11,2	;volatile
  2324  0221                     i1l1716:
  2325                           
  2326                           ;mainP2.c: 92:         servos();
  2327  0221  120A  118A  2331  120A  118A  	fcall	_servos
  2328  0226                     i1l1718:
  2329                           
  2330                           ;mainP2.c: 93:         if(SERVOS.modo) ADCON0bits.GO = 1;
  2331  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2332  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2333  0228  1F32               	btfss	_SERVOS,6
  2334  0229  2A2B               	goto	u76_21
  2335  022A  2A2C               	goto	u76_20
  2336  022B                     u76_21:
  2337  022B  2A2D               	goto	i1l119
  2338  022C                     u76_20:
  2339  022C                     i1l1720:
  2340  022C  149F               	bsf	31,1	;volatile
  2341  022D                     i1l119:	
  2342                           ;mainP2.c: 94:     }
  2343                           
  2344                           
  2345                           ;mainP2.c: 96:     if(PIR1bits.TMR1IF){
  2346  022D  1283               	bcf	3,5	;RP0=0, select bank0
  2347  022E  1303               	bcf	3,6	;RP1=0, select bank0
  2348  022F  1C0C               	btfss	12,0	;volatile
  2349  0230  2A32               	goto	u77_21
  2350  0231  2A33               	goto	u77_20
  2351  0232                     u77_21:
  2352  0232  2A3D               	goto	i1l1732
  2353  0233                     u77_20:
  2354  0233                     i1l1722:
  2355                           
  2356                           ;mainP2.c: 97:         SERVOS.guardar = 1;
  2357  0233  17B2               	bsf	_SERVOS,7
  2358  0234                     i1l1724:
  2359                           
  2360                           ;mainP2.c: 98:         posicion ++;
  2361  0234  3001               	movlw	1
  2362  0235  00F2               	movwf	??_rutInter
  2363  0236  0872               	movf	??_rutInter,w
  2364  0237  07AB               	addwf	_posicion,f
  2365  0238                     i1l1726:
  2366                           
  2367                           ;mainP2.c: 99:         PIR1bits.TMR1IF = 0;
  2368  0238  100C               	bcf	12,0	;volatile
  2369  0239                     i1l1728:
  2370                           
  2371                           ;mainP2.c: 100:         TMR1H = 0B00111100;
  2372  0239  303C               	movlw	60
  2373  023A  008F               	movwf	15	;volatile
  2374  023B                     i1l1730:
  2375                           
  2376                           ;mainP2.c: 101:         TMR1L = 0B10101111;
  2377  023B  30AF               	movlw	175
  2378  023C  008E               	movwf	14	;volatile
  2379  023D                     i1l1732:
  2380                           
  2381                           ;mainP2.c: 104:     if(INTCONbits.RBIF && PORTBbits.RB0){
  2382  023D  1C0B               	btfss	11,0	;volatile
  2383  023E  2A40               	goto	u78_21
  2384  023F  2A41               	goto	u78_20
  2385  0240                     u78_21:
  2386  0240  2A57               	goto	i1l1742
  2387  0241                     u78_20:
  2388  0241                     i1l1734:
  2389  0241  1C06               	btfss	6,0	;volatile
  2390  0242  2A44               	goto	u79_21
  2391  0243  2A45               	goto	u79_20
  2392  0244                     u79_21:
  2393  0244  2A57               	goto	i1l1742
  2394  0245                     u79_20:
  2395  0245                     i1l1736:
  2396                           
  2397                           ;mainP2.c: 105:         if(!T1CONbits.TMR1ON)SERVOS.modo = ~SERVOS.modo;
  2398  0245  1810               	btfsc	16,0	;volatile
  2399  0246  2A48               	goto	u80_21
  2400  0247  2A49               	goto	u80_20
  2401  0248                     u80_21:
  2402  0248  2A56               	goto	i1l1740
  2403  0249                     u80_20:
  2404  0249                     i1l1738:
  2405  0249  1003               	clrc
  2406  024A  1F32               	btfss	_SERVOS,6
  2407  024B  1403               	setc
  2408  024C  1803               	btfsc	3,0
  2409  024D  2A4F               	goto	u81_21
  2410  024E  2A53               	goto	u81_20
  2411  024F                     u81_21:
  2412  024F  1283               	bcf	3,5	;RP0=0, select bank0
  2413  0250  1303               	bcf	3,6	;RP1=0, select bank0
  2414  0251  1732               	bsf	_SERVOS,6
  2415  0252  2A56               	goto	u82_24
  2416  0253                     u81_20:
  2417  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2418  0254  1303               	bcf	3,6	;RP1=0, select bank0
  2419  0255  1332               	bcf	_SERVOS,6
  2420  0256                     u82_24:
  2421  0256                     i1l1740:
  2422                           
  2423                           ;mainP2.c: 107:         INTCONbits.RBIF = 0;
  2424  0256  100B               	bcf	11,0	;volatile
  2425  0257                     i1l1742:
  2426                           
  2427                           ;mainP2.c: 110:     if(INTCONbits.RBIF && PORTBbits.RB1){
  2428  0257  1C0B               	btfss	11,0	;volatile
  2429  0258  2A5A               	goto	u83_21
  2430  0259  2A5B               	goto	u83_20
  2431  025A                     u83_21:
  2432  025A  2A6B               	goto	i1l124
  2433  025B                     u83_20:
  2434  025B                     i1l1744:
  2435  025B  1C86               	btfss	6,1	;volatile
  2436  025C  2A5E               	goto	u84_21
  2437  025D  2A5F               	goto	u84_20
  2438  025E                     u84_21:
  2439  025E  2A6B               	goto	i1l124
  2440  025F                     u84_20:
  2441  025F                     i1l1746:
  2442                           
  2443                           ;mainP2.c: 111:         if(SERVOS.modo){T1CONbits.TMR1ON = 1;
  2444  025F  1F32               	btfss	_SERVOS,6
  2445  0260  2A62               	goto	u85_21
  2446  0261  2A63               	goto	u85_20
  2447  0262                     u85_21:
  2448  0262  2A65               	goto	i1l125
  2449  0263                     u85_20:
  2450  0263                     i1l1748:
  2451  0263  1410               	bsf	16,0	;volatile
  2452                           
  2453                           ;mainP2.c: 112:         PORTEbits.RE0 = 1;}
  2454  0264  1409               	bsf	9,0	;volatile
  2455  0265                     i1l125:
  2456                           
  2457                           ;mainP2.c: 113:         if(SERVOS.modo)SERVOS.guardar = 1;
  2458  0265  1F32               	btfss	_SERVOS,6
  2459  0266  2A68               	goto	u86_21
  2460  0267  2A69               	goto	u86_20
  2461  0268                     u86_21:
  2462  0268  2A6A               	goto	i1l126
  2463  0269                     u86_20:
  2464  0269                     i1l1750:
  2465  0269  17B2               	bsf	_SERVOS,7
  2466  026A                     i1l126:
  2467                           
  2468                           ;mainP2.c: 114:         INTCONbits.RBIF = 0;
  2469  026A  100B               	bcf	11,0	;volatile
  2470  026B                     i1l124:	
  2471                           ;mainP2.c: 115:     }
  2472                           
  2473                           
  2474                           ;mainP2.c: 117:     INTCONbits.RBIF = 0;
  2475  026B  100B               	bcf	11,0	;volatile
  2476                           
  2477                           ;mainP2.c: 119:     if(PIR1bits.RCIF){
  2478  026C  1E8C               	btfss	12,5	;volatile
  2479  026D  2A6F               	goto	u87_21
  2480  026E  2A70               	goto	u87_20
  2481  026F                     u87_21:
  2482  026F  2A76               	goto	i1l128
  2483  0270                     u87_20:
  2484  0270                     i1l1752:
  2485                           
  2486                           ;mainP2.c: 120:         EXTREC = RCREG;
  2487  0270  081A               	movf	26,w	;volatile
  2488  0271  00F2               	movwf	??_rutInter
  2489  0272  0872               	movf	??_rutInter,w
  2490  0273  00AC               	movwf	_EXTREC
  2491  0274                     i1l1754:
  2492                           
  2493                           ;mainP2.c: 121:         UART.datorecep = 1;
  2494  0274  1431               	bsf	_UART,0
  2495  0275                     i1l1756:
  2496                           
  2497                           ;mainP2.c: 122:         PIR1bits.RCIF = 0;
  2498  0275  128C               	bcf	12,5	;volatile
  2499  0276                     i1l128:
  2500  0276  0875               	movf	??_rutInter+3,w
  2501  0277  008A               	movwf	10
  2502  0278  0874               	movf	??_rutInter+2,w
  2503  0279  0084               	movwf	4
  2504  027A  0E73               	swapf	??_rutInter+1,w
  2505  027B  0083               	movwf	3
  2506  027C  0EFE               	swapf	btemp,f
  2507  027D  0E7E               	swapf	btemp,w
  2508  027E  0009               	retfie
  2509  027F                     __end_of_rutInter:
  2510                           
  2511                           	psect	intentry
  2512  0004                     __pintentry:	
  2513                           ;incstack = 0
  2514                           ; Regs used in _rutInter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2515                           
  2516  0004                     interrupt_function:
  2517  007E                     saved_w	set	btemp
  2518  0004  00FE               	movwf	btemp
  2519  0005  0E03               	swapf	3,w
  2520  0006  00F3               	movwf	??_rutInter+1
  2521  0007  0804               	movf	4,w
  2522  0008  00F4               	movwf	??_rutInter+2
  2523  0009  080A               	movf	10,w
  2524  000A  00F5               	movwf	??_rutInter+3
  2525  000B  120A  118A  2A11   	ljmp	_rutInter
  2526                           
  2527                           	psect	text11
  2528  0331                     __ptext11:	
  2529 ;; *************** function _servos *****************
  2530 ;; Defined at:
  2531 ;;		line 268 in file "mainP2.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2545 ;;      Params:         0       0       0       0       0
  2546 ;;      Locals:         0       0       0       0       0
  2547 ;;      Temps:          2       0       0       0       0
  2548 ;;      Totals:         2       0       0       0       0
  2549 ;;Total ram usage:        2 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; This function calls:
  2552 ;;		Nothing
  2553 ;; This function is called by:
  2554 ;;		_rutInter
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           
  2559                           ;psect for function _servos
  2560  0331                     _servos:
  2561  0331                     i1l1474:	
  2562                           ;incstack = 0
  2563                           ; Regs used in _servos: [wreg-fsr0h+status,2+status,0]
  2564                           
  2565                           
  2566                           ;mainP2.c: 270:     if(SERVOS.bit0 == 15) SERVOS.bit0 = 0;
  2567  0331  1283               	bcf	3,5	;RP0=0, select bank0
  2568  0332  1303               	bcf	3,6	;RP1=0, select bank0
  2569  0333  0832               	movf	_SERVOS,w
  2570  0334  391F               	andlw	31
  2571  0335  3A0F               	xorlw	15
  2572  0336  1D03               	skipz
  2573  0337  2B39               	goto	u50_21
  2574  0338  2B3A               	goto	u50_20
  2575  0339                     u50_21:
  2576  0339  2B5D               	goto	i1l1512
  2577  033A                     u50_20:
  2578  033A                     i1l1476:
  2579  033A  30E0               	movlw	-32
  2580  033B  05B2               	andwf	_SERVOS,f
  2581  033C  2B5D               	goto	i1l1512
  2582  033D                     i1l1478:
  2583                           
  2584                           ;mainP2.c: 274:             TMR0 = POT1; PORTDbits.RD0 = 1;
  2585  033D  0830               	movf	_POT1,w
  2586  033E  0081               	movwf	1	;volatile
  2587  033F                     i1l1480:
  2588  033F  1408               	bsf	8,0	;volatile
  2589                           
  2590                           ;mainP2.c: 275:             break;
  2591  0340  2B80               	goto	i1l169
  2592  0341                     i1l1482:
  2593                           
  2594                           ;mainP2.c: 277:             TMR0 = 255-POT1; PORTDbits.RD0 = 0;
  2595  0341  0930               	comf	_POT1,w
  2596  0342  0081               	movwf	1	;volatile
  2597  0343                     i1l1484:
  2598  0343  1008               	bcf	8,0	;volatile
  2599                           
  2600                           ;mainP2.c: 278:             break;
  2601  0344  2B80               	goto	i1l169
  2602  0345                     i1l1486:
  2603                           
  2604                           ;mainP2.c: 280:             TMR0 = POT2; PORTDbits.RD1 = 1;
  2605  0345  082F               	movf	_POT2,w
  2606  0346  0081               	movwf	1	;volatile
  2607  0347                     i1l1488:
  2608  0347  1488               	bsf	8,1	;volatile
  2609                           
  2610                           ;mainP2.c: 281:             break;
  2611  0348  2B80               	goto	i1l169
  2612  0349                     i1l1490:
  2613                           
  2614                           ;mainP2.c: 283:              TMR0 = 255-POT2; PORTDbits.RD1 = 0;
  2615  0349  092F               	comf	_POT2,w
  2616  034A  0081               	movwf	1	;volatile
  2617  034B                     i1l1492:
  2618  034B  1088               	bcf	8,1	;volatile
  2619                           
  2620                           ;mainP2.c: 284:             break;
  2621  034C  2B80               	goto	i1l169
  2622  034D                     i1l1494:
  2623                           
  2624                           ;mainP2.c: 286:             TMR0 = POT3; PORTDbits.RD2 = 1;
  2625  034D  082E               	movf	_POT3,w
  2626  034E  0081               	movwf	1	;volatile
  2627  034F                     i1l1496:
  2628  034F  1508               	bsf	8,2	;volatile
  2629                           
  2630                           ;mainP2.c: 287:             break;
  2631  0350  2B80               	goto	i1l169
  2632  0351                     i1l1498:
  2633                           
  2634                           ;mainP2.c: 289:             TMR0 = 255-POT3; PORTDbits.RD2 = 0;
  2635  0351  092E               	comf	_POT3,w
  2636  0352  0081               	movwf	1	;volatile
  2637  0353                     i1l1500:
  2638  0353  1108               	bcf	8,2	;volatile
  2639                           
  2640                           ;mainP2.c: 290:             break;
  2641  0354  2B80               	goto	i1l169
  2642  0355                     i1l1502:
  2643                           
  2644                           ;mainP2.c: 292:             TMR0 = POT4; PORTDbits.RD3 = 1;
  2645  0355  082D               	movf	_POT4,w
  2646  0356  0081               	movwf	1	;volatile
  2647  0357                     i1l1504:
  2648  0357  1588               	bsf	8,3	;volatile
  2649                           
  2650                           ;mainP2.c: 293:             break;
  2651  0358  2B80               	goto	i1l169
  2652  0359                     i1l1506:
  2653                           
  2654                           ;mainP2.c: 295:             TMR0 = 255-POT4; PORTDbits.RD3 = 0;
  2655  0359  092D               	comf	_POT4,w
  2656  035A  0081               	movwf	1	;volatile
  2657  035B                     i1l1508:
  2658  035B  1188               	bcf	8,3	;volatile
  2659                           
  2660                           ;mainP2.c: 296:             break;
  2661  035C  2B80               	goto	i1l169
  2662  035D                     i1l1512:
  2663  035D  0832               	movf	_SERVOS,w
  2664  035E  391F               	andlw	31
  2665  035F  00F0               	movwf	??_servos
  2666  0360  01F1               	clrf	??_servos+1
  2667                           
  2668                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2669                           ; Switch size 1, requested type "simple"
  2670                           ; Number of cases is 1, Range of values is 0 to 0
  2671                           ; switch strategies available:
  2672                           ; Name         Instructions Cycles
  2673                           ; simple_byte            4     3 (average)
  2674                           ; direct_byte           11     8 (fixed)
  2675                           ; jumptable            260     6 (fixed)
  2676                           ;	Chosen strategy is simple_byte
  2677  0361  0871               	movf	??_servos+1,w
  2678  0362  3A00               	xorlw	0	; case 0
  2679  0363  1903               	skipnz
  2680  0364  2B66               	goto	i1l2334
  2681  0365  2B80               	goto	i1l169
  2682  0366                     i1l2334:
  2683                           
  2684                           ; Switch size 1, requested type "simple"
  2685                           ; Number of cases is 8, Range of values is 0 to 10
  2686                           ; switch strategies available:
  2687                           ; Name         Instructions Cycles
  2688                           ; simple_byte           25    13 (average)
  2689                           ; direct_byte           41     8 (fixed)
  2690                           ; jumptable            260     6 (fixed)
  2691                           ;	Chosen strategy is simple_byte
  2692  0366  0870               	movf	??_servos,w
  2693  0367  3A00               	xorlw	0	; case 0
  2694  0368  1903               	skipnz
  2695  0369  2B3D               	goto	i1l1478
  2696  036A  3A01               	xorlw	1	; case 1
  2697  036B  1903               	skipnz
  2698  036C  2B41               	goto	i1l1482
  2699  036D  3A02               	xorlw	2	; case 3
  2700  036E  1903               	skipnz
  2701  036F  2B45               	goto	i1l1486
  2702  0370  3A07               	xorlw	7	; case 4
  2703  0371  1903               	skipnz
  2704  0372  2B49               	goto	i1l1490
  2705  0373  3A02               	xorlw	2	; case 6
  2706  0374  1903               	skipnz
  2707  0375  2B4D               	goto	i1l1494
  2708  0376  3A01               	xorlw	1	; case 7
  2709  0377  1903               	skipnz
  2710  0378  2B51               	goto	i1l1498
  2711  0379  3A0E               	xorlw	14	; case 9
  2712  037A  1903               	skipnz
  2713  037B  2B55               	goto	i1l1502
  2714  037C  3A03               	xorlw	3	; case 10
  2715  037D  1903               	skipnz
  2716  037E  2B59               	goto	i1l1506
  2717  037F  2B80               	goto	i1l169
  2718  0380                     i1l169:
  2719  0380  0008               	return
  2720  0381                     __end_of_servos:
  2721  007E                     btemp	set	126	;btemp
  2722  007E                     wtemp0	set	126
  2723                           
  2724                           	psect	config
  2725                           
  2726                           ;Config register CONFIG1 @ 0x2007
  2727                           ;	Oscillator Selection bits
  2728                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2729                           ;	Watchdog Timer Enable bit
  2730                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2731                           ;	Power-up Timer Enable bit
  2732                           ;	PWRTE = OFF, PWRT disabled
  2733                           ;	RE3/MCLR pin function select bit
  2734                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2735                           ;	Code Protection bit
  2736                           ;	CP = OFF, Program memory code protection is disabled
  2737                           ;	Data Code Protection bit
  2738                           ;	CPD = OFF, Data memory code protection is disabled
  2739                           ;	Brown Out Reset Selection bits
  2740                           ;	BOREN = OFF, BOR disabled
  2741                           ;	Internal External Switchover bit
  2742                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2743                           ;	Fail-Safe Clock Monitor Enabled bit
  2744                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2745                           ;	Low Voltage Programming Enable bit
  2746                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2747                           ;	In-Circuit Debugger Mode bit
  2748                           ;	DEBUG = 0x1, unprogrammed default
  2749  2007                     	org	8199
  2750  2007  20F4               	dw	8436
  2751                           
  2752                           ;Config register CONFIG2 @ 0x2008
  2753                           ;	Brown-out Reset Selection bit
  2754                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2755                           ;	Flash Program Memory Self Write Enable bits
  2756                           ;	WRT = OFF, Write protection off
  2757  2008                     	org	8200
  2758  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80     11      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _rutInter in COMMON

    _rutInter->_servos

Critical Paths under _main in BANK0

    _main->_guardar3SEG
    _leer3SEG->_leerSERVOS
    _leerSERVOS->_leerposiciones
    _guardar3SEG->_guardarservos
    _guardarservos->_guardarposiciones

Critical Paths under _rutInter in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rutInter in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutInter in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutInter in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1209
                                              8 BANK0      3     3      0
                    _AnalogReadServo
                    _configuraciones
                        _guardar3SEG
                           _leer3SEG
                          _send1dato
 ---------------------------------------------------------------------------------
 (1) _leer3SEG                                             2     2      0     409
                                              5 BANK0      2     2      0
                         _leerSERVOS
                          _send1dato
 ---------------------------------------------------------------------------------
 (1) _send1dato                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _leerSERVOS                                           4     4      0     378
                                              1 BANK0      4     4      0
                     _leerposiciones
 ---------------------------------------------------------------------------------
 (3) _leerposiciones                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _guardar3SEG                                          2     2      0     769
                                              6 BANK0      2     2      0
                      _guardarservos
 ---------------------------------------------------------------------------------
 (2) _guardarservos                                        4     4      0     769
                                              2 BANK0      4     4      0
                  _guardarposiciones
 ---------------------------------------------------------------------------------
 (3) _guardarposiciones                                    2     1      1     422
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _configuraciones                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AnalogReadServo                                      2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _rutInter                                             4     4      0       0
                                              2 COMMON     4     4      0
                             _servos
 ---------------------------------------------------------------------------------
 (5) _servos                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AnalogReadServo
   _configuraciones
   _guardar3SEG
     _guardarservos
       _guardarposiciones
   _leer3SEG
     _leerSERVOS
       _leerposiciones
     _send1dato
   _send1dato

 _rutInter (ROOT)
   _servos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue May 18 11:40:34 2021

                       l201 00FF                         l203 012D                         l212 03EC  
                       l214 03F0                         l206 0406                         l134 01F8  
                       l215 03F1                         l135 01A9                         l152 017E  
                       l240 02D8                         l136 01DB                         l209 040C  
                       l145 01E5                         l226 0330                         l146 01F2  
                       l138 01AF                         l155 01A2                         l251 0382  
                       l139 01DA                         l180 0056                         l244 03AF  
                       l229 0400                         l182 0061                         l174 0028  
                       l254 03AD                         l247 03D4                         l192 00B0  
                       l185 0077                         l177 012D                         l194 00C6  
                       l178 003E                         l187 008F                         l196 00D1  
                       l189 009A                         l199 00E7                         u510 0182  
                       _PR2 0092                         u511 0181                         u910 03F0  
                       u911 03EF                         u920 040C                         u921 040B  
                       u930 0330                         u931 032F                         u940 02D8  
                       u941 02D7                         u970 0027                         u971 0026  
                       u955 0391                         u980 002E                         u981 002D  
                       u965 03B8                         u990 0039                         u991 0038  
                       fsr0 0004                 leerSERVOS@n 0024                        l2010 0284  
                      l2100 00D7                        l2012 0291                        l2020 02B8  
                      l2004 0282                        l2110 0105                        l2102 00E2  
                      l2014 029E                        l2022 02CE                        l2030 0381  
                      l2104 00ED                        l2024 02D2                        l2016 02AB  
                      l2032 0383                        l2040 039E                        l2120 01A3  
                      l2106 00F3                        l2114 010A                        l2050 03B5  
                      l2034 0387                        l2108 00FB                        l2060 0021  
                      l2036 038E                        l2132 01BE                        l2124 01B1  
                      l2140 01C7                        l2070 004A                        l2054 03C5  
                      l2046 03AE                        l2142 01DF                        l2134 01C0  
                      l2126 01B5                        l2150 01F8                        l2080 007D  
                      l2072 0052                        l2064 002E                        l1600 0190  
                      l1520 0132                        l2048 03B0                        l2144 01EA  
                      l2320 01CF                        l2128 01B7                        l2090 00AB  
                      l2082 0083                        l2074 005C                        l2066 0039  
                      l1610 0199                        l1602 0193                        l1530 0149  
                      l1522 0133                        l2330 0316                        l2322 0206  
                      l2146 01EF                        l2332 0113                        l2092 00B6  
                      l2084 008B                        l2076 0067                        l2068 0044  
                      l1612 019A                        l1604 0196                        l1540 0155  
                      l1532 014A                        l1524 0137                        l2324 03A8  
                      l2094 00BA                        l2086 0095                        l2078 0072  
                      l1614 019B                        l1606 0197                        l1550 015C  
                      l1542 0156                        l1534 0150                        l1526 0139  
                      l1518 012E                        l2326 02C0                        l2096 00C2  
                      l2088 00A0                        l1616 01A0                        l1608 0198  
                      l1560 0161                        l1552 015D                        l1544 0157  
                      l1536 0152                        l1528 0145                        l2328 03CF  
                      l2098 00CC                        l1618 01A1                        l1570 016C  
                      l1562 0162                        l1554 015E                        l1546 0158  
                      l1538 0154                        l1580 0174                        l1572 016D  
                      l1564 0163                        l1556 015F                        l1548 015B  
                      l1590 0182                        l1582 0178                        l1574 0170  
                      l1566 0169                        l1558 0160                        l1592 0188  
                      l1584 017A                        l1576 0171                        l1568 016B  
                      l1594 0189                        l1586 017B                        l1578 0172  
                      l1596 018A                        l1588 017D                        l1598 018D  
                      l1960 03E2                        l1962 03E5                        l1970 03F9  
                      l1964 03EA                        l1972 03FC                        l1966 03EB  
                      l1958 03D8                        l1990 0302                        l1984 02DE  
                      l1968 03F5                        l1976 0404                        l1986 02EA  
                      l1994 030E                        l1978 02DC                        l1988 02F6  
                      l1996 0324                        l1998 032A                        u1000 0044  
                      u1001 0043                        u1010 0052                        u1011 0051  
                      u1100 00B6                        u1020 005C                        u1101 00B5  
                      u1021 005B                        u1110 00C2                        u1030 0067  
                      u1111 00C1                        u1031 0066                        u1120 00CC  
                      u1040 0072                        u1200 01EA                        u1121 00CB  
                      u1041 0071                        u1201 01E9                        u1130 00D7  
                      u1050 007D                        u1131 00D6                        u1051 007C  
                      u1140 00E2                        u1060 008B                        u1141 00E1  
                      u1061 008A                        u1150 00ED                        u1070 0095  
                      u1151 00EC                        u1071 0094                        u1160 00FB  
                      u1080 00A0                        u1161 00FA                        u1081 009F  
                      u1170 0105                        u1090 00AB                        u1171 0104  
                      u1091 00AA                        u1180 01AE                        u1181 01AD  
                      u1190 01DF                        u1191 01DE                        _POT1 0030  
                      _POT2 002F                        _POT3 002E                        _POT4 002D  
                      _UART 0031                        _TMR0 0001                        _main 01A3  
                      btemp 007E            ?_configuraciones 0070                        start 000E  
              ?_guardar3SEG 0070                       ?_main 0070                       _EEADR 010D  
                     _EEDAT 010C                       _ANSEL 0188                       i1l124 026B  
                     i1l125 0265                       i1l126 026A                       i1l119 022D  
                     i1l128 0276                       i1l169 0380                       _RCREG 001A  
                     _TMR1H 000F                       _TMR1L 000E                       u50_20 033A  
                     u50_21 0339                       _SPBRG 0099                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       u80_20 0249                       u80_21 0248  
                     u81_20 0253                       u81_21 024F                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                       u82_24 0256                       u83_20 025B  
                     u75_20 0215                       u83_21 025A                       u75_21 0214  
                     u84_20 025F                       u76_20 022C                       u84_21 025E  
                     u76_21 022B                       u85_20 0263                       u77_20 0233  
                     u85_21 0262                       u77_21 0232                       u86_20 0269  
                     u78_20 0241                       u86_21 0268                       u78_21 0240  
                     u87_20 0270                       u79_20 0245                       u87_21 026F  
                     u79_21 0244                       _TXREG 0019               send1dato@dato 0020  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __initialization 0011                __end_of_main 0211                      ??_main 0028  
                    _ADRESH 001E                      _CCPR2L 001B                      _EECON2 018D  
    __size_of_guardarservos 0058                      _ANSELH 0189                      i1l1500 0353  
                    i1l1502 0355                      i1l1504 0357                      i1l1512 035D  
                    i1l1506 0359                      i1l1508 035B                      i1l2334 0366  
                    i1l1710 0211                      i1l1480 033F                      i1l1720 022C  
                    i1l1712 0215                      i1l1490 0349                      i1l1482 0341  
                    i1l1474 0331                      i1l1730 023B                      i1l1722 0233  
                    i1l1714 0220                      i1l1492 034B                      i1l1484 0343  
                    i1l1476 033A                      i1l1740 0256                      i1l1724 0234  
                    i1l1732 023D                      i1l1716 0221                      i1l1494 034D  
                    i1l1486 0345                      i1l1478 033D                      i1l1750 0269  
                    i1l1734 0241                      i1l1742 0257                      i1l1726 0238  
                    i1l1718 0226                      i1l1496 034F                      i1l1488 0347  
                    i1l1752 0270                      i1l1744 025B                      i1l1736 0245  
                    i1l1728 0239                      i1l1498 0351                      i1l1754 0274  
                    i1l1746 025F                      i1l1738 0249                      i1l1756 0275  
                    i1l1748 0263                      _EXTREC 002C                      _SERVOS 0032  
          __end_of_leer3SEG 03AE                      _servos 0331     __size_of_leerposiciones 000F  
                    saved_w 007E            __end_of_rutInter 027F  guardarposiciones@direccion 0020  
   __end_of__initialization 001D              __pcstackCOMMON 0070               _guardarservos 02D9  
      __size_of_guardar3SEG 0027              _OPTION_REGbits 0081    __size_of_AnalogReadServo 010D  
                __pbssBANK0 002B          __size_of_send1dato 000C                  __pmaintext 01A3  
            ?_guardarservos 0070                  __pintentry 0004                     ?_servos 0070  
                _leerSERVOS 027F                   ?_leer3SEG 0070           _guardarposiciones 03D5  
        ?_guardarposiciones 0020         ??_guardarposiciones 0076    __size_of_configuraciones 0075  
                 ?_rutInter 0070                     __ptext1 0381                     __ptext2 0401  
                   __ptext3 027F                     __ptext4 03F2                     __ptext5 03AE  
                   __ptext6 02D9                     __ptext7 03D5                     __ptext8 012E  
                   __ptext9 0021             __size_of_servos 0050                   _T1CONbits 0010  
            _leerposiciones 03F2                   _T2CONbits 0012           __end_of_send1dato 040D  
 __end_of_guardarposiciones 03F2                  ??_leer3SEG 0025        end_of_initialization 001D  
         ??_AnalogReadServo 0020             ??_guardarservos 0022                   _RCSTAbits 0018  
                 _SERVINDIC 0077                  ??_rutInter 0072      __end_of_leerposiciones 0401  
                 _PORTBbits 0006                   _PORTDbits 0008                   _PORTEbits 0009  
               ?_leerSERVOS 0070                 _CCP2CONbits 001D                   _TXSTAbits 0098  
         leerSERVOS@desfase 0023             ?_leerposiciones 0070              __end_of_servos 0381  
         ??_configuraciones 0076         start_initialization 0011  __size_of_guardarposiciones 001D  
      guardarservos@desfase 0024               ??_guardar3SEG 0026         __size_of_leerSERVOS 005A  
                  ??_servos 0070                 __pbssCOMMON 0076                   ___latbits 0002  
                 _datEEPROM 0076               __pcstackBANK0 0020              guardarservos@n 0025  
         __size_of_leer3SEG 002D           __size_of_rutInter 006E         __end_of_guardar3SEG 03D5  
           _AnalogReadServo 0021                   _send1dato 0401           interrupt_function 0004  
                  _IOCBbits 0096                    _PIE1bits 008C                    _PIR1bits 000C  
                _ADCON0bits 001F                  _ADCON1bits 009F     leerposiciones@direccion 0020  
              ??_leerSERVOS 0021                  ?_send1dato 0070                  _EECON1bits 018C  
          ??_leerposiciones 0076       __end_of_guardarservos 0331             _configuraciones 012E  
               _guardar3SEG 03AE          __end_of_leerSERVOS 02D9     __end_of_AnalogReadServo 012E  
                  __ptext10 0211                    __ptext11 0331                    _leer3SEG 0381  
             __size_of_main 006E                    _posicion 002B    guardarposiciones@guardar 0021  
                  _rutInter 0211                  _INTCONbits 000B                    intlevel1 0000  
               ??_send1dato 0076     __end_of_configuraciones 01A3                  _OSCCONbits 008F  
          ?_AnalogReadServo 0070  
