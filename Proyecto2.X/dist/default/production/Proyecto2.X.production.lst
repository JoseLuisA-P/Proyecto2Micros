

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu May 06 11:51:40 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0008                     _PORTDbits	set	8
   206  001E                     _ADRESH	set	30
   207  0001                     _TMR0	set	1
   208  0009                     _PORTE	set	9
   209  0008                     _PORTD	set	8
   210  0007                     _PORTC	set	7
   211  0006                     _PORTB	set	6
   212  0005                     _PORTA	set	5
   213  001F                     _ADCON0bits	set	31
   214  000B                     _INTCONbits	set	11
   215  0081                     _OPTION_REGbits	set	129
   216  009F                     _ADCON1bits	set	159
   217  008F                     _OSCCONbits	set	143
   218  0089                     _TRISE	set	137
   219  0088                     _TRISD	set	136
   220  0087                     _TRISC	set	135
   221  0086                     _TRISB	set	134
   222  0085                     _TRISA	set	133
   223  0189                     _ANSELH	set	393
   224  0188                     _ANSEL	set	392
   225                           
   226                           	psect	cinit
   227  000F                     start_initialization:	
   228                           ; #config settings
   229                           
   230  000F                     __initialization:
   231                           
   232                           ; Clear objects allocated to COMMON
   233  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   234  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   235  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   236  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   237  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   238  0014                     end_of_initialization:	
   239                           ;End of C runtime variable initialization code
   240                           
   241  0014                     __end_of__initialization:
   242  0014  0183               	clrf	3
   243  0015  120A  118A  295C   	ljmp	_main	;jump to C main() function
   244                           
   245                           	psect	bssCOMMON
   246  0070                     __pbssCOMMON:
   247  0070                     _POT4:
   248  0070                     	ds	1
   249  0071                     _POT3:
   250  0071                     	ds	1
   251  0072                     _POT2:
   252  0072                     	ds	1
   253  0073                     _POT1:
   254  0073                     	ds	1
   255  0074                     _SERVOS:
   256  0074                     	ds	1
   257                           
   258                           	psect	cstackCOMMON
   259  0075                     __pcstackCOMMON:
   260  0075                     ?_configuraciones:
   261  0075                     ?_servos:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0075                     ?_rutInter:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0075                     ??_rutInter:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0075                     ?_main:	
   271                           ; 1 bytes @ 0x0
   272                           
   273                           
   274                           ; 1 bytes @ 0x0
   275  0075                     	ds	3
   276  0078                     ??_configuraciones:
   277  0078                     ??_servos:	
   278                           ; 1 bytes @ 0x3
   279                           
   280                           
   281                           ; 1 bytes @ 0x3
   282  0078                     	ds	2
   283  007A                     ??_main:
   284                           
   285                           	psect	maintext
   286  015C                     __pmaintext:	
   287                           ; 1 bytes @ 0x5
   288 ;;
   289 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   290 ;;
   291 ;; *************** function _main *****************
   292 ;; Defined at:
   293 ;;		line 80 in file "mainP2.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;		None
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   302 ;; Tracked objects:
   303 ;;		On entry : B00/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   307 ;;      Params:         0       0       0       0       0
   308 ;;      Locals:         0       0       0       0       0
   309 ;;      Temps:          0       0       0       0       0
   310 ;;      Totals:         0       0       0       0       0
   311 ;;Total ram usage:        0 bytes
   312 ;; Hardware stack levels required when called:    2
   313 ;; This function calls:
   314 ;;		_configuraciones
   315 ;;		_servos
   316 ;; This function is called by:
   317 ;;		Startup code after reset
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321                           
   322                           ;psect for function _main
   323  015C                     _main:
   324  015C                     l853:	
   325                           ;incstack = 0
   326                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   327                           
   328                           
   329                           ;mainP2.c: 81:     configuraciones();
   330  015C  120A  118A  210B  120A  118A  	fcall	_configuraciones
   331  0161                     l855:
   332                           
   333                           ;mainP2.c: 83:         servos();
   334  0161  120A  118A  2018  120A  118A  	fcall	_servos
   335  0166  2961               	goto	l855
   336  0167  120A  118A  280C   	ljmp	start
   337  016A                     __end_of_main:
   338                           
   339                           	psect	text1
   340  0018                     __ptext1:	
   341 ;; *************** function _servos *****************
   342 ;; Defined at:
   343 ;;		line 135 in file "mainP2.c"
   344 ;; Parameters:    Size  Location     Type
   345 ;;		None
   346 ;; Auto vars:     Size  Location     Type
   347 ;;		None
   348 ;; Return value:  Size  Location     Type
   349 ;;                  1    wreg      void 
   350 ;; Registers used:
   351 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   352 ;; Tracked objects:
   353 ;;		On entry : 0/0
   354 ;;		On exit  : 0/0
   355 ;;		Unchanged: 0/0
   356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   357 ;;      Params:         0       0       0       0       0
   358 ;;      Locals:         0       0       0       0       0
   359 ;;      Temps:          2       0       0       0       0
   360 ;;      Totals:         2       0       0       0       0
   361 ;;Total ram usage:        2 bytes
   362 ;; Hardware stack levels used:    1
   363 ;; Hardware stack levels required when called:    1
   364 ;; This function calls:
   365 ;;		Nothing
   366 ;; This function is called by:
   367 ;;		_main
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           
   372                           ;psect for function _servos
   373  0018                     _servos:
   374  0018                     l745:	
   375                           ;incstack = 0
   376                           ; Regs used in _servos: [wreg-fsr0h+status,2+status,0]
   377                           
   378                           
   379                           ;mainP2.c: 137:     if(!ADCON0bits.GO){
   380  0018  1283               	bcf	3,5	;RP0=0, select bank0
   381  0019  1303               	bcf	3,6	;RP1=0, select bank0
   382  001A  189F               	btfsc	31,1	;volatile
   383  001B  281D               	goto	u11
   384  001C  281E               	goto	u10
   385  001D                     u11:
   386  001D  28B8               	goto	l74
   387  001E                     u10:
   388  001E  2895               	goto	l791
   389  001F                     l749:
   390                           
   391                           ;mainP2.c: 140:                  POT2 = ADRESH;
   392  001F  081E               	movf	30,w	;volatile
   393  0020  00F8               	movwf	??_servos
   394  0021  0878               	movf	??_servos,w
   395  0022  00F2               	movwf	_POT2
   396                           
   397                           ;mainP2.c: 141:             break;
   398  0023  28B8               	goto	l74
   399  0024                     l751:
   400                           
   401                           ;mainP2.c: 144:                 ADCON0bits.CHS = 2;
   402  0024  081F               	movf	31,w	;volatile
   403  0025  39C3               	andlw	-61
   404  0026  3808               	iorlw	8
   405  0027  009F               	movwf	31	;volatile
   406  0028                     l753:
   407                           
   408                           ;mainP2.c: 145:                 if(POT2>190) POT2 = 190;
   409  0028  30BF               	movlw	191
   410  0029  0272               	subwf	_POT2,w
   411  002A  1C03               	skipc
   412  002B  282D               	goto	u21
   413  002C  282E               	goto	u20
   414  002D                     u21:
   415  002D  2832               	goto	l79
   416  002E                     u20:
   417  002E                     l755:
   418  002E  30BE               	movlw	190
   419  002F  00F8               	movwf	??_servos
   420  0030  0878               	movf	??_servos,w
   421  0031  00F2               	movwf	_POT2
   422  0032                     l79:
   423                           
   424                           ;mainP2.c: 146:                 if(POT2<10) POT2 = 10;
   425  0032  300A               	movlw	10
   426  0033  0272               	subwf	_POT2,w
   427  0034  1803               	skipnc
   428  0035  2837               	goto	u31
   429  0036  2838               	goto	u30
   430  0037                     u31:
   431  0037  28B8               	goto	l74
   432  0038                     u30:
   433  0038                     l757:
   434  0038  300A               	movlw	10
   435  0039  00F8               	movwf	??_servos
   436  003A  0878               	movf	??_servos,w
   437  003B  00F2               	movwf	_POT2
   438  003C  28B8               	goto	l74
   439  003D                     l759:
   440                           
   441                           ;mainP2.c: 150:                 POT3 = ADRESH;
   442  003D  081E               	movf	30,w	;volatile
   443  003E  00F8               	movwf	??_servos
   444  003F  0878               	movf	??_servos,w
   445  0040  00F1               	movwf	_POT3
   446                           
   447                           ;mainP2.c: 151:             break;
   448  0041  28B8               	goto	l74
   449  0042                     l761:
   450                           
   451                           ;mainP2.c: 154:                 ADCON0bits.CHS = 3;
   452  0042  081F               	movf	31,w	;volatile
   453  0043  39C3               	andlw	-61
   454  0044  380C               	iorlw	12
   455  0045  009F               	movwf	31	;volatile
   456  0046                     l763:
   457                           
   458                           ;mainP2.c: 155:                 if(POT3>190) POT3 = 190;
   459  0046  30BF               	movlw	191
   460  0047  0271               	subwf	_POT3,w
   461  0048  1C03               	skipc
   462  0049  284B               	goto	u41
   463  004A  284C               	goto	u40
   464  004B                     u41:
   465  004B  2850               	goto	l83
   466  004C                     u40:
   467  004C                     l765:
   468  004C  30BE               	movlw	190
   469  004D  00F8               	movwf	??_servos
   470  004E  0878               	movf	??_servos,w
   471  004F  00F1               	movwf	_POT3
   472  0050                     l83:
   473                           
   474                           ;mainP2.c: 156:                 if(POT3<10) POT3 = 10;
   475  0050  300A               	movlw	10
   476  0051  0271               	subwf	_POT3,w
   477  0052  1803               	skipnc
   478  0053  2855               	goto	u51
   479  0054  2856               	goto	u50
   480  0055                     u51:
   481  0055  28B8               	goto	l74
   482  0056                     u50:
   483  0056                     l767:
   484  0056  300A               	movlw	10
   485  0057  00F8               	movwf	??_servos
   486  0058  0878               	movf	??_servos,w
   487  0059  00F1               	movwf	_POT3
   488  005A  28B8               	goto	l74
   489  005B                     l769:
   490                           
   491                           ;mainP2.c: 160:                 POT4 = ADRESH;
   492  005B  081E               	movf	30,w	;volatile
   493  005C  00F8               	movwf	??_servos
   494  005D  0878               	movf	??_servos,w
   495  005E  00F0               	movwf	_POT4
   496                           
   497                           ;mainP2.c: 161:             break;
   498  005F  28B8               	goto	l74
   499  0060                     l771:
   500                           
   501                           ;mainP2.c: 164:                 ADCON0bits.CHS = 0;
   502  0060  30C3               	movlw	-61
   503  0061  059F               	andwf	31,f	;volatile
   504  0062                     l773:
   505                           
   506                           ;mainP2.c: 165:                 if(POT4>190) POT4 = 190;
   507  0062  30BF               	movlw	191
   508  0063  0270               	subwf	_POT4,w
   509  0064  1C03               	skipc
   510  0065  2867               	goto	u61
   511  0066  2868               	goto	u60
   512  0067                     u61:
   513  0067  286C               	goto	l87
   514  0068                     u60:
   515  0068                     l775:
   516  0068  30BE               	movlw	190
   517  0069  00F8               	movwf	??_servos
   518  006A  0878               	movf	??_servos,w
   519  006B  00F0               	movwf	_POT4
   520  006C                     l87:
   521                           
   522                           ;mainP2.c: 166:                 if(POT4<10) POT4 = 10;
   523  006C  300A               	movlw	10
   524  006D  0270               	subwf	_POT4,w
   525  006E  1803               	skipnc
   526  006F  2871               	goto	u71
   527  0070  2872               	goto	u70
   528  0071                     u71:
   529  0071  28B8               	goto	l74
   530  0072                     u70:
   531  0072                     l777:
   532  0072  300A               	movlw	10
   533  0073  00F8               	movwf	??_servos
   534  0074  0878               	movf	??_servos,w
   535  0075  00F0               	movwf	_POT4
   536  0076  28B8               	goto	l74
   537  0077                     l779:
   538                           
   539                           ;mainP2.c: 170:                 POT1 = ADRESH;
   540  0077  081E               	movf	30,w	;volatile
   541  0078  00F8               	movwf	??_servos
   542  0079  0878               	movf	??_servos,w
   543  007A  00F3               	movwf	_POT1
   544                           
   545                           ;mainP2.c: 171:             break;
   546  007B  28B8               	goto	l74
   547  007C                     l781:
   548                           
   549                           ;mainP2.c: 174:                 ADCON0bits.CHS = 1;
   550  007C  081F               	movf	31,w	;volatile
   551  007D  39C3               	andlw	-61
   552  007E  3804               	iorlw	4
   553  007F  009F               	movwf	31	;volatile
   554  0080                     l783:
   555                           
   556                           ;mainP2.c: 175:                 if(POT1>190) POT1 = 190;
   557  0080  30BF               	movlw	191
   558  0081  0273               	subwf	_POT1,w
   559  0082  1C03               	skipc
   560  0083  2885               	goto	u81
   561  0084  2886               	goto	u80
   562  0085                     u81:
   563  0085  288A               	goto	l91
   564  0086                     u80:
   565  0086                     l785:
   566  0086  30BE               	movlw	190
   567  0087  00F8               	movwf	??_servos
   568  0088  0878               	movf	??_servos,w
   569  0089  00F3               	movwf	_POT1
   570  008A                     l91:
   571                           
   572                           ;mainP2.c: 176:                 if(POT1<10) POT1 = 10;
   573  008A  300A               	movlw	10
   574  008B  0273               	subwf	_POT1,w
   575  008C  1803               	skipnc
   576  008D  288F               	goto	u91
   577  008E  2890               	goto	u90
   578  008F                     u91:
   579  008F  28B8               	goto	l74
   580  0090                     u90:
   581  0090                     l787:
   582  0090  300A               	movlw	10
   583  0091  00F8               	movwf	??_servos
   584  0092  0878               	movf	??_servos,w
   585  0093  00F3               	movwf	_POT1
   586  0094  28B8               	goto	l74
   587  0095                     l791:
   588  0095  0874               	movf	_SERVOS,w
   589  0096  391F               	andlw	31
   590  0097  00F8               	movwf	??_servos
   591  0098  01F9               	clrf	??_servos+1
   592                           
   593                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   594                           ; Switch size 1, requested type "simple"
   595                           ; Number of cases is 1, Range of values is 0 to 0
   596                           ; switch strategies available:
   597                           ; Name         Instructions Cycles
   598                           ; simple_byte            4     3 (average)
   599                           ; direct_byte           11     8 (fixed)
   600                           ; jumptable            260     6 (fixed)
   601                           ;	Chosen strategy is simple_byte
   602  0099  0879               	movf	??_servos+1,w
   603  009A  3A00               	xorlw	0	; case 0
   604  009B  1903               	skipnz
   605  009C  289E               	goto	l897
   606  009D  28B8               	goto	l74
   607  009E                     l897:
   608                           
   609                           ; Switch size 1, requested type "simple"
   610                           ; Number of cases is 8, Range of values is 0 to 10
   611                           ; switch strategies available:
   612                           ; Name         Instructions Cycles
   613                           ; simple_byte           25    13 (average)
   614                           ; direct_byte           41     8 (fixed)
   615                           ; jumptable            260     6 (fixed)
   616                           ;	Chosen strategy is simple_byte
   617  009E  0878               	movf	??_servos,w
   618  009F  3A00               	xorlw	0	; case 0
   619  00A0  1903               	skipnz
   620  00A1  281F               	goto	l749
   621  00A2  3A01               	xorlw	1	; case 1
   622  00A3  1903               	skipnz
   623  00A4  2824               	goto	l751
   624  00A5  3A02               	xorlw	2	; case 3
   625  00A6  1903               	skipnz
   626  00A7  283D               	goto	l759
   627  00A8  3A07               	xorlw	7	; case 4
   628  00A9  1903               	skipnz
   629  00AA  2842               	goto	l761
   630  00AB  3A02               	xorlw	2	; case 6
   631  00AC  1903               	skipnz
   632  00AD  285B               	goto	l769
   633  00AE  3A01               	xorlw	1	; case 7
   634  00AF  1903               	skipnz
   635  00B0  2860               	goto	l771
   636  00B1  3A0E               	xorlw	14	; case 9
   637  00B2  1903               	skipnz
   638  00B3  2877               	goto	l779
   639  00B4  3A03               	xorlw	3	; case 10
   640  00B5  1903               	skipnz
   641  00B6  287C               	goto	l781
   642  00B7  28B8               	goto	l74
   643  00B8                     l74:	
   644                           ;mainP2.c: 180:     }
   645                           
   646                           
   647                           ;mainP2.c: 182:     if(SERVOS.bit1){
   648  00B8  1EF4               	btfss	_SERVOS,5
   649  00B9  28BB               	goto	u101
   650  00BA  28BC               	goto	u100
   651  00BB                     u101:
   652  00BB  290A               	goto	l105
   653  00BC                     u100:
   654  00BC                     l793:
   655                           
   656                           ;mainP2.c: 183:             if(SERVOS.bit0 == 15) SERVOS.bit0 = 0;
   657  00BC  0874               	movf	_SERVOS,w
   658  00BD  391F               	andlw	31
   659  00BE  3A0F               	xorlw	15
   660  00BF  1D03               	skipz
   661  00C0  28C2               	goto	u111
   662  00C1  28C3               	goto	u110
   663  00C2                     u111:
   664  00C2  28C5               	goto	l797
   665  00C3                     u110:
   666  00C3                     l795:
   667  00C3  30E0               	movlw	-32
   668  00C4  05F4               	andwf	_SERVOS,f
   669  00C5                     l797:
   670                           
   671                           ;mainP2.c: 184:             SERVOS.bit1 = 0;
   672  00C5  12F4               	bcf	_SERVOS,5
   673                           
   674                           ;mainP2.c: 185:             switch(SERVOS.bit0){
   675  00C6  28E7               	goto	l833
   676  00C7                     l799:
   677                           
   678                           ;mainP2.c: 188:                     TMR0 = 255-POT1; PORTDbits.RD0 = 0;
   679  00C7  0973               	comf	_POT1,w
   680  00C8  0081               	movwf	1	;volatile
   681  00C9                     l801:
   682  00C9  1008               	bcf	8,0	;volatile
   683                           
   684                           ;mainP2.c: 189:                     break;
   685  00CA  290A               	goto	l105
   686  00CB                     l803:
   687                           
   688                           ;mainP2.c: 191:                      TMR0 = 255-POT2; PORTDbits.RD1 = 0;
   689  00CB  0972               	comf	_POT2,w
   690  00CC  0081               	movwf	1	;volatile
   691  00CD                     l805:
   692  00CD  1088               	bcf	8,1	;volatile
   693                           
   694                           ;mainP2.c: 192:                     break;
   695  00CE  290A               	goto	l105
   696  00CF                     l807:
   697                           
   698                           ;mainP2.c: 194:                     TMR0 = 255-POT3; PORTDbits.RD2 = 0;
   699  00CF  0971               	comf	_POT3,w
   700  00D0  0081               	movwf	1	;volatile
   701  00D1                     l809:
   702  00D1  1108               	bcf	8,2	;volatile
   703                           
   704                           ;mainP2.c: 195:                     break;
   705  00D2  290A               	goto	l105
   706  00D3                     l811:
   707                           
   708                           ;mainP2.c: 197:                     TMR0 = 255-POT4; PORTDbits.RD3 = 0;
   709  00D3  0970               	comf	_POT4,w
   710  00D4  0081               	movwf	1	;volatile
   711  00D5                     l813:
   712  00D5  1188               	bcf	8,3	;volatile
   713                           
   714                           ;mainP2.c: 198:                     break;
   715  00D6  290A               	goto	l105
   716  00D7                     l815:
   717                           
   718                           ;mainP2.c: 201:                     TMR0 = POT1; PORTDbits.RD0 = 1;
   719  00D7  0873               	movf	_POT1,w
   720  00D8  0081               	movwf	1	;volatile
   721  00D9                     l817:
   722  00D9  1408               	bsf	8,0	;volatile
   723                           
   724                           ;mainP2.c: 202:                     break;
   725  00DA  290A               	goto	l105
   726  00DB                     l819:
   727                           
   728                           ;mainP2.c: 204:                     TMR0 = POT2; PORTDbits.RD1 = 1;
   729  00DB  0872               	movf	_POT2,w
   730  00DC  0081               	movwf	1	;volatile
   731  00DD                     l821:
   732  00DD  1488               	bsf	8,1	;volatile
   733                           
   734                           ;mainP2.c: 205:                     break;
   735  00DE  290A               	goto	l105
   736  00DF                     l823:
   737                           
   738                           ;mainP2.c: 207:                     TMR0 = POT3; PORTDbits.RD2 = 1;
   739  00DF  0871               	movf	_POT3,w
   740  00E0  0081               	movwf	1	;volatile
   741  00E1                     l825:
   742  00E1  1508               	bsf	8,2	;volatile
   743                           
   744                           ;mainP2.c: 208:                     break;
   745  00E2  290A               	goto	l105
   746  00E3                     l827:
   747                           
   748                           ;mainP2.c: 210:                     TMR0 = POT4; PORTDbits.RD3 = 1;
   749  00E3  0870               	movf	_POT4,w
   750  00E4  0081               	movwf	1	;volatile
   751  00E5                     l829:
   752  00E5  1588               	bsf	8,3	;volatile
   753                           
   754                           ;mainP2.c: 211:                     break;
   755  00E6  290A               	goto	l105
   756  00E7                     l833:
   757  00E7  0874               	movf	_SERVOS,w
   758  00E8  391F               	andlw	31
   759  00E9  00F8               	movwf	??_servos
   760  00EA  01F9               	clrf	??_servos+1
   761                           
   762                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   763                           ; Switch size 1, requested type "simple"
   764                           ; Number of cases is 1, Range of values is 0 to 0
   765                           ; switch strategies available:
   766                           ; Name         Instructions Cycles
   767                           ; simple_byte            4     3 (average)
   768                           ; direct_byte           11     8 (fixed)
   769                           ; jumptable            260     6 (fixed)
   770                           ;	Chosen strategy is simple_byte
   771  00EB  0879               	movf	??_servos+1,w
   772  00EC  3A00               	xorlw	0	; case 0
   773  00ED  1903               	skipnz
   774  00EE  28F0               	goto	l899
   775  00EF  290A               	goto	l105
   776  00F0                     l899:
   777                           
   778                           ; Switch size 1, requested type "simple"
   779                           ; Number of cases is 8, Range of values is 0 to 10
   780                           ; switch strategies available:
   781                           ; Name         Instructions Cycles
   782                           ; simple_byte           25    13 (average)
   783                           ; direct_byte           41     8 (fixed)
   784                           ; jumptable            260     6 (fixed)
   785                           ;	Chosen strategy is simple_byte
   786  00F0  0878               	movf	??_servos,w
   787  00F1  3A00               	xorlw	0	; case 0
   788  00F2  1903               	skipnz
   789  00F3  28D7               	goto	l815
   790  00F4  3A01               	xorlw	1	; case 1
   791  00F5  1903               	skipnz
   792  00F6  28C7               	goto	l799
   793  00F7  3A02               	xorlw	2	; case 3
   794  00F8  1903               	skipnz
   795  00F9  28DB               	goto	l819
   796  00FA  3A07               	xorlw	7	; case 4
   797  00FB  1903               	skipnz
   798  00FC  28CB               	goto	l803
   799  00FD  3A02               	xorlw	2	; case 6
   800  00FE  1903               	skipnz
   801  00FF  28DF               	goto	l823
   802  0100  3A01               	xorlw	1	; case 7
   803  0101  1903               	skipnz
   804  0102  28CF               	goto	l807
   805  0103  3A0E               	xorlw	14	; case 9
   806  0104  1903               	skipnz
   807  0105  28E3               	goto	l827
   808  0106  3A03               	xorlw	3	; case 10
   809  0107  1903               	skipnz
   810  0108  28D3               	goto	l811
   811  0109  290A               	goto	l105
   812  010A                     l105:
   813  010A  0008               	return
   814  010B                     __end_of_servos:
   815                           
   816                           	psect	text2
   817  010B                     __ptext2:	
   818 ;; *************** function _configuraciones *****************
   819 ;; Defined at:
   820 ;;		line 90 in file "mainP2.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;		None
   823 ;; Auto vars:     Size  Location     Type
   824 ;;		None
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		wreg, status,2, status,0
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   834 ;;      Params:         0       0       0       0       0
   835 ;;      Locals:         0       0       0       0       0
   836 ;;      Temps:          0       0       0       0       0
   837 ;;      Totals:         0       0       0       0       0
   838 ;;Total ram usage:        0 bytes
   839 ;; Hardware stack levels used:    1
   840 ;; Hardware stack levels required when called:    1
   841 ;; This function calls:
   842 ;;		Nothing
   843 ;; This function is called by:
   844 ;;		_main
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           
   849                           ;psect for function _configuraciones
   850  010B                     _configuraciones:
   851  010B                     l697:	
   852                           ;incstack = 0
   853                           ; Regs used in _configuraciones: [wreg+status,2+status,0]
   854                           
   855                           
   856                           ;mainP2.c: 92:     ANSEL = 0X0F;
   857  010B  300F               	movlw	15
   858  010C  1683               	bsf	3,5	;RP0=1, select bank3
   859  010D  1703               	bsf	3,6	;RP1=1, select bank3
   860  010E  0088               	movwf	8	;volatile
   861  010F                     l699:
   862                           
   863                           ;mainP2.c: 93:     ANSELH = 0X00;
   864  010F  0189               	clrf	9	;volatile
   865  0110                     l701:
   866                           
   867                           ;mainP2.c: 94:     TRISA = 0X0F;
   868  0110  300F               	movlw	15
   869  0111  1683               	bsf	3,5	;RP0=1, select bank1
   870  0112  1303               	bcf	3,6	;RP1=0, select bank1
   871  0113  0085               	movwf	5	;volatile
   872                           
   873                           ;mainP2.c: 95:     TRISB = 0X00;
   874  0114  0186               	clrf	6	;volatile
   875                           
   876                           ;mainP2.c: 96:     TRISC = 0X00;
   877  0115  0187               	clrf	7	;volatile
   878                           
   879                           ;mainP2.c: 97:     TRISD = 0X00;
   880  0116  0188               	clrf	8	;volatile
   881                           
   882                           ;mainP2.c: 98:     TRISE = 0X00;
   883  0117  0189               	clrf	9	;volatile
   884                           
   885                           ;mainP2.c: 99:     PORTA = 0X00;
   886  0118  1283               	bcf	3,5	;RP0=0, select bank0
   887  0119  1303               	bcf	3,6	;RP1=0, select bank0
   888  011A  0185               	clrf	5	;volatile
   889                           
   890                           ;mainP2.c: 100:     PORTB = 0X00;
   891  011B  0186               	clrf	6	;volatile
   892                           
   893                           ;mainP2.c: 101:     PORTC = 0X00;
   894  011C  0187               	clrf	7	;volatile
   895                           
   896                           ;mainP2.c: 102:     PORTD = 0X00;
   897  011D  0188               	clrf	8	;volatile
   898                           
   899                           ;mainP2.c: 103:     PORTE = 0X00;
   900  011E  0189               	clrf	9	;volatile
   901  011F                     l703:
   902                           
   903                           ;mainP2.c: 106:     OSCCONbits.IRCF = 0b111;
   904  011F  3070               	movlw	112
   905  0120  1683               	bsf	3,5	;RP0=1, select bank1
   906  0121  1303               	bcf	3,6	;RP1=0, select bank1
   907  0122  048F               	iorwf	15,f	;volatile
   908  0123                     l705:
   909                           
   910                           ;mainP2.c: 107:     OSCCONbits.SCS = 0b1;
   911  0123  140F               	bsf	15,0	;volatile
   912  0124                     l707:
   913                           
   914                           ;mainP2.c: 110:     INTCONbits.TMR0IF = 0;
   915  0124  110B               	bcf	11,2	;volatile
   916  0125                     l709:
   917                           
   918                           ;mainP2.c: 111:     INTCONbits.TMR0IE = 1;
   919  0125  168B               	bsf	11,5	;volatile
   920  0126                     l711:
   921                           
   922                           ;mainP2.c: 112:     INTCONbits.GIE = 1;
   923  0126  178B               	bsf	11,7	;volatile
   924  0127                     l713:
   925                           
   926                           ;mainP2.c: 115:     ADCON0bits.ADCS = 0b10;
   927  0127  1283               	bcf	3,5	;RP0=0, select bank0
   928  0128  1303               	bcf	3,6	;RP1=0, select bank0
   929  0129  081F               	movf	31,w	;volatile
   930  012A  393F               	andlw	-193
   931  012B  3880               	iorlw	128
   932  012C  009F               	movwf	31	;volatile
   933  012D                     l715:
   934                           
   935                           ;mainP2.c: 116:     ADCON0bits.CHS = 0b0000;
   936  012D  30C3               	movlw	-61
   937  012E  059F               	andwf	31,f	;volatile
   938  012F                     l717:
   939                           
   940                           ;mainP2.c: 117:     ADCON0bits.GO = 0b0;
   941  012F  109F               	bcf	31,1	;volatile
   942  0130                     l719:
   943                           
   944                           ;mainP2.c: 118:     ADCON0bits.ADON = 0b1;
   945  0130  141F               	bsf	31,0	;volatile
   946  0131                     l721:
   947                           
   948                           ;mainP2.c: 119:     ADCON1bits.ADFM = 0b0;
   949  0131  1683               	bsf	3,5	;RP0=1, select bank1
   950  0132  1303               	bcf	3,6	;RP1=0, select bank1
   951  0133  139F               	bcf	31,7	;volatile
   952  0134                     l723:
   953                           
   954                           ;mainP2.c: 120:     ADCON1bits.VCFG1 = 0b0;
   955  0134  129F               	bcf	31,5	;volatile
   956  0135                     l725:
   957                           
   958                           ;mainP2.c: 121:     ADCON1bits.VCFG0 = 0b0;
   959  0135  121F               	bcf	31,4	;volatile
   960  0136                     l727:
   961                           
   962                           ;mainP2.c: 124:     OSCCONbits.SCS = 1;
   963  0136  140F               	bsf	15,0	;volatile
   964  0137                     l729:
   965                           
   966                           ;mainP2.c: 125:     OPTION_REGbits.T0CS = 0;
   967  0137  1281               	bcf	1,5	;volatile
   968  0138                     l731:
   969                           
   970                           ;mainP2.c: 126:     OPTION_REGbits.PSA = 0;
   971  0138  1181               	bcf	1,3	;volatile
   972  0139                     l733:
   973                           
   974                           ;mainP2.c: 127:     OPTION_REGbits.PS2 = 0;
   975  0139  1101               	bcf	1,2	;volatile
   976  013A                     l735:
   977                           
   978                           ;mainP2.c: 128:     OPTION_REGbits.PS1 = 1;
   979  013A  1481               	bsf	1,1	;volatile
   980  013B                     l737:
   981                           
   982                           ;mainP2.c: 129:     OPTION_REGbits.PS0 = 1;
   983  013B  1401               	bsf	1,0	;volatile
   984  013C                     l739:
   985                           
   986                           ;mainP2.c: 130:     INTCONbits.T0IF = 0;
   987  013C  110B               	bcf	11,2	;volatile
   988  013D                     l741:
   989                           
   990                           ;mainP2.c: 131:     TMR0 = 131;
   991  013D  3083               	movlw	131
   992  013E  1283               	bcf	3,5	;RP0=0, select bank0
   993  013F  1303               	bcf	3,6	;RP1=0, select bank0
   994  0140  0081               	movwf	1	;volatile
   995  0141                     l743:
   996                           
   997                           ;mainP2.c: 132:     SERVOS.bit1 = 0;
   998  0141  12F4               	bcf	_SERVOS,5
   999  0142                     l71:
  1000  0142  0008               	return
  1001  0143                     __end_of_configuraciones:
  1002                           
  1003                           	psect	text3
  1004  0143                     __ptext3:	
  1005 ;; *************** function _rutInter *****************
  1006 ;; Defined at:
  1007 ;;		line 66 in file "mainP2.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;		None
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;		None
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  1    wreg      void 
  1014 ;; Registers used:
  1015 ;;		wreg, status,2, status,0
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1021 ;;      Params:         0       0       0       0       0
  1022 ;;      Locals:         0       0       0       0       0
  1023 ;;      Temps:          3       0       0       0       0
  1024 ;;      Totals:         3       0       0       0       0
  1025 ;;Total ram usage:        3 bytes
  1026 ;; Hardware stack levels used:    1
  1027 ;; This function calls:
  1028 ;;		Nothing
  1029 ;; This function is called by:
  1030 ;;		Interrupt level 1
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           
  1035                           ;psect for function _rutInter
  1036  0143                     _rutInter:
  1037  0143                     i1l843:
  1038                           
  1039                           ;mainP2.c: 68:     if(INTCONbits.TMR0IF) {
  1040  0143  1D0B               	btfss	11,2	;volatile
  1041  0144  2946               	goto	u12_21
  1042  0145  2947               	goto	u12_20
  1043  0146                     u12_21:
  1044  0146  2955               	goto	i1l60
  1045  0147                     u12_20:
  1046  0147                     i1l845:
  1047                           
  1048                           ;mainP2.c: 69:         SERVOS.bit0++;
  1049  0147  0874               	movf	_SERVOS,w
  1050  0148  391F               	andlw	31
  1051  0149  00F5               	movwf	??_rutInter
  1052  014A  0AF5               	incf	??_rutInter,f
  1053  014B  0874               	movf	_SERVOS,w
  1054  014C  0675               	xorwf	??_rutInter,w
  1055  014D  39E0               	andlw	-32
  1056  014E  0675               	xorwf	??_rutInter,w
  1057  014F  00F4               	movwf	_SERVOS
  1058  0150                     i1l847:
  1059                           
  1060                           ;mainP2.c: 70:         SERVOS.bit1 = 1;
  1061  0150  16F4               	bsf	_SERVOS,5
  1062  0151                     i1l849:
  1063                           
  1064                           ;mainP2.c: 71:         INTCONbits.TMR0IF = 0;
  1065  0151  110B               	bcf	11,2	;volatile
  1066  0152                     i1l851:
  1067                           
  1068                           ;mainP2.c: 72:         ADCON0bits.GO = 1;
  1069  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1070  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1071  0154  149F               	bsf	31,1	;volatile
  1072  0155                     i1l60:
  1073  0155  0877               	movf	??_rutInter+2,w
  1074  0156  008A               	movwf	10
  1075  0157  0E76               	swapf	??_rutInter+1,w
  1076  0158  0083               	movwf	3
  1077  0159  0EFE               	swapf	btemp,f
  1078  015A  0E7E               	swapf	btemp,w
  1079  015B  0009               	retfie
  1080  015C                     __end_of_rutInter:
  1081  007E                     btemp	set	126	;btemp
  1082  007E                     wtemp0	set	126
  1083                           
  1084                           	psect	intentry
  1085  0004                     __pintentry:	
  1086                           ;incstack = 0
  1087                           ; Regs used in _rutInter: [wreg+status,2+status,0]
  1088                           
  1089  0004                     interrupt_function:
  1090  007E                     saved_w	set	btemp
  1091  0004  00FE               	movwf	btemp
  1092  0005  0E03               	swapf	3,w
  1093  0006  00F6               	movwf	??_rutInter+1
  1094  0007  080A               	movf	10,w
  1095  0008  00F7               	movwf	??_rutInter+2
  1096  0009  120A  118A  2943   	ljmp	_rutInter
  1097                           
  1098                           	psect	config
  1099                           
  1100                           ;Config register CONFIG1 @ 0x2007
  1101                           ;	Oscillator Selection bits
  1102                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1103                           ;	Watchdog Timer Enable bit
  1104                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1105                           ;	Power-up Timer Enable bit
  1106                           ;	PWRTE = OFF, PWRT disabled
  1107                           ;	RE3/MCLR pin function select bit
  1108                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1109                           ;	Code Protection bit
  1110                           ;	CP = OFF, Program memory code protection is disabled
  1111                           ;	Data Code Protection bit
  1112                           ;	CPD = OFF, Data memory code protection is disabled
  1113                           ;	Brown Out Reset Selection bits
  1114                           ;	BOREN = OFF, BOR disabled
  1115                           ;	Internal External Switchover bit
  1116                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1117                           ;	Fail-Safe Clock Monitor Enabled bit
  1118                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1119                           ;	Low Voltage Programming Enable bit
  1120                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1121                           ;	In-Circuit Debugger Mode bit
  1122                           ;	DEBUG = 0x1, unprogrammed default
  1123  2007                     	org	8199
  1124  2007  20F4               	dw	8436
  1125                           
  1126                           ;Config register CONFIG2 @ 0x2008
  1127                           ;	Brown-out Reset Selection bit
  1128                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1129                           ;	Flash Program Memory Self Write Enable bits
  1130                           ;	WRT = OFF, Write protection off
  1131  2008                     	org	8200
  1132  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_servos

Critical Paths under _rutInter in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _rutInter in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rutInter in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutInter in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutInter in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                    _configuraciones
                             _servos
 ---------------------------------------------------------------------------------
 (1) _servos                                               2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _configuraciones                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _rutInter                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configuraciones
   _servos

 _rutInter (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu May 06 11:51:40 2021

                      l71 0142                        l74 00B8                        l91 008A  
                      l83 0050                        l87 006C                        l79 0032  
                      u10 001E                        u11 001D                        u20 002E  
                      u21 002D                        u30 0038                        u31 0037  
                      u40 004C                        u41 004B                        u50 0056  
                      u51 0055                        u60 0068                        u61 0067  
                      u70 0072                        u71 0071                        u80 0086  
                      u81 0085                        u90 0090                        u91 008F  
                     l105 010A                       l701 0110                       l711 0126  
                     l703 011F                       l721 0131                       l713 0127  
                     l705 0123                       l801 00C9                       l731 0138  
                     l723 0134                       l715 012D                       l707 0124  
                     l811 00D3                       l803 00CB                       l741 013D  
                     l733 0139                       l725 0135                       l717 012F  
                     l709 0125                       l821 00DD                       l813 00D5  
                     l805 00CD                       l743 0141                       l735 013A  
                     l727 0136                       l719 0130                       l823 00DF  
                     l815 00D7                       l807 00CF                       l751 0024  
                     l737 013B                       l729 0137                       l825 00E1  
                     l817 00D9                       l809 00D1                       l833 00E7  
                     l761 0042                       l753 0028                       l745 0018  
                     l739 013C                       l827 00E3                       l819 00DB  
                     l771 0060                       l763 0046                       l755 002E  
                     l829 00E5                       l781 007C                       l773 0062  
                     l765 004C                       l757 0038                       l749 001F  
                     l853 015C                       l783 0080                       l775 0068  
                     l767 0056                       l759 003D                       l791 0095  
                     l855 0161                       l697 010B                       l793 00BC  
                     l785 0086                       l777 0072                       l769 005B  
                     l699 010F                       l795 00C3                       l787 0090  
                     l779 0077                       l797 00C5                       l799 00C7  
                     l897 009E                       l899 00F0                       u100 00BC  
                     u101 00BB                       u110 00C3                       u111 00C2  
                    i1l60 0155                      _POT1 0073                      _POT2 0072  
                    _POT3 0071                      _POT4 0070                      _TMR0 0001  
                    _main 015C                      btemp 007E          ?_configuraciones 0075  
                    start 000C                     ?_main 0075                     _ANSEL 0188  
                   i1l851 0152                     i1l843 0143                     i1l845 0147  
                   i1l847 0150                     i1l849 0151                     u12_20 0147  
                   u12_21 0146                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 000F  
            __end_of_main 016A                    ??_main 007A                    _ADRESH 001E  
                  _ANSELH 0189                    _SERVOS 0074                    _servos 0018  
                  saved_w 007E          __end_of_rutInter 015C   __end_of__initialization 0014  
          __pcstackCOMMON 0075            _OPTION_REGbits 0081                __pmaintext 015C  
              __pintentry 0004                   ?_servos 0075  __size_of_configuraciones 0038  
               ?_rutInter 0075                   __ptext1 0018                   __ptext2 010B  
                 __ptext3 0143           __size_of_servos 00F3      end_of_initialization 0014  
              ??_rutInter 0075                 _PORTDbits 0008            __end_of_servos 010B  
       ??_configuraciones 0078       start_initialization 000F                  ??_servos 0078  
             __pbssCOMMON 0070                 ___latbits 0002         __size_of_rutInter 0019  
       interrupt_function 0004                _ADCON0bits 001F                _ADCON1bits 009F  
         _configuraciones 010B             __size_of_main 000E                  _rutInter 0143  
              _INTCONbits 000B                  intlevel1 0000   __end_of_configuraciones 0143  
              _OSCCONbits 008F  
