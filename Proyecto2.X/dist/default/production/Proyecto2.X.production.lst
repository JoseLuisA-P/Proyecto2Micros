

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat May 15 10:32:27 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0019                     _TXREG	set	25
   216  001E                     _ADRESH	set	30
   217  0008                     _PORTDbits	set	8
   218  0001                     _TMR0	set	1
   219  0018                     _RCSTAbits	set	24
   220  0012                     _T2CONbits	set	18
   221  001D                     _CCP2CONbits	set	29
   222  0009                     _PORTE	set	9
   223  0008                     _PORTD	set	8
   224  0007                     _PORTC	set	7
   225  0006                     _PORTB	set	6
   226  0005                     _PORTA	set	5
   227  001B                     _CCPR2L	set	27
   228  001A                     _RCREG	set	26
   229  0009                     _PORTEbits	set	9
   230  0010                     _T1CONbits	set	16
   231  0006                     _PORTBbits	set	6
   232  000E                     _TMR1L	set	14
   233  000F                     _TMR1H	set	15
   234  000C                     _PIR1bits	set	12
   235  001F                     _ADCON0bits	set	31
   236  000B                     _INTCONbits	set	11
   237  0081                     _OPTION_REGbits	set	129
   238  0098                     _TXSTAbits	set	152
   239  0099                     _SPBRG	set	153
   240  0092                     _PR2	set	146
   241  009F                     _ADCON1bits	set	159
   242  0096                     _IOCBbits	set	150
   243  008C                     _PIE1bits	set	140
   244  008F                     _OSCCONbits	set	143
   245  0089                     _TRISE	set	137
   246  0088                     _TRISD	set	136
   247  0087                     _TRISC	set	135
   248  0086                     _TRISB	set	134
   249  0085                     _TRISA	set	133
   250  010C                     _EEDAT	set	268
   251  010D                     _EEADR	set	269
   252  018D                     _EECON2	set	397
   253  018C                     _EECON1bits	set	396
   254  0189                     _ANSELH	set	393
   255  0188                     _ANSEL	set	392
   256                           
   257                           	psect	cinit
   258  0011                     start_initialization:	
   259                           ; #config settings
   260                           
   261  0011                     __initialization:
   262                           
   263                           ; Clear objects allocated to COMMON
   264  0011  01F6               	clrf	__pbssCOMMON& (0+127)
   265  0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   266                           
   267                           ; Clear objects allocated to BANK0
   268  0013  1283               	bcf	3,5	;RP0=0, select bank0
   269  0014  1303               	bcf	3,6	;RP1=0, select bank0
   270  0015  01AB               	clrf	__pbssBANK0& (0+127)
   271  0016  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   272  0017  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   273  0018  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   274  0019  01AF               	clrf	(__pbssBANK0+4)& (0+127)
   275  001A  01B0               	clrf	(__pbssBANK0+5)& (0+127)
   276  001B  01B1               	clrf	(__pbssBANK0+6)& (0+127)
   277  001C  01B2               	clrf	(__pbssBANK0+7)& (0+127)
   278  001D                     end_of_initialization:	
   279                           ;End of C runtime variable initialization code
   280                           
   281  001D                     __end_of__initialization:
   282  001D  0183               	clrf	3
   283  001E  120A  118A  2937   	ljmp	_main	;jump to C main() function
   284                           
   285                           	psect	bssCOMMON
   286  0076                     __pbssCOMMON:
   287  0076                     _datEEPROM:
   288  0076                     	ds	1
   289  0077                     _SERVINDIC:
   290  0077                     	ds	1
   291                           
   292                           	psect	bssBANK0
   293  002B                     __pbssBANK0:
   294  002B                     _posicion:
   295  002B                     	ds	1
   296  002C                     _EXTREC:
   297  002C                     	ds	1
   298  002D                     _POT4:
   299  002D                     	ds	1
   300  002E                     _POT3:
   301  002E                     	ds	1
   302  002F                     _POT2:
   303  002F                     	ds	1
   304  0030                     _POT1:
   305  0030                     	ds	1
   306  0031                     _UART:
   307  0031                     	ds	1
   308  0032                     _SERVOS:
   309  0032                     	ds	1
   310                           
   311                           	psect	cstackCOMMON
   312  0070                     __pcstackCOMMON:
   313  0070                     ?_servos:
   314  0070                     ??_servos:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ?_configuraciones:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_send1dato:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_leer3SEG:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_guardar3SEG:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_AnalogReadServo:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_rutInter:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_main:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_guardarservos:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_leerposiciones:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_leerSERVOS:	
   345                           ; 1 bytes @ 0x0
   346                           
   347                           
   348                           ; 1 bytes @ 0x0
   349  0070                     	ds	2
   350  0072                     ??_rutInter:
   351                           
   352                           ; 1 bytes @ 0x2
   353  0072                     	ds	4
   354  0076                     ??_configuraciones:
   355  0076                     ??_send1dato:	
   356                           ; 1 bytes @ 0x6
   357                           
   358  0076                     ??_guardarposiciones:	
   359                           ; 1 bytes @ 0x6
   360                           
   361  0076                     ??_leerposiciones:	
   362                           ; 1 bytes @ 0x6
   363                           
   364                           
   365                           	psect	cstackBANK0
   366  0020                     __pcstackBANK0:	
   367                           ; 1 bytes @ 0x6
   368                           
   369  0020                     ??_AnalogReadServo:
   370  0020                     ?_guardarposiciones:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0020                     send1dato@dato:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0020                     guardarposiciones@direccion:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0020                     leerposiciones@direccion:	
   380                           ; 1 bytes @ 0x0
   381                           
   382                           
   383                           ; 1 bytes @ 0x0
   384  0020                     	ds	1
   385  0021                     ??_leerSERVOS:
   386  0021                     guardarposiciones@guardar:	
   387                           ; 1 bytes @ 0x1
   388                           
   389                           
   390                           ; 1 bytes @ 0x1
   391  0021                     	ds	1
   392  0022                     ??_guardarservos:
   393                           
   394                           ; 1 bytes @ 0x2
   395  0022                     	ds	1
   396  0023                     leerSERVOS@desfase:
   397                           
   398                           ; 1 bytes @ 0x3
   399  0023                     	ds	1
   400  0024                     guardarservos@desfase:
   401  0024                     leerSERVOS@n:	
   402                           ; 1 bytes @ 0x4
   403                           
   404                           
   405                           ; 1 bytes @ 0x4
   406  0024                     	ds	1
   407  0025                     ??_leer3SEG:
   408  0025                     guardarservos@n:	
   409                           ; 1 bytes @ 0x5
   410                           
   411                           
   412                           ; 1 bytes @ 0x5
   413  0025                     	ds	1
   414  0026                     ??_guardar3SEG:
   415                           
   416                           ; 1 bytes @ 0x6
   417  0026                     	ds	2
   418  0028                     ??_main:
   419                           
   420                           ; 1 bytes @ 0x8
   421  0028                     	ds	3
   422                           
   423                           	psect	maintext
   424  0137                     __pmaintext:	
   425 ;;
   426 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   427 ;;
   428 ;; *************** function _main *****************
   429 ;; Defined at:
   430 ;;		line 130 in file "mainP2.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : B00/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   444 ;;      Params:         0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0
   446 ;;      Temps:          0       3       0       0       0
   447 ;;      Totals:         0       3       0       0       0
   448 ;;Total ram usage:        3 bytes
   449 ;; Hardware stack levels required when called:    5
   450 ;; This function calls:
   451 ;;		_AnalogReadServo
   452 ;;		_configuraciones
   453 ;;		_guardar3SEG
   454 ;;		_leer3SEG
   455 ;;		_send1dato
   456 ;; This function is called by:
   457 ;;		Startup code after reset
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           
   462                           ;psect for function _main
   463  0137                     _main:
   464  0137                     l2093:	
   465                           ;incstack = 0
   466                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   467                           
   468                           
   469                           ;mainP2.c: 131:     configuraciones();
   470  0137  120A  118A  20C2  120A  118A  	fcall	_configuraciones
   471  013C  298C               	goto	l2123
   472  013D                     l135:	
   473                           ;mainP2.c: 135:             case 0:
   474                           
   475                           
   476                           ;mainP2.c: 136:                 PORTBbits.RB7 = 0;
   477  013D  1386               	bcf	6,7	;volatile
   478                           
   479                           ;mainP2.c: 138:                 if(UART.datorecep){
   480  013E  1C31               	btfss	_UART,0
   481  013F  2941               	goto	u851
   482  0140  2942               	goto	u850
   483  0141                     u851:
   484  0141  296F               	goto	l136
   485  0142                     u850:
   486  0142  295B               	goto	l2113
   487  0143                     l138:	
   488                           ;mainP2.c: 140:                         case '1':
   489                           
   490                           
   491                           ;mainP2.c: 141:                             T1CONbits.TMR1ON = 1;
   492  0143  1410               	bsf	16,0	;volatile
   493                           
   494                           ;mainP2.c: 142:                             PORTEbits.RE0 = 1;
   495  0144  1409               	bsf	9,0	;volatile
   496  0145                     l2097:
   497                           
   498                           ;mainP2.c: 143:                             EXTREC = 0;
   499  0145  1283               	bcf	3,5	;RP0=0, select bank0
   500  0146  1303               	bcf	3,6	;RP1=0, select bank0
   501  0147  01AC               	clrf	_EXTREC
   502                           
   503                           ;mainP2.c: 144:                             break;
   504  0148  296E               	goto	l139
   505  0149                     l2099:
   506                           
   507                           ;mainP2.c: 146:                             CCPR2L = 0xFF;
   508  0149  30FF               	movlw	255
   509  014A  009B               	movwf	27	;volatile
   510  014B                     l2101:
   511                           
   512                           ;mainP2.c: 147:                             send1dato('b');
   513  014B  3062               	movlw	98
   514  014C  120A  118A  239B  120A  118A  	fcall	_send1dato
   515  0151  2945               	goto	l2097
   516  0152                     l2105:
   517                           
   518                           ;mainP2.c: 151:                             CCPR2L = 0x0F;
   519  0152  300F               	movlw	15
   520  0153  009B               	movwf	27	;volatile
   521  0154                     l2107:
   522                           
   523                           ;mainP2.c: 152:                             send1dato('c');
   524  0154  3063               	movlw	99
   525  0155  120A  118A  239B  120A  118A  	fcall	_send1dato
   526  015A  2945               	goto	l2097
   527  015B                     l2113:
   528  015B  082C               	movf	_EXTREC,w
   529  015C  00A8               	movwf	??_main
   530  015D  01A9               	clrf	??_main+1
   531                           
   532                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   533                           ; Switch size 1, requested type "simple"
   534                           ; Number of cases is 1, Range of values is 0 to 0
   535                           ; switch strategies available:
   536                           ; Name         Instructions Cycles
   537                           ; simple_byte            4     3 (average)
   538                           ; direct_byte           11     8 (fixed)
   539                           ; jumptable            260     6 (fixed)
   540                           ;	Chosen strategy is simple_byte
   541  015E  0829               	movf	??_main+1,w
   542  015F  3A00               	xorlw	0	; case 0
   543  0160  1903               	skipnz
   544  0161  2963               	goto	l2293
   545  0162  296E               	goto	l139
   546  0163                     l2293:
   547                           
   548                           ; Switch size 1, requested type "simple"
   549                           ; Number of cases is 3, Range of values is 49 to 51
   550                           ; switch strategies available:
   551                           ; Name         Instructions Cycles
   552                           ; simple_byte           10     6 (average)
   553                           ; direct_byte           20    11 (fixed)
   554                           ; jumptable            263     9 (fixed)
   555                           ;	Chosen strategy is simple_byte
   556  0163  0828               	movf	??_main,w
   557  0164  3A31               	xorlw	49	; case 49
   558  0165  1903               	skipnz
   559  0166  2943               	goto	l138
   560  0167  3A03               	xorlw	3	; case 50
   561  0168  1903               	skipnz
   562  0169  2949               	goto	l2099
   563  016A  3A01               	xorlw	1	; case 51
   564  016B  1903               	skipnz
   565  016C  2952               	goto	l2105
   566  016D  296E               	goto	l139
   567  016E                     l139:
   568                           
   569                           ;mainP2.c: 159:                     UART.datorecep = 0;
   570  016E  1031               	bcf	_UART,0
   571  016F                     l136:	
   572                           ;mainP2.c: 160:                 }
   573                           
   574                           
   575                           ;mainP2.c: 162:                 if(T1CONbits.TMR1ON){
   576  016F  1C10               	btfss	16,0	;volatile
   577  0170  2972               	goto	u861
   578  0171  2973               	goto	u860
   579  0172                     u861:
   580  0172  298C               	goto	l134
   581  0173                     u860:
   582  0173                     l2115:
   583                           
   584                           ;mainP2.c: 163:                     leer3SEG();
   585  0173  120A  118A  2315  120A  118A  	fcall	_leer3SEG
   586  0178  298C               	goto	l2123
   587  0179                     l145:	
   588                           ;mainP2.c: 167:             case 1:
   589                           
   590                           
   591                           ;mainP2.c: 168:                 PORTBbits.RB7 = 1;
   592  0179  1786               	bsf	6,7	;volatile
   593                           
   594                           ;mainP2.c: 170:                 if(SERVOS.guardar){
   595  017A  1FB2               	btfss	_SERVOS,7
   596  017B  297D               	goto	u871
   597  017C  297E               	goto	u870
   598  017D                     u871:
   599  017D  2986               	goto	l146
   600  017E                     u870:
   601  017E                     l2117:
   602                           
   603                           ;mainP2.c: 171:                     guardar3SEG();
   604  017E  120A  118A  2342  120A  118A  	fcall	_guardar3SEG
   605  0183                     l2119:
   606                           
   607                           ;mainP2.c: 172:                     SERVOS.guardar = 0;
   608  0183  1283               	bcf	3,5	;RP0=0, select bank0
   609  0184  1303               	bcf	3,6	;RP1=0, select bank0
   610  0185  13B2               	bcf	_SERVOS,7
   611  0186                     l146:	
   612                           ;mainP2.c: 173:                 }
   613                           
   614                           
   615                           ;mainP2.c: 175:                 AnalogReadServo();
   616  0186  120A  118A  2021  120A  118A  	fcall	_AnalogReadServo
   617                           
   618                           ;mainP2.c: 176:                 break;
   619  018B  298C               	goto	l2123
   620  018C                     l134:
   621  018C                     l2123:
   622  018C  1283               	bcf	3,5	;RP0=0, select bank0
   623  018D  1303               	bcf	3,6	;RP1=0, select bank0
   624  018E  0E32               	swapf	_SERVOS,w
   625  018F  00A8               	movwf	??_main
   626  0190  0CA8               	rrf	??_main,f
   627  0191  0C28               	rrf	??_main,w
   628  0192  3901               	andlw	1
   629  0193  00A9               	movwf	??_main+1
   630  0194  01AA               	clrf	??_main+2
   631                           
   632                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   633                           ; Switch size 1, requested type "simple"
   634                           ; Number of cases is 1, Range of values is 0 to 0
   635                           ; switch strategies available:
   636                           ; Name         Instructions Cycles
   637                           ; simple_byte            4     3 (average)
   638                           ; direct_byte           11     8 (fixed)
   639                           ; jumptable            260     6 (fixed)
   640                           ;	Chosen strategy is simple_byte
   641  0195  082A               	movf	??_main+2,w
   642  0196  3A00               	xorlw	0	; case 0
   643  0197  1903               	skipnz
   644  0198  299A               	goto	l2295
   645  0199  298C               	goto	l2123
   646  019A                     l2295:
   647                           
   648                           ; Switch size 1, requested type "simple"
   649                           ; Number of cases is 2, Range of values is 0 to 1
   650                           ; switch strategies available:
   651                           ; Name         Instructions Cycles
   652                           ; simple_byte            7     4 (average)
   653                           ; direct_byte           14     8 (fixed)
   654                           ; jumptable            260     6 (fixed)
   655                           ;	Chosen strategy is simple_byte
   656  019A  0829               	movf	??_main+1,w
   657  019B  3A00               	xorlw	0	; case 0
   658  019C  1903               	skipnz
   659  019D  293D               	goto	l135
   660  019E  3A01               	xorlw	1	; case 1
   661  019F  1903               	skipnz
   662  01A0  2979               	goto	l145
   663  01A1  298C               	goto	l2123
   664  01A2  120A  118A  280E   	ljmp	start
   665  01A5                     __end_of_main:
   666                           
   667                           	psect	text1
   668  0315                     __ptext1:	
   669 ;; *************** function _leer3SEG *****************
   670 ;; Defined at:
   671 ;;		line 420 in file "mainP2.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   685 ;;      Params:         0       0       0       0       0
   686 ;;      Locals:         0       0       0       0       0
   687 ;;      Temps:          0       2       0       0       0
   688 ;;      Totals:         0       2       0       0       0
   689 ;;Total ram usage:        2 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; Hardware stack levels required when called:    4
   692 ;; This function calls:
   693 ;;		_leerSERVOS
   694 ;;		_send1dato
   695 ;; This function is called by:
   696 ;;		_main
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           
   701                           ;psect for function _leer3SEG
   702  0315                     _leer3SEG:
   703  0315                     l2011:	
   704                           ;incstack = 0
   705                           ; Regs used in _leer3SEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   706                           
   707                           
   708                           ;mainP2.c: 421:     switch(posicion){
   709  0315  2B32               	goto	l2021
   710  0316                     l242:	
   711                           ;mainP2.c: 422:         case 31:
   712                           
   713                           
   714                           ;mainP2.c: 423:             T1CONbits.TMR1ON = 0;
   715  0316  1010               	bcf	16,0	;volatile
   716  0317                     l2013:
   717                           
   718                           ;mainP2.c: 424:             TMR1H = 0;
   719  0317  018F               	clrf	15	;volatile
   720                           
   721                           ;mainP2.c: 425:             TMR1L = 0;
   722  0318  018E               	clrf	14	;volatile
   723                           
   724                           ;mainP2.c: 426:             posicion = 0;
   725  0319  01AB               	clrf	_posicion
   726                           
   727                           ;mainP2.c: 427:             PORTE = 0;
   728  031A  0189               	clrf	9	;volatile
   729  031B                     l2015:
   730                           
   731                           ;mainP2.c: 428:             send1dato('a');
   732  031B  3061               	movlw	97
   733  031C  120A  118A  239B  120A  118A  	fcall	_send1dato
   734                           
   735                           ;mainP2.c: 429:             break;
   736  0321  2B41               	goto	l245
   737  0322                     l2017:
   738                           
   739                           ;mainP2.c: 431:             leerSERVOS(4*posicion);
   740  0322  082B               	movf	_posicion,w
   741  0323  00A5               	movwf	??_leer3SEG
   742  0324  3001               	movlw	1
   743  0325                     u745:
   744  0325  1003               	clrc
   745  0326  0DA5               	rlf	??_leer3SEG,f
   746  0327  3EFF               	addlw	-1
   747  0328  1D03               	skipz
   748  0329  2B25               	goto	u745
   749  032A  1003               	clrc
   750  032B  0D25               	rlf	??_leer3SEG,w
   751  032C  120A  118A  2213  120A  118A  	fcall	_leerSERVOS
   752                           
   753                           ;mainP2.c: 432:             break;
   754  0331  2B41               	goto	l245
   755  0332                     l2021:
   756  0332  1283               	bcf	3,5	;RP0=0, select bank0
   757  0333  1303               	bcf	3,6	;RP1=0, select bank0
   758  0334  082B               	movf	_posicion,w
   759  0335  00A5               	movwf	??_leer3SEG
   760  0336  01A6               	clrf	??_leer3SEG+1
   761                           
   762                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   763                           ; Switch size 1, requested type "simple"
   764                           ; Number of cases is 1, Range of values is 0 to 0
   765                           ; switch strategies available:
   766                           ; Name         Instructions Cycles
   767                           ; simple_byte            4     3 (average)
   768                           ; direct_byte           11     8 (fixed)
   769                           ; jumptable            260     6 (fixed)
   770                           ;	Chosen strategy is simple_byte
   771  0337  0826               	movf	??_leer3SEG+1,w
   772  0338  3A00               	xorlw	0	; case 0
   773  0339  1903               	skipnz
   774  033A  2B3C               	goto	l2297
   775  033B  2B22               	goto	l2017
   776  033C                     l2297:
   777                           
   778                           ; Switch size 1, requested type "simple"
   779                           ; Number of cases is 1, Range of values is 31 to 31
   780                           ; switch strategies available:
   781                           ; Name         Instructions Cycles
   782                           ; simple_byte            4     3 (average)
   783                           ; direct_byte           14    11 (fixed)
   784                           ; jumptable            263     9 (fixed)
   785                           ;	Chosen strategy is simple_byte
   786  033C  0825               	movf	??_leer3SEG,w
   787  033D  3A1F               	xorlw	31	; case 31
   788  033E  1903               	skipnz
   789  033F  2B16               	goto	l242
   790  0340  2B22               	goto	l2017
   791  0341                     l245:
   792  0341  0008               	return
   793  0342                     __end_of_leer3SEG:
   794                           
   795                           	psect	text2
   796  039B                     __ptext2:	
   797 ;; *************** function _send1dato *****************
   798 ;; Defined at:
   799 ;;		line 349 in file "mainP2.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  dato            1    wreg     unsigned char 
   802 ;; Auto vars:     Size  Location     Type
   803 ;;  dato            1    0[BANK0 ] unsigned char 
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   813 ;;      Params:         0       0       0       0       0
   814 ;;      Locals:         0       1       0       0       0
   815 ;;      Temps:          0       0       0       0       0
   816 ;;      Totals:         0       1       0       0       0
   817 ;;Total ram usage:        1 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    2
   820 ;; This function calls:
   821 ;;		Nothing
   822 ;; This function is called by:
   823 ;;		_main
   824 ;;		_leer3SEG
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           
   829                           ;psect for function _send1dato
   830  039B                     _send1dato:
   831                           
   832                           ;incstack = 0
   833                           ; Regs used in _send1dato: [wreg]
   834                           ;send1dato@dato stored from wreg
   835  039B  1283               	bcf	3,5	;RP0=0, select bank0
   836  039C  1303               	bcf	3,6	;RP1=0, select bank0
   837  039D  00A0               	movwf	send1dato@dato
   838  039E                     l1957:
   839                           
   840                           ;mainP2.c: 350:     TXREG = dato;
   841  039E  0820               	movf	send1dato@dato,w
   842  039F  0099               	movwf	25	;volatile
   843  03A0                     l194:	
   844                           ;mainP2.c: 351:     while(!TXSTAbits.TRMT);
   845                           
   846  03A0  1683               	bsf	3,5	;RP0=1, select bank1
   847  03A1  1303               	bcf	3,6	;RP1=0, select bank1
   848  03A2  1C98               	btfss	24,1	;volatile
   849  03A3  2BA5               	goto	u711
   850  03A4  2BA6               	goto	u710
   851  03A5                     u711:
   852  03A5  2BA0               	goto	l194
   853  03A6                     u710:
   854  03A6                     l197:
   855  03A6  0008               	return
   856  03A7                     __end_of_send1dato:
   857                           
   858                           	psect	text3
   859  0213                     __ptext3:	
   860 ;; *************** function _leerSERVOS *****************
   861 ;; Defined at:
   862 ;;		line 390 in file "mainP2.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  desfase         1    wreg     unsigned char 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  desfase         1    3[BANK0 ] unsigned char 
   867 ;;  n               1    4[BANK0 ] unsigned char 
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   877 ;;      Params:         0       0       0       0       0
   878 ;;      Locals:         0       2       0       0       0
   879 ;;      Temps:          0       2       0       0       0
   880 ;;      Totals:         0       4       0       0       0
   881 ;;Total ram usage:        4 bytes
   882 ;; Hardware stack levels used:    1
   883 ;; Hardware stack levels required when called:    3
   884 ;; This function calls:
   885 ;;		_leerposiciones
   886 ;; This function is called by:
   887 ;;		_leer3SEG
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           
   892                           ;psect for function _leerSERVOS
   893  0213                     _leerSERVOS:
   894                           
   895                           ;incstack = 0
   896                           ; Regs used in _leerSERVOS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   897                           ;leerSERVOS@desfase stored from wreg
   898  0213  1283               	bcf	3,5	;RP0=0, select bank0
   899  0214  1303               	bcf	3,6	;RP1=0, select bank0
   900  0215  00A3               	movwf	leerSERVOS@desfase
   901  0216                     l1985:
   902                           
   903                           ;mainP2.c: 391:     for(uint8_t n=0;n<=3; n++){
   904  0216  01A4               	clrf	leerSERVOS@n
   905  0217  2A4C               	goto	l2001
   906  0218                     l1991:
   907  0218  0823               	movf	leerSERVOS@desfase,w
   908  0219  0724               	addwf	leerSERVOS@n,w
   909  021A  120A  118A  238C  120A  118A  	fcall	_leerposiciones
   910  021F  1283               	bcf	3,5	;RP0=0, select bank0
   911  0220  1303               	bcf	3,6	;RP1=0, select bank0
   912  0221  00A1               	movwf	??_leerSERVOS
   913  0222  0821               	movf	??_leerSERVOS,w
   914  0223  00B0               	movwf	_POT1
   915                           
   916                           ;mainP2.c: 394:                 break;
   917  0224  2A62               	goto	l2003
   918  0225                     l1993:
   919  0225  0823               	movf	leerSERVOS@desfase,w
   920  0226  0724               	addwf	leerSERVOS@n,w
   921  0227  120A  118A  238C  120A  118A  	fcall	_leerposiciones
   922  022C  1283               	bcf	3,5	;RP0=0, select bank0
   923  022D  1303               	bcf	3,6	;RP1=0, select bank0
   924  022E  00A1               	movwf	??_leerSERVOS
   925  022F  0821               	movf	??_leerSERVOS,w
   926  0230  00AF               	movwf	_POT2
   927                           
   928                           ;mainP2.c: 396:                 break;
   929  0231  2A62               	goto	l2003
   930  0232                     l1995:
   931  0232  0823               	movf	leerSERVOS@desfase,w
   932  0233  0724               	addwf	leerSERVOS@n,w
   933  0234  120A  118A  238C  120A  118A  	fcall	_leerposiciones
   934  0239  1283               	bcf	3,5	;RP0=0, select bank0
   935  023A  1303               	bcf	3,6	;RP1=0, select bank0
   936  023B  00A1               	movwf	??_leerSERVOS
   937  023C  0821               	movf	??_leerSERVOS,w
   938  023D  00AE               	movwf	_POT3
   939                           
   940                           ;mainP2.c: 398:                 break;
   941  023E  2A62               	goto	l2003
   942  023F                     l1997:
   943  023F  0823               	movf	leerSERVOS@desfase,w
   944  0240  0724               	addwf	leerSERVOS@n,w
   945  0241  120A  118A  238C  120A  118A  	fcall	_leerposiciones
   946  0246  1283               	bcf	3,5	;RP0=0, select bank0
   947  0247  1303               	bcf	3,6	;RP1=0, select bank0
   948  0248  00A1               	movwf	??_leerSERVOS
   949  0249  0821               	movf	??_leerSERVOS,w
   950  024A  00AD               	movwf	_POT4
   951                           
   952                           ;mainP2.c: 400:                 break;
   953  024B  2A62               	goto	l2003
   954  024C                     l2001:
   955  024C  0824               	movf	leerSERVOS@n,w
   956  024D  00A1               	movwf	??_leerSERVOS
   957  024E  01A2               	clrf	??_leerSERVOS+1
   958                           
   959                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   960                           ; Switch size 1, requested type "simple"
   961                           ; Number of cases is 1, Range of values is 0 to 0
   962                           ; switch strategies available:
   963                           ; Name         Instructions Cycles
   964                           ; simple_byte            4     3 (average)
   965                           ; direct_byte           11     8 (fixed)
   966                           ; jumptable            260     6 (fixed)
   967                           ;	Chosen strategy is simple_byte
   968  024F  0822               	movf	??_leerSERVOS+1,w
   969  0250  3A00               	xorlw	0	; case 0
   970  0251  1903               	skipnz
   971  0252  2A54               	goto	l2299
   972  0253  2A62               	goto	l2003
   973  0254                     l2299:
   974                           
   975                           ; Switch size 1, requested type "simple"
   976                           ; Number of cases is 4, Range of values is 0 to 3
   977                           ; switch strategies available:
   978                           ; Name         Instructions Cycles
   979                           ; simple_byte           13     7 (average)
   980                           ; direct_byte           20     8 (fixed)
   981                           ; jumptable            260     6 (fixed)
   982                           ;	Chosen strategy is simple_byte
   983  0254  0821               	movf	??_leerSERVOS,w
   984  0255  3A00               	xorlw	0	; case 0
   985  0256  1903               	skipnz
   986  0257  2A18               	goto	l1991
   987  0258  3A01               	xorlw	1	; case 1
   988  0259  1903               	skipnz
   989  025A  2A25               	goto	l1993
   990  025B  3A03               	xorlw	3	; case 2
   991  025C  1903               	skipnz
   992  025D  2A32               	goto	l1995
   993  025E  3A01               	xorlw	1	; case 3
   994  025F  1903               	skipnz
   995  0260  2A3F               	goto	l1997
   996  0261  2A62               	goto	l2003
   997  0262                     l2003:
   998                           
   999                           ;mainP2.c: 402:     }
  1000  0262  3001               	movlw	1
  1001  0263  00A1               	movwf	??_leerSERVOS
  1002  0264  0821               	movf	??_leerSERVOS,w
  1003  0265  07A4               	addwf	leerSERVOS@n,f
  1004  0266                     l2005:
  1005  0266  3004               	movlw	4
  1006  0267  0224               	subwf	leerSERVOS@n,w
  1007  0268  1C03               	skipc
  1008  0269  2A6B               	goto	u731
  1009  026A  2A6C               	goto	u730
  1010  026B                     u731:
  1011  026B  2A4C               	goto	l2001
  1012  026C                     u730:
  1013  026C                     l231:
  1014  026C  0008               	return
  1015  026D                     __end_of_leerSERVOS:
  1016                           
  1017                           	psect	text4
  1018  038C                     __ptext4:	
  1019 ;; *************** function _leerposiciones *****************
  1020 ;; Defined at:
  1021 ;;		line 383 in file "mainP2.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  direccion       1    wreg     unsigned char 
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  direccion       1    0[BANK0 ] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      unsigned char 
  1028 ;; Registers used:
  1029 ;;		wreg
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1035 ;;      Params:         0       0       0       0       0
  1036 ;;      Locals:         0       1       0       0       0
  1037 ;;      Temps:          0       0       0       0       0
  1038 ;;      Totals:         0       1       0       0       0
  1039 ;;Total ram usage:        1 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; Hardware stack levels required when called:    2
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_leerSERVOS
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           
  1050                           ;psect for function _leerposiciones
  1051  038C                     _leerposiciones:
  1052                           
  1053                           ;incstack = 0
  1054                           ; Regs used in _leerposiciones: [wreg]
  1055                           ;leerposiciones@direccion stored from wreg
  1056  038C  1283               	bcf	3,5	;RP0=0, select bank0
  1057  038D  1303               	bcf	3,6	;RP1=0, select bank0
  1058  038E  00A0               	movwf	leerposiciones@direccion
  1059  038F                     l1949:
  1060                           
  1061                           ;mainP2.c: 384:     EEADR = direccion;
  1062  038F  0820               	movf	leerposiciones@direccion,w
  1063  0390  1283               	bcf	3,5	;RP0=0, select bank2
  1064  0391  1703               	bsf	3,6	;RP1=1, select bank2
  1065  0392  008D               	movwf	13	;volatile
  1066  0393                     l1951:
  1067                           
  1068                           ;mainP2.c: 385:     EECON1bits.EEPGD = 0;
  1069  0393  1683               	bsf	3,5	;RP0=1, select bank3
  1070  0394  1703               	bsf	3,6	;RP1=1, select bank3
  1071  0395  138C               	bcf	12,7	;volsfr
  1072  0396                     l1953:
  1073                           
  1074                           ;mainP2.c: 386:     EECON1bits.RD = 1;
  1075  0396  140C               	bsf	12,0	;volsfr
  1076                           
  1077                           ;mainP2.c: 387:     return EEDAT;
  1078  0397  1283               	bcf	3,5	;RP0=0, select bank2
  1079  0398  1703               	bsf	3,6	;RP1=1, select bank2
  1080  0399  080C               	movf	12,w	;volatile
  1081  039A                     l220:
  1082  039A  0008               	return
  1083  039B                     __end_of_leerposiciones:
  1084                           
  1085                           	psect	text5
  1086  0342                     __ptext5:	
  1087 ;; *************** function _guardar3SEG *****************
  1088 ;; Defined at:
  1089 ;;		line 405 in file "mainP2.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1103 ;;      Params:         0       0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0
  1105 ;;      Temps:          0       2       0       0       0
  1106 ;;      Totals:         0       2       0       0       0
  1107 ;;Total ram usage:        2 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; Hardware stack levels required when called:    4
  1110 ;; This function calls:
  1111 ;;		_guardarservos
  1112 ;; This function is called by:
  1113 ;;		_main
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           
  1118                           ;psect for function _guardar3SEG
  1119  0342                     _guardar3SEG:
  1120  0342                     l2027:	
  1121                           ;incstack = 0
  1122                           ; Regs used in _guardar3SEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1123                           
  1124                           
  1125                           ;mainP2.c: 406:     switch(posicion){
  1126  0342  2B59               	goto	l2035
  1127  0343                     l235:	
  1128                           ;mainP2.c: 407:         case 31:
  1129                           
  1130                           
  1131                           ;mainP2.c: 408:             T1CONbits.TMR1ON = 0;
  1132  0343  1010               	bcf	16,0	;volatile
  1133  0344                     l2029:
  1134                           
  1135                           ;mainP2.c: 409:             TMR1H = 0;
  1136  0344  018F               	clrf	15	;volatile
  1137                           
  1138                           ;mainP2.c: 410:             TMR1L = 0;
  1139  0345  018E               	clrf	14	;volatile
  1140                           
  1141                           ;mainP2.c: 411:             posicion = 0;
  1142  0346  01AB               	clrf	_posicion
  1143                           
  1144                           ;mainP2.c: 412:             PORTE = 0;
  1145  0347  0189               	clrf	9	;volatile
  1146                           
  1147                           ;mainP2.c: 413:             break;
  1148  0348  2B68               	goto	l238
  1149  0349                     l2031:
  1150                           
  1151                           ;mainP2.c: 415:             guardarservos(4*posicion);
  1152  0349  082B               	movf	_posicion,w
  1153  034A  00A6               	movwf	??_guardar3SEG
  1154  034B  3001               	movlw	1
  1155  034C                     u755:
  1156  034C  1003               	clrc
  1157  034D  0DA6               	rlf	??_guardar3SEG,f
  1158  034E  3EFF               	addlw	-1
  1159  034F  1D03               	skipz
  1160  0350  2B4C               	goto	u755
  1161  0351  1003               	clrc
  1162  0352  0D26               	rlf	??_guardar3SEG,w
  1163  0353  120A  118A  226D  120A  118A  	fcall	_guardarservos
  1164                           
  1165                           ;mainP2.c: 416:             break;
  1166  0358  2B68               	goto	l238
  1167  0359                     l2035:
  1168  0359  1283               	bcf	3,5	;RP0=0, select bank0
  1169  035A  1303               	bcf	3,6	;RP1=0, select bank0
  1170  035B  082B               	movf	_posicion,w
  1171  035C  00A6               	movwf	??_guardar3SEG
  1172  035D  01A7               	clrf	??_guardar3SEG+1
  1173                           
  1174                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1175                           ; Switch size 1, requested type "simple"
  1176                           ; Number of cases is 1, Range of values is 0 to 0
  1177                           ; switch strategies available:
  1178                           ; Name         Instructions Cycles
  1179                           ; simple_byte            4     3 (average)
  1180                           ; direct_byte           11     8 (fixed)
  1181                           ; jumptable            260     6 (fixed)
  1182                           ;	Chosen strategy is simple_byte
  1183  035E  0827               	movf	??_guardar3SEG+1,w
  1184  035F  3A00               	xorlw	0	; case 0
  1185  0360  1903               	skipnz
  1186  0361  2B63               	goto	l2301
  1187  0362  2B49               	goto	l2031
  1188  0363                     l2301:
  1189                           
  1190                           ; Switch size 1, requested type "simple"
  1191                           ; Number of cases is 1, Range of values is 31 to 31
  1192                           ; switch strategies available:
  1193                           ; Name         Instructions Cycles
  1194                           ; simple_byte            4     3 (average)
  1195                           ; direct_byte           14    11 (fixed)
  1196                           ; jumptable            263     9 (fixed)
  1197                           ;	Chosen strategy is simple_byte
  1198  0363  0826               	movf	??_guardar3SEG,w
  1199  0364  3A1F               	xorlw	31	; case 31
  1200  0365  1903               	skipnz
  1201  0366  2B43               	goto	l235
  1202  0367  2B49               	goto	l2031
  1203  0368                     l238:
  1204  0368  0008               	return
  1205  0369                     __end_of_guardar3SEG:
  1206                           
  1207                           	psect	text6
  1208  026D                     __ptext6:	
  1209 ;; *************** function _guardarservos *****************
  1210 ;; Defined at:
  1211 ;;		line 368 in file "mainP2.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;  desfase         1    wreg     unsigned char 
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;  desfase         1    4[BANK0 ] unsigned char 
  1216 ;;  n               1    5[BANK0 ] unsigned char 
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       0       0       0       0
  1227 ;;      Locals:         0       2       0       0       0
  1228 ;;      Temps:          0       2       0       0       0
  1229 ;;      Totals:         0       4       0       0       0
  1230 ;;Total ram usage:        4 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    3
  1233 ;; This function calls:
  1234 ;;		_guardarposiciones
  1235 ;; This function is called by:
  1236 ;;		_guardar3SEG
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           
  1241                           ;psect for function _guardarservos
  1242  026D                     _guardarservos:
  1243                           
  1244                           ;incstack = 0
  1245                           ; Regs used in _guardarservos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1246                           ;guardarservos@desfase stored from wreg
  1247  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1248  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1249  026F  00A4               	movwf	guardarservos@desfase
  1250  0270                     l1959:
  1251                           
  1252                           ;mainP2.c: 369:     for(uint8_t n=0;n<=3;n++){
  1253  0270  01A5               	clrf	guardarservos@n
  1254  0271  2AA2               	goto	l1975
  1255  0272                     l1965:
  1256  0272  0824               	movf	guardarservos@desfase,w
  1257  0273  0725               	addwf	guardarservos@n,w
  1258  0274  00A2               	movwf	??_guardarservos
  1259  0275  0822               	movf	??_guardarservos,w
  1260  0276  00A0               	movwf	guardarposiciones@direccion
  1261  0277  0830               	movf	_POT1,w
  1262  0278  120A  118A  2369  120A  118A  	fcall	_guardarposiciones
  1263                           
  1264                           ;mainP2.c: 372:                 break;
  1265  027D  2AB8               	goto	l1977
  1266  027E                     l1967:
  1267  027E  0824               	movf	guardarservos@desfase,w
  1268  027F  0725               	addwf	guardarservos@n,w
  1269  0280  00A2               	movwf	??_guardarservos
  1270  0281  0822               	movf	??_guardarservos,w
  1271  0282  00A0               	movwf	guardarposiciones@direccion
  1272  0283  082F               	movf	_POT2,w
  1273  0284  120A  118A  2369  120A  118A  	fcall	_guardarposiciones
  1274                           
  1275                           ;mainP2.c: 374:                 break;
  1276  0289  2AB8               	goto	l1977
  1277  028A                     l1969:
  1278  028A  0824               	movf	guardarservos@desfase,w
  1279  028B  0725               	addwf	guardarservos@n,w
  1280  028C  00A2               	movwf	??_guardarservos
  1281  028D  0822               	movf	??_guardarservos,w
  1282  028E  00A0               	movwf	guardarposiciones@direccion
  1283  028F  082E               	movf	_POT3,w
  1284  0290  120A  118A  2369  120A  118A  	fcall	_guardarposiciones
  1285                           
  1286                           ;mainP2.c: 376:                 break;
  1287  0295  2AB8               	goto	l1977
  1288  0296                     l1971:
  1289  0296  0824               	movf	guardarservos@desfase,w
  1290  0297  0725               	addwf	guardarservos@n,w
  1291  0298  00A2               	movwf	??_guardarservos
  1292  0299  0822               	movf	??_guardarservos,w
  1293  029A  00A0               	movwf	guardarposiciones@direccion
  1294  029B  082D               	movf	_POT4,w
  1295  029C  120A  118A  2369  120A  118A  	fcall	_guardarposiciones
  1296                           
  1297                           ;mainP2.c: 378:                 break;
  1298  02A1  2AB8               	goto	l1977
  1299  02A2                     l1975:
  1300  02A2  0825               	movf	guardarservos@n,w
  1301  02A3  00A2               	movwf	??_guardarservos
  1302  02A4  01A3               	clrf	??_guardarservos+1
  1303                           
  1304                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1305                           ; Switch size 1, requested type "simple"
  1306                           ; Number of cases is 1, Range of values is 0 to 0
  1307                           ; switch strategies available:
  1308                           ; Name         Instructions Cycles
  1309                           ; simple_byte            4     3 (average)
  1310                           ; direct_byte           11     8 (fixed)
  1311                           ; jumptable            260     6 (fixed)
  1312                           ;	Chosen strategy is simple_byte
  1313  02A5  0823               	movf	??_guardarservos+1,w
  1314  02A6  3A00               	xorlw	0	; case 0
  1315  02A7  1903               	skipnz
  1316  02A8  2AAA               	goto	l2303
  1317  02A9  2AB8               	goto	l1977
  1318  02AA                     l2303:
  1319                           
  1320                           ; Switch size 1, requested type "simple"
  1321                           ; Number of cases is 4, Range of values is 0 to 3
  1322                           ; switch strategies available:
  1323                           ; Name         Instructions Cycles
  1324                           ; simple_byte           13     7 (average)
  1325                           ; direct_byte           20     8 (fixed)
  1326                           ; jumptable            260     6 (fixed)
  1327                           ;	Chosen strategy is simple_byte
  1328  02AA  0822               	movf	??_guardarservos,w
  1329  02AB  3A00               	xorlw	0	; case 0
  1330  02AC  1903               	skipnz
  1331  02AD  2A72               	goto	l1965
  1332  02AE  3A01               	xorlw	1	; case 1
  1333  02AF  1903               	skipnz
  1334  02B0  2A7E               	goto	l1967
  1335  02B1  3A03               	xorlw	3	; case 2
  1336  02B2  1903               	skipnz
  1337  02B3  2A8A               	goto	l1969
  1338  02B4  3A01               	xorlw	1	; case 3
  1339  02B5  1903               	skipnz
  1340  02B6  2A96               	goto	l1971
  1341  02B7  2AB8               	goto	l1977
  1342  02B8                     l1977:
  1343                           
  1344                           ;mainP2.c: 380:     }
  1345  02B8  3001               	movlw	1
  1346  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  1347  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  1348  02BB  00A2               	movwf	??_guardarservos
  1349  02BC  0822               	movf	??_guardarservos,w
  1350  02BD  07A5               	addwf	guardarservos@n,f
  1351  02BE                     l1979:
  1352  02BE  3004               	movlw	4
  1353  02BF  0225               	subwf	guardarservos@n,w
  1354  02C0  1C03               	skipc
  1355  02C1  2AC3               	goto	u721
  1356  02C2  2AC4               	goto	u720
  1357  02C3                     u721:
  1358  02C3  2AA2               	goto	l1975
  1359  02C4                     u720:
  1360  02C4                     l217:
  1361  02C4  0008               	return
  1362  02C5                     __end_of_guardarservos:
  1363                           
  1364                           	psect	text7
  1365  0369                     __ptext7:	
  1366 ;; *************** function _guardarposiciones *****************
  1367 ;; Defined at:
  1368 ;;		line 354 in file "mainP2.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  guardar         1    wreg     unsigned char 
  1371 ;;  direccion       1    0[BANK0 ] unsigned char 
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  guardar         1    1[BANK0 ] unsigned char 
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      void 
  1376 ;; Registers used:
  1377 ;;		wreg
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1383 ;;      Params:         0       1       0       0       0
  1384 ;;      Locals:         0       1       0       0       0
  1385 ;;      Temps:          0       0       0       0       0
  1386 ;;      Totals:         0       2       0       0       0
  1387 ;;Total ram usage:        2 bytes
  1388 ;; Hardware stack levels used:    1
  1389 ;; Hardware stack levels required when called:    2
  1390 ;; This function calls:
  1391 ;;		Nothing
  1392 ;; This function is called by:
  1393 ;;		_guardarservos
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           
  1398                           ;psect for function _guardarposiciones
  1399  0369                     _guardarposiciones:
  1400                           
  1401                           ;incstack = 0
  1402                           ; Regs used in _guardarposiciones: [wreg]
  1403                           ;guardarposiciones@guardar stored from wreg
  1404  0369  1283               	bcf	3,5	;RP0=0, select bank0
  1405  036A  1303               	bcf	3,6	;RP1=0, select bank0
  1406  036B  00A1               	movwf	guardarposiciones@guardar
  1407  036C                     l1937:
  1408                           
  1409                           ;mainP2.c: 355:     EEADR = direccion;
  1410  036C  0820               	movf	guardarposiciones@direccion,w
  1411  036D  1283               	bcf	3,5	;RP0=0, select bank2
  1412  036E  1703               	bsf	3,6	;RP1=1, select bank2
  1413  036F  008D               	movwf	13	;volatile
  1414                           
  1415                           ;mainP2.c: 356:     EEDAT = guardar;
  1416  0370  1283               	bcf	3,5	;RP0=0, select bank0
  1417  0371  1303               	bcf	3,6	;RP1=0, select bank0
  1418  0372  0821               	movf	guardarposiciones@guardar,w
  1419  0373  1283               	bcf	3,5	;RP0=0, select bank2
  1420  0374  1703               	bsf	3,6	;RP1=1, select bank2
  1421  0375  008C               	movwf	12	;volatile
  1422  0376                     l1939:
  1423                           
  1424                           ;mainP2.c: 357:     EECON1bits.WREN = 1;
  1425  0376  1683               	bsf	3,5	;RP0=1, select bank3
  1426  0377  1703               	bsf	3,6	;RP1=1, select bank3
  1427  0378  150C               	bsf	12,2	;volsfr
  1428  0379                     l1941:
  1429                           
  1430                           ;mainP2.c: 358:     INTCONbits.GIE = 0;
  1431  0379  138B               	bcf	11,7	;volatile
  1432  037A                     l200:	
  1433                           ;mainP2.c: 359:     while(INTCONbits.GIE);
  1434                           
  1435  037A  1B8B               	btfsc	11,7	;volatile
  1436  037B  2B7D               	goto	u691
  1437  037C  2B7E               	goto	u690
  1438  037D                     u691:
  1439  037D  2B7A               	goto	l200
  1440  037E                     u690:
  1441  037E                     l1943:
  1442                           
  1443                           ;mainP2.c: 360:     EECON2 = 0X55;
  1444  037E  3055               	movlw	85
  1445  037F  1683               	bsf	3,5	;RP0=1, select bank3
  1446  0380  1703               	bsf	3,6	;RP1=1, select bank3
  1447  0381  008D               	movwf	13	;volsfr
  1448                           
  1449                           ;mainP2.c: 361:     EECON2 = 0XAA;
  1450  0382  30AA               	movlw	170
  1451  0383  008D               	movwf	13	;volsfr
  1452  0384                     l1945:
  1453                           
  1454                           ;mainP2.c: 362:     EECON1bits.WR = 1;
  1455  0384  148C               	bsf	12,1	;volsfr
  1456  0385                     l1947:
  1457                           
  1458                           ;mainP2.c: 363:     INTCONbits.GIE = 1;
  1459  0385  178B               	bsf	11,7	;volatile
  1460  0386                     l203:	
  1461                           ;mainP2.c: 364:     while(EECON1bits.WR);
  1462                           
  1463  0386  188C               	btfsc	12,1	;volsfr
  1464  0387  2B89               	goto	u701
  1465  0388  2B8A               	goto	u700
  1466  0389                     u701:
  1467  0389  2B86               	goto	l203
  1468  038A                     u700:
  1469  038A                     l205:
  1470                           
  1471                           ;mainP2.c: 365:     EECON1bits.WREN = 0;
  1472  038A  110C               	bcf	12,2	;volsfr
  1473  038B                     l206:
  1474  038B  0008               	return
  1475  038C                     __end_of_guardarposiciones:
  1476                           
  1477                           	psect	text8
  1478  00C2                     __ptext8:	
  1479 ;; *************** function _configuraciones *****************
  1480 ;; Defined at:
  1481 ;;		line 185 in file "mainP2.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1495 ;;      Params:         0       0       0       0       0
  1496 ;;      Locals:         0       0       0       0       0
  1497 ;;      Temps:          0       0       0       0       0
  1498 ;;      Totals:         0       0       0       0       0
  1499 ;;Total ram usage:        0 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; Hardware stack levels required when called:    2
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_main
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           
  1510                           ;psect for function _configuraciones
  1511  00C2                     _configuraciones:
  1512  00C2                     l1505:	
  1513                           ;incstack = 0
  1514                           ; Regs used in _configuraciones: [wreg+status,2+status,0]
  1515                           
  1516                           
  1517                           ;mainP2.c: 187:     ANSEL = 0X0F;
  1518  00C2  300F               	movlw	15
  1519  00C3  1683               	bsf	3,5	;RP0=1, select bank3
  1520  00C4  1703               	bsf	3,6	;RP1=1, select bank3
  1521  00C5  0088               	movwf	8	;volatile
  1522  00C6                     l1507:
  1523                           
  1524                           ;mainP2.c: 188:     ANSELH = 0X00;
  1525  00C6  0189               	clrf	9	;volatile
  1526  00C7                     l1509:
  1527                           
  1528                           ;mainP2.c: 189:     TRISA = 0X0F;
  1529  00C7  300F               	movlw	15
  1530  00C8  1683               	bsf	3,5	;RP0=1, select bank1
  1531  00C9  1303               	bcf	3,6	;RP1=0, select bank1
  1532  00CA  0085               	movwf	5	;volatile
  1533  00CB                     l1511:
  1534                           
  1535                           ;mainP2.c: 190:     TRISB = 0X07;
  1536  00CB  3007               	movlw	7
  1537  00CC  0086               	movwf	6	;volatile
  1538  00CD                     l1513:
  1539                           
  1540                           ;mainP2.c: 191:     TRISC = 0X82;
  1541  00CD  3082               	movlw	130
  1542  00CE  0087               	movwf	7	;volatile
  1543                           
  1544                           ;mainP2.c: 192:     TRISD = 0X00;
  1545  00CF  0188               	clrf	8	;volatile
  1546                           
  1547                           ;mainP2.c: 193:     TRISE = 0X00;
  1548  00D0  0189               	clrf	9	;volatile
  1549                           
  1550                           ;mainP2.c: 194:     PORTA = 0X00;
  1551  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1552  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1553  00D3  0185               	clrf	5	;volatile
  1554                           
  1555                           ;mainP2.c: 195:     PORTB = 0X00;
  1556  00D4  0186               	clrf	6	;volatile
  1557                           
  1558                           ;mainP2.c: 196:     PORTC = 0X00;
  1559  00D5  0187               	clrf	7	;volatile
  1560                           
  1561                           ;mainP2.c: 197:     PORTD = 0X00;
  1562  00D6  0188               	clrf	8	;volatile
  1563                           
  1564                           ;mainP2.c: 198:     PORTE = 0X00;
  1565  00D7  0189               	clrf	9	;volatile
  1566                           
  1567                           ;mainP2.c: 199:     posicion = 0;
  1568  00D8  01AB               	clrf	_posicion
  1569  00D9                     l1515:
  1570                           
  1571                           ;mainP2.c: 201:     OSCCONbits.IRCF = 0b111;
  1572  00D9  3070               	movlw	112
  1573  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  1574  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  1575  00DC  048F               	iorwf	15,f	;volatile
  1576  00DD                     l1517:
  1577                           
  1578                           ;mainP2.c: 202:     OSCCONbits.SCS = 0b1;
  1579  00DD  140F               	bsf	15,0	;volatile
  1580  00DE                     l1519:
  1581                           
  1582                           ;mainP2.c: 205:     T1CONbits.T1CKPS = 0B10;
  1583  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1584  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1585  00E0  0810               	movf	16,w	;volatile
  1586  00E1  39CF               	andlw	-49
  1587  00E2  3820               	iorlw	32
  1588  00E3  0090               	movwf	16	;volatile
  1589  00E4                     l1521:
  1590                           
  1591                           ;mainP2.c: 206:     TMR1H = 0B00111100;
  1592  00E4  303C               	movlw	60
  1593  00E5  008F               	movwf	15	;volatile
  1594  00E6                     l1523:
  1595                           
  1596                           ;mainP2.c: 207:     TMR1L = 0B10101111;
  1597  00E6  30AF               	movlw	175
  1598  00E7  008E               	movwf	14	;volatile
  1599  00E8                     l1525:
  1600                           
  1601                           ;mainP2.c: 208:     T1CONbits.TMR1ON = 0;
  1602  00E8  1010               	bcf	16,0	;volatile
  1603  00E9                     l1527:
  1604                           
  1605                           ;mainP2.c: 211:     INTCONbits.TMR0IF = 0;
  1606  00E9  110B               	bcf	11,2	;volatile
  1607  00EA                     l1529:
  1608                           
  1609                           ;mainP2.c: 212:     INTCONbits.TMR0IE = 1;
  1610  00EA  168B               	bsf	11,5	;volatile
  1611  00EB                     l1531:
  1612                           
  1613                           ;mainP2.c: 213:     PIR1bits.TMR1IF = 0;
  1614  00EB  100C               	bcf	12,0	;volatile
  1615  00EC                     l1533:
  1616                           
  1617                           ;mainP2.c: 214:     PIE1bits.TMR1IE = 1;
  1618  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  1619  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  1620  00EE  140C               	bsf	12,0	;volatile
  1621  00EF                     l1535:
  1622                           
  1623                           ;mainP2.c: 215:     INTCONbits.RBIF = 0;
  1624  00EF  100B               	bcf	11,0	;volatile
  1625  00F0                     l1537:
  1626                           
  1627                           ;mainP2.c: 216:     INTCONbits.RBIE = 0;
  1628  00F0  118B               	bcf	11,3	;volatile
  1629  00F1                     l1539:
  1630                           
  1631                           ;mainP2.c: 217:     INTCONbits.PEIE = 1;
  1632  00F1  170B               	bsf	11,6	;volatile
  1633  00F2                     l1541:
  1634                           
  1635                           ;mainP2.c: 218:     PIE1bits.RCIE = 1;
  1636  00F2  168C               	bsf	12,5	;volatile
  1637  00F3                     l1543:
  1638                           
  1639                           ;mainP2.c: 219:     INTCONbits.GIE = 1;
  1640  00F3  178B               	bsf	11,7	;volatile
  1641  00F4                     l1545:
  1642                           
  1643                           ;mainP2.c: 222:     IOCBbits.IOCB0 = 1;
  1644  00F4  1416               	bsf	22,0	;volatile
  1645  00F5                     l1547:
  1646                           
  1647                           ;mainP2.c: 223:     IOCBbits.IOCB1 = 1;
  1648  00F5  1496               	bsf	22,1	;volatile
  1649  00F6                     l1549:
  1650                           
  1651                           ;mainP2.c: 224:     IOCBbits.IOCB2 = 1;
  1652  00F6  1516               	bsf	22,2	;volatile
  1653  00F7                     l1551:
  1654                           
  1655                           ;mainP2.c: 227:     ADCON0bits.ADCS = 0b10;
  1656  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1657  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1658  00F9  081F               	movf	31,w	;volatile
  1659  00FA  393F               	andlw	-193
  1660  00FB  3880               	iorlw	128
  1661  00FC  009F               	movwf	31	;volatile
  1662  00FD                     l1553:
  1663                           
  1664                           ;mainP2.c: 228:     ADCON0bits.CHS = 0b0000;
  1665  00FD  30C3               	movlw	-61
  1666  00FE  059F               	andwf	31,f	;volatile
  1667  00FF                     l1555:
  1668                           
  1669                           ;mainP2.c: 229:     ADCON0bits.GO = 0b0;
  1670  00FF  109F               	bcf	31,1	;volatile
  1671  0100                     l1557:
  1672                           
  1673                           ;mainP2.c: 230:     ADCON0bits.ADON = 0b1;
  1674  0100  141F               	bsf	31,0	;volatile
  1675  0101                     l1559:
  1676                           
  1677                           ;mainP2.c: 231:     ADCON1bits.ADFM = 0b0;
  1678  0101  1683               	bsf	3,5	;RP0=1, select bank1
  1679  0102  1303               	bcf	3,6	;RP1=0, select bank1
  1680  0103  139F               	bcf	31,7	;volatile
  1681  0104                     l1561:
  1682                           
  1683                           ;mainP2.c: 232:     ADCON1bits.VCFG1 = 0b0;
  1684  0104  129F               	bcf	31,5	;volatile
  1685  0105                     l1563:
  1686                           
  1687                           ;mainP2.c: 233:     ADCON1bits.VCFG0 = 0b0;
  1688  0105  121F               	bcf	31,4	;volatile
  1689  0106                     l1565:
  1690                           
  1691                           ;mainP2.c: 236:     PR2 = 249;
  1692  0106  30F9               	movlw	249
  1693  0107  0092               	movwf	18	;volatile
  1694  0108                     l1567:
  1695                           
  1696                           ;mainP2.c: 237:     CCP2CONbits.CCP2M = 0b1111;
  1697  0108  300F               	movlw	15
  1698  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1699  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1700  010B  049D               	iorwf	29,f	;volatile
  1701  010C                     l1569:
  1702                           
  1703                           ;mainP2.c: 238:     CCPR2L = 0x0F;
  1704  010C  300F               	movlw	15
  1705  010D  009B               	movwf	27	;volatile
  1706  010E                     l1571:
  1707                           
  1708                           ;mainP2.c: 239:     PIR1bits.TMR2IF = 0;
  1709  010E  108C               	bcf	12,1	;volatile
  1710  010F                     l1573:
  1711                           
  1712                           ;mainP2.c: 240:     T2CONbits.T2CKPS = 0b11;
  1713  010F  3003               	movlw	3
  1714  0110  0492               	iorwf	18,f	;volatile
  1715  0111                     l1575:
  1716                           
  1717                           ;mainP2.c: 241:     T2CONbits.TMR2ON = 1;
  1718  0111  1512               	bsf	18,2	;volatile
  1719  0112                     l152:	
  1720                           ;mainP2.c: 243:     while(!PIR1bits.TMR2IF);
  1721                           
  1722  0112  1C8C               	btfss	12,1	;volatile
  1723  0113  2915               	goto	u411
  1724  0114  2916               	goto	u410
  1725  0115                     u411:
  1726  0115  2912               	goto	l152
  1727  0116                     u410:
  1728  0116                     l1577:
  1729                           
  1730                           ;mainP2.c: 244:     TRISC = 0X80;
  1731  0116  3080               	movlw	128
  1732  0117  1683               	bsf	3,5	;RP0=1, select bank1
  1733  0118  1303               	bcf	3,6	;RP1=0, select bank1
  1734  0119  0087               	movwf	7	;volatile
  1735                           
  1736                           ;mainP2.c: 247:     SPBRG = 12;
  1737  011A  300C               	movlw	12
  1738  011B  0099               	movwf	25	;volatile
  1739  011C                     l1579:
  1740                           
  1741                           ;mainP2.c: 248:     TXSTAbits.BRGH = 0;
  1742  011C  1118               	bcf	24,2	;volatile
  1743  011D                     l1581:
  1744                           
  1745                           ;mainP2.c: 249:     TXSTAbits.TXEN = 1;
  1746  011D  1698               	bsf	24,5	;volatile
  1747  011E                     l1583:
  1748                           
  1749                           ;mainP2.c: 250:     RCSTAbits.CREN = 1;
  1750  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1751  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1752  0120  1618               	bsf	24,4	;volatile
  1753  0121                     l1585:
  1754                           
  1755                           ;mainP2.c: 251:     TXSTAbits.SYNC = 0;
  1756  0121  1683               	bsf	3,5	;RP0=1, select bank1
  1757  0122  1303               	bcf	3,6	;RP1=0, select bank1
  1758  0123  1218               	bcf	24,4	;volatile
  1759  0124                     l1587:
  1760                           
  1761                           ;mainP2.c: 252:     RCSTAbits.SPEN = 1;
  1762  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1763  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1764  0126  1798               	bsf	24,7	;volatile
  1765  0127                     l1589:
  1766                           
  1767                           ;mainP2.c: 255:     OSCCONbits.SCS = 1;
  1768  0127  1683               	bsf	3,5	;RP0=1, select bank1
  1769  0128  1303               	bcf	3,6	;RP1=0, select bank1
  1770  0129  140F               	bsf	15,0	;volatile
  1771  012A                     l1591:
  1772                           
  1773                           ;mainP2.c: 256:     OPTION_REGbits.T0CS = 0;
  1774  012A  1281               	bcf	1,5	;volatile
  1775  012B                     l1593:
  1776                           
  1777                           ;mainP2.c: 257:     OPTION_REGbits.PSA = 0;
  1778  012B  1181               	bcf	1,3	;volatile
  1779  012C                     l1595:
  1780                           
  1781                           ;mainP2.c: 258:     OPTION_REGbits.PS2 = 0;
  1782  012C  1101               	bcf	1,2	;volatile
  1783  012D                     l1597:
  1784                           
  1785                           ;mainP2.c: 259:     OPTION_REGbits.PS1 = 1;
  1786  012D  1481               	bsf	1,1	;volatile
  1787  012E                     l1599:
  1788                           
  1789                           ;mainP2.c: 260:     OPTION_REGbits.PS0 = 1;
  1790  012E  1401               	bsf	1,0	;volatile
  1791  012F                     l1601:
  1792                           
  1793                           ;mainP2.c: 261:     INTCONbits.T0IF = 0;
  1794  012F  110B               	bcf	11,2	;volatile
  1795                           
  1796                           ;mainP2.c: 262:     TMR0 = 131;
  1797  0130  3083               	movlw	131
  1798  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1799  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1800  0133  0081               	movwf	1	;volatile
  1801  0134                     l1603:
  1802                           
  1803                           ;mainP2.c: 263:     SERVOS.bit1 = 0;
  1804  0134  12B2               	bcf	_SERVOS,5
  1805  0135                     l1605:
  1806                           
  1807                           ;mainP2.c: 264:     SERVOS.modo = 0;
  1808  0135  1332               	bcf	_SERVOS,6
  1809  0136                     l155:
  1810  0136  0008               	return
  1811  0137                     __end_of_configuraciones:
  1812                           
  1813                           	psect	text9
  1814  0021                     __ptext9:	
  1815 ;; *************** function _AnalogReadServo *****************
  1816 ;; Defined at:
  1817 ;;		line 301 in file "mainP2.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;		None
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1831 ;;      Params:         0       0       0       0       0
  1832 ;;      Locals:         0       0       0       0       0
  1833 ;;      Temps:          0       2       0       0       0
  1834 ;;      Totals:         0       2       0       0       0
  1835 ;;Total ram usage:        2 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    2
  1838 ;; This function calls:
  1839 ;;		Nothing
  1840 ;; This function is called by:
  1841 ;;		_main
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           
  1846                           ;psect for function _AnalogReadServo
  1847  0021                     _AnalogReadServo:
  1848  0021                     l2041:	
  1849                           ;incstack = 0
  1850                           ; Regs used in _AnalogReadServo: [wreg-fsr0h+status,2+status,0]
  1851                           
  1852                           
  1853                           ;mainP2.c: 303:     if(!ADCON0bits.GO){
  1854  0021  1283               	bcf	3,5	;RP0=0, select bank0
  1855  0022  1303               	bcf	3,6	;RP1=0, select bank0
  1856  0023  189F               	btfsc	31,1	;volatile
  1857  0024  2826               	goto	u761
  1858  0025  2827               	goto	u760
  1859  0026                     u761:
  1860  0026  28C1               	goto	l191
  1861  0027                     u760:
  1862  0027  289E               	goto	l2087
  1863  0028                     l2045:
  1864                           
  1865                           ;mainP2.c: 306:                  POT2 = ADRESH;
  1866  0028  081E               	movf	30,w	;volatile
  1867  0029  00A0               	movwf	??_AnalogReadServo
  1868  002A  0820               	movf	??_AnalogReadServo,w
  1869  002B  00AF               	movwf	_POT2
  1870                           
  1871                           ;mainP2.c: 307:             break;
  1872  002C  28C1               	goto	l191
  1873  002D                     l2047:
  1874                           
  1875                           ;mainP2.c: 310:                 ADCON0bits.CHS = 2;
  1876  002D  081F               	movf	31,w	;volatile
  1877  002E  39C3               	andlw	-61
  1878  002F  3808               	iorlw	8
  1879  0030  009F               	movwf	31	;volatile
  1880  0031                     l2049:
  1881                           
  1882                           ;mainP2.c: 311:                 if(POT2>=160) POT2 = 160;
  1883  0031  30A0               	movlw	160
  1884  0032  022F               	subwf	_POT2,w
  1885  0033  1C03               	skipc
  1886  0034  2836               	goto	u771
  1887  0035  2837               	goto	u770
  1888  0036                     u771:
  1889  0036  283B               	goto	l177
  1890  0037                     u770:
  1891  0037                     l2051:
  1892  0037  30A0               	movlw	160
  1893  0038  00A0               	movwf	??_AnalogReadServo
  1894  0039  0820               	movf	??_AnalogReadServo,w
  1895  003A  00AF               	movwf	_POT2
  1896  003B                     l177:
  1897                           
  1898                           ;mainP2.c: 312:                 if(POT2<=10) POT2 = 10;
  1899  003B  300B               	movlw	11
  1900  003C  022F               	subwf	_POT2,w
  1901  003D  1803               	skipnc
  1902  003E  2840               	goto	u781
  1903  003F  2841               	goto	u780
  1904  0040                     u781:
  1905  0040  28C1               	goto	l191
  1906  0041                     u780:
  1907  0041                     l2053:
  1908  0041  300A               	movlw	10
  1909  0042  00A0               	movwf	??_AnalogReadServo
  1910  0043  0820               	movf	??_AnalogReadServo,w
  1911  0044  00AF               	movwf	_POT2
  1912  0045  28C1               	goto	l191
  1913  0046                     l2055:
  1914                           
  1915                           ;mainP2.c: 316:                 POT3 = ADRESH;
  1916  0046  081E               	movf	30,w	;volatile
  1917  0047  00A0               	movwf	??_AnalogReadServo
  1918  0048  0820               	movf	??_AnalogReadServo,w
  1919  0049  00AE               	movwf	_POT3
  1920                           
  1921                           ;mainP2.c: 317:             break;
  1922  004A  28C1               	goto	l191
  1923  004B                     l2057:
  1924                           
  1925                           ;mainP2.c: 320:                 ADCON0bits.CHS = 3;
  1926  004B  081F               	movf	31,w	;volatile
  1927  004C  39C3               	andlw	-61
  1928  004D  380C               	iorlw	12
  1929  004E  009F               	movwf	31	;volatile
  1930  004F                     l2059:
  1931                           
  1932                           ;mainP2.c: 321:                 if(POT3>=160) POT3 = 160;
  1933  004F  30A0               	movlw	160
  1934  0050  022E               	subwf	_POT3,w
  1935  0051  1C03               	skipc
  1936  0052  2854               	goto	u791
  1937  0053  2855               	goto	u790
  1938  0054                     u791:
  1939  0054  2859               	goto	l181
  1940  0055                     u790:
  1941  0055                     l2061:
  1942  0055  30A0               	movlw	160
  1943  0056  00A0               	movwf	??_AnalogReadServo
  1944  0057  0820               	movf	??_AnalogReadServo,w
  1945  0058  00AE               	movwf	_POT3
  1946  0059                     l181:
  1947                           
  1948                           ;mainP2.c: 322:                 if(POT3<=10) POT3 = 10;
  1949  0059  300B               	movlw	11
  1950  005A  022E               	subwf	_POT3,w
  1951  005B  1803               	skipnc
  1952  005C  285E               	goto	u801
  1953  005D  285F               	goto	u800
  1954  005E                     u801:
  1955  005E  28C1               	goto	l191
  1956  005F                     u800:
  1957  005F                     l2063:
  1958  005F  300A               	movlw	10
  1959  0060  00A0               	movwf	??_AnalogReadServo
  1960  0061  0820               	movf	??_AnalogReadServo,w
  1961  0062  00AE               	movwf	_POT3
  1962  0063  28C1               	goto	l191
  1963  0064                     l2065:
  1964                           
  1965                           ;mainP2.c: 326:                 POT4 = ADRESH;
  1966  0064  081E               	movf	30,w	;volatile
  1967  0065  00A0               	movwf	??_AnalogReadServo
  1968  0066  0820               	movf	??_AnalogReadServo,w
  1969  0067  00AD               	movwf	_POT4
  1970                           
  1971                           ;mainP2.c: 327:             break;
  1972  0068  28C1               	goto	l191
  1973  0069                     l2067:
  1974                           
  1975                           ;mainP2.c: 330:                 ADCON0bits.CHS = 0;
  1976  0069  30C3               	movlw	-61
  1977  006A  059F               	andwf	31,f	;volatile
  1978  006B                     l2069:
  1979                           
  1980                           ;mainP2.c: 331:                 if(POT4>=160) POT4 = 160;
  1981  006B  30A0               	movlw	160
  1982  006C  022D               	subwf	_POT4,w
  1983  006D  1C03               	skipc
  1984  006E  2870               	goto	u811
  1985  006F  2871               	goto	u810
  1986  0070                     u811:
  1987  0070  2875               	goto	l185
  1988  0071                     u810:
  1989  0071                     l2071:
  1990  0071  30A0               	movlw	160
  1991  0072  00A0               	movwf	??_AnalogReadServo
  1992  0073  0820               	movf	??_AnalogReadServo,w
  1993  0074  00AD               	movwf	_POT4
  1994  0075                     l185:
  1995                           
  1996                           ;mainP2.c: 332:                 if(POT4<=10) POT4 = 10;
  1997  0075  300B               	movlw	11
  1998  0076  022D               	subwf	_POT4,w
  1999  0077  1803               	skipnc
  2000  0078  287A               	goto	u821
  2001  0079  287B               	goto	u820
  2002  007A                     u821:
  2003  007A  28C1               	goto	l191
  2004  007B                     u820:
  2005  007B                     l2073:
  2006  007B  300A               	movlw	10
  2007  007C  00A0               	movwf	??_AnalogReadServo
  2008  007D  0820               	movf	??_AnalogReadServo,w
  2009  007E  00AD               	movwf	_POT4
  2010  007F  28C1               	goto	l191
  2011  0080                     l2075:
  2012                           
  2013                           ;mainP2.c: 336:                 POT1 = ADRESH;
  2014  0080  081E               	movf	30,w	;volatile
  2015  0081  00A0               	movwf	??_AnalogReadServo
  2016  0082  0820               	movf	??_AnalogReadServo,w
  2017  0083  00B0               	movwf	_POT1
  2018                           
  2019                           ;mainP2.c: 337:             break;
  2020  0084  28C1               	goto	l191
  2021  0085                     l2077:
  2022                           
  2023                           ;mainP2.c: 340:                 ADCON0bits.CHS = 1;
  2024  0085  081F               	movf	31,w	;volatile
  2025  0086  39C3               	andlw	-61
  2026  0087  3804               	iorlw	4
  2027  0088  009F               	movwf	31	;volatile
  2028  0089                     l2079:
  2029                           
  2030                           ;mainP2.c: 341:                 if(POT1>=160) POT1 = 160;
  2031  0089  30A0               	movlw	160
  2032  008A  0230               	subwf	_POT1,w
  2033  008B  1C03               	skipc
  2034  008C  288E               	goto	u831
  2035  008D  288F               	goto	u830
  2036  008E                     u831:
  2037  008E  2893               	goto	l189
  2038  008F                     u830:
  2039  008F                     l2081:
  2040  008F  30A0               	movlw	160
  2041  0090  00A0               	movwf	??_AnalogReadServo
  2042  0091  0820               	movf	??_AnalogReadServo,w
  2043  0092  00B0               	movwf	_POT1
  2044  0093                     l189:
  2045                           
  2046                           ;mainP2.c: 342:                 if(POT1<=10) POT1 = 10;
  2047  0093  300B               	movlw	11
  2048  0094  0230               	subwf	_POT1,w
  2049  0095  1803               	skipnc
  2050  0096  2898               	goto	u841
  2051  0097  2899               	goto	u840
  2052  0098                     u841:
  2053  0098  28C1               	goto	l191
  2054  0099                     u840:
  2055  0099                     l2083:
  2056  0099  300A               	movlw	10
  2057  009A  00A0               	movwf	??_AnalogReadServo
  2058  009B  0820               	movf	??_AnalogReadServo,w
  2059  009C  00B0               	movwf	_POT1
  2060  009D  28C1               	goto	l191
  2061  009E                     l2087:
  2062  009E  0832               	movf	_SERVOS,w
  2063  009F  391F               	andlw	31
  2064  00A0  00A0               	movwf	??_AnalogReadServo
  2065  00A1  01A1               	clrf	??_AnalogReadServo+1
  2066                           
  2067                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2068                           ; Switch size 1, requested type "simple"
  2069                           ; Number of cases is 1, Range of values is 0 to 0
  2070                           ; switch strategies available:
  2071                           ; Name         Instructions Cycles
  2072                           ; simple_byte            4     3 (average)
  2073                           ; direct_byte           11     8 (fixed)
  2074                           ; jumptable            260     6 (fixed)
  2075                           ;	Chosen strategy is simple_byte
  2076  00A2  0821               	movf	??_AnalogReadServo+1,w
  2077  00A3  3A00               	xorlw	0	; case 0
  2078  00A4  1903               	skipnz
  2079  00A5  28A7               	goto	l2305
  2080  00A6  28C1               	goto	l191
  2081  00A7                     l2305:
  2082                           
  2083                           ; Switch size 1, requested type "simple"
  2084                           ; Number of cases is 8, Range of values is 0 to 10
  2085                           ; switch strategies available:
  2086                           ; Name         Instructions Cycles
  2087                           ; simple_byte           25    13 (average)
  2088                           ; direct_byte           41     8 (fixed)
  2089                           ; jumptable            260     6 (fixed)
  2090                           ;	Chosen strategy is simple_byte
  2091  00A7  0820               	movf	??_AnalogReadServo,w
  2092  00A8  3A00               	xorlw	0	; case 0
  2093  00A9  1903               	skipnz
  2094  00AA  2828               	goto	l2045
  2095  00AB  3A01               	xorlw	1	; case 1
  2096  00AC  1903               	skipnz
  2097  00AD  282D               	goto	l2047
  2098  00AE  3A02               	xorlw	2	; case 3
  2099  00AF  1903               	skipnz
  2100  00B0  2846               	goto	l2055
  2101  00B1  3A07               	xorlw	7	; case 4
  2102  00B2  1903               	skipnz
  2103  00B3  284B               	goto	l2057
  2104  00B4  3A02               	xorlw	2	; case 6
  2105  00B5  1903               	skipnz
  2106  00B6  2864               	goto	l2065
  2107  00B7  3A01               	xorlw	1	; case 7
  2108  00B8  1903               	skipnz
  2109  00B9  2869               	goto	l2067
  2110  00BA  3A0E               	xorlw	14	; case 9
  2111  00BB  1903               	skipnz
  2112  00BC  2880               	goto	l2075
  2113  00BD  3A03               	xorlw	3	; case 10
  2114  00BE  1903               	skipnz
  2115  00BF  2885               	goto	l2077
  2116  00C0  28C1               	goto	l191
  2117  00C1                     l191:
  2118  00C1  0008               	return
  2119  00C2                     __end_of_AnalogReadServo:
  2120                           
  2121                           	psect	text10
  2122  01A5                     __ptext10:	
  2123 ;; *************** function _rutInter *****************
  2124 ;; Defined at:
  2125 ;;		line 86 in file "mainP2.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2139 ;;      Params:         0       0       0       0       0
  2140 ;;      Locals:         0       0       0       0       0
  2141 ;;      Temps:          4       0       0       0       0
  2142 ;;      Totals:         4       0       0       0       0
  2143 ;;Total ram usage:        4 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    1
  2146 ;; This function calls:
  2147 ;;		_servos
  2148 ;; This function is called by:
  2149 ;;		Interrupt level 1
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           
  2154                           ;psect for function _rutInter
  2155  01A5                     _rutInter:
  2156  01A5                     i1l1689:
  2157                           
  2158                           ;mainP2.c: 88:     if(INTCONbits.TMR0IF) {
  2159  01A5  1D0B               	btfss	11,2	;volatile
  2160  01A6  29A8               	goto	u53_21
  2161  01A7  29A9               	goto	u53_20
  2162  01A8                     u53_21:
  2163  01A8  29C1               	goto	i1l119
  2164  01A9                     u53_20:
  2165  01A9                     i1l1691:
  2166                           
  2167                           ;mainP2.c: 89:         SERVOS.bit0++;
  2168  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  2169  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  2170  01AB  0832               	movf	_SERVOS,w
  2171  01AC  391F               	andlw	31
  2172  01AD  00F2               	movwf	??_rutInter
  2173  01AE  0AF2               	incf	??_rutInter,f
  2174  01AF  0832               	movf	_SERVOS,w
  2175  01B0  0672               	xorwf	??_rutInter,w
  2176  01B1  39E0               	andlw	-32
  2177  01B2  0672               	xorwf	??_rutInter,w
  2178  01B3  00B2               	movwf	_SERVOS
  2179  01B4                     i1l1693:
  2180                           
  2181                           ;mainP2.c: 90:         INTCONbits.TMR0IF = 0;
  2182  01B4  110B               	bcf	11,2	;volatile
  2183  01B5                     i1l1695:
  2184                           
  2185                           ;mainP2.c: 91:         servos();
  2186  01B5  120A  118A  22C5  120A  118A  	fcall	_servos
  2187  01BA                     i1l1697:
  2188                           
  2189                           ;mainP2.c: 92:         if(SERVOS.modo) ADCON0bits.GO = 1;
  2190  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2191  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  2192  01BC  1F32               	btfss	_SERVOS,6
  2193  01BD  29BF               	goto	u54_21
  2194  01BE  29C0               	goto	u54_20
  2195  01BF                     u54_21:
  2196  01BF  29C1               	goto	i1l119
  2197  01C0                     u54_20:
  2198  01C0                     i1l1699:
  2199  01C0  149F               	bsf	31,1	;volatile
  2200  01C1                     i1l119:	
  2201                           ;mainP2.c: 93:     }
  2202                           
  2203                           
  2204                           ;mainP2.c: 95:     if(PIR1bits.TMR1IF){
  2205  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  2206  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  2207  01C3  1C0C               	btfss	12,0	;volatile
  2208  01C4  29C6               	goto	u55_21
  2209  01C5  29C7               	goto	u55_20
  2210  01C6                     u55_21:
  2211  01C6  29D1               	goto	i1l1711
  2212  01C7                     u55_20:
  2213  01C7                     i1l1701:
  2214                           
  2215                           ;mainP2.c: 96:         SERVOS.guardar = 1;
  2216  01C7  17B2               	bsf	_SERVOS,7
  2217  01C8                     i1l1703:
  2218                           
  2219                           ;mainP2.c: 97:         posicion ++;
  2220  01C8  3001               	movlw	1
  2221  01C9  00F2               	movwf	??_rutInter
  2222  01CA  0872               	movf	??_rutInter,w
  2223  01CB  07AB               	addwf	_posicion,f
  2224  01CC                     i1l1705:
  2225                           
  2226                           ;mainP2.c: 98:         PIR1bits.TMR1IF = 0;
  2227  01CC  100C               	bcf	12,0	;volatile
  2228  01CD                     i1l1707:
  2229                           
  2230                           ;mainP2.c: 99:         TMR1H = 0B00111100;
  2231  01CD  303C               	movlw	60
  2232  01CE  008F               	movwf	15	;volatile
  2233  01CF                     i1l1709:
  2234                           
  2235                           ;mainP2.c: 100:         TMR1L = 0B10101111;
  2236  01CF  30AF               	movlw	175
  2237  01D0  008E               	movwf	14	;volatile
  2238  01D1                     i1l1711:
  2239                           
  2240                           ;mainP2.c: 103:     if(INTCONbits.RBIF && PORTBbits.RB0){
  2241  01D1  1C0B               	btfss	11,0	;volatile
  2242  01D2  29D4               	goto	u56_21
  2243  01D3  29D5               	goto	u56_20
  2244  01D4                     u56_21:
  2245  01D4  29EB               	goto	i1l1721
  2246  01D5                     u56_20:
  2247  01D5                     i1l1713:
  2248  01D5  1C06               	btfss	6,0	;volatile
  2249  01D6  29D8               	goto	u57_21
  2250  01D7  29D9               	goto	u57_20
  2251  01D8                     u57_21:
  2252  01D8  29EB               	goto	i1l1721
  2253  01D9                     u57_20:
  2254  01D9                     i1l1715:
  2255                           
  2256                           ;mainP2.c: 104:         if(!T1CONbits.TMR1ON)SERVOS.modo = ~SERVOS.modo;
  2257  01D9  1810               	btfsc	16,0	;volatile
  2258  01DA  29DC               	goto	u58_21
  2259  01DB  29DD               	goto	u58_20
  2260  01DC                     u58_21:
  2261  01DC  29EA               	goto	i1l1719
  2262  01DD                     u58_20:
  2263  01DD                     i1l1717:
  2264  01DD  1003               	clrc
  2265  01DE  1F32               	btfss	_SERVOS,6
  2266  01DF  1403               	setc
  2267  01E0  1803               	btfsc	3,0
  2268  01E1  29E3               	goto	u59_21
  2269  01E2  29E7               	goto	u59_20
  2270  01E3                     u59_21:
  2271  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  2272  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  2273  01E5  1732               	bsf	_SERVOS,6
  2274  01E6  29EA               	goto	u60_24
  2275  01E7                     u59_20:
  2276  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  2277  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  2278  01E9  1332               	bcf	_SERVOS,6
  2279  01EA                     u60_24:
  2280  01EA                     i1l1719:
  2281                           
  2282                           ;mainP2.c: 106:         INTCONbits.RBIF = 0;
  2283  01EA  100B               	bcf	11,0	;volatile
  2284  01EB                     i1l1721:
  2285                           
  2286                           ;mainP2.c: 109:     if(INTCONbits.RBIF && PORTBbits.RB1){
  2287  01EB  1C0B               	btfss	11,0	;volatile
  2288  01EC  29EE               	goto	u61_21
  2289  01ED  29EF               	goto	u61_20
  2290  01EE                     u61_21:
  2291  01EE  29FF               	goto	i1l124
  2292  01EF                     u61_20:
  2293  01EF                     i1l1723:
  2294  01EF  1C86               	btfss	6,1	;volatile
  2295  01F0  29F2               	goto	u62_21
  2296  01F1  29F3               	goto	u62_20
  2297  01F2                     u62_21:
  2298  01F2  29FF               	goto	i1l124
  2299  01F3                     u62_20:
  2300  01F3                     i1l1725:
  2301                           
  2302                           ;mainP2.c: 110:         if(SERVOS.modo){T1CONbits.TMR1ON = 1;
  2303  01F3  1F32               	btfss	_SERVOS,6
  2304  01F4  29F6               	goto	u63_21
  2305  01F5  29F7               	goto	u63_20
  2306  01F6                     u63_21:
  2307  01F6  29F9               	goto	i1l125
  2308  01F7                     u63_20:
  2309  01F7                     i1l1727:
  2310  01F7  1410               	bsf	16,0	;volatile
  2311                           
  2312                           ;mainP2.c: 111:         PORTEbits.RE0 = 1;}
  2313  01F8  1409               	bsf	9,0	;volatile
  2314  01F9                     i1l125:
  2315                           
  2316                           ;mainP2.c: 112:         if(SERVOS.modo)SERVOS.guardar = 1;
  2317  01F9  1F32               	btfss	_SERVOS,6
  2318  01FA  29FC               	goto	u64_21
  2319  01FB  29FD               	goto	u64_20
  2320  01FC                     u64_21:
  2321  01FC  29FE               	goto	i1l126
  2322  01FD                     u64_20:
  2323  01FD                     i1l1729:
  2324  01FD  17B2               	bsf	_SERVOS,7
  2325  01FE                     i1l126:
  2326                           
  2327                           ;mainP2.c: 113:         INTCONbits.RBIF = 0;
  2328  01FE  100B               	bcf	11,0	;volatile
  2329  01FF                     i1l124:	
  2330                           ;mainP2.c: 114:     }
  2331                           
  2332                           
  2333                           ;mainP2.c: 116:     INTCONbits.RBIF = 0;
  2334  01FF  100B               	bcf	11,0	;volatile
  2335                           
  2336                           ;mainP2.c: 118:     if(PIR1bits.RCIF){
  2337  0200  1E8C               	btfss	12,5	;volatile
  2338  0201  2A03               	goto	u65_21
  2339  0202  2A04               	goto	u65_20
  2340  0203                     u65_21:
  2341  0203  2A0A               	goto	i1l128
  2342  0204                     u65_20:
  2343  0204                     i1l1731:
  2344                           
  2345                           ;mainP2.c: 119:         EXTREC = RCREG;
  2346  0204  081A               	movf	26,w	;volatile
  2347  0205  00F2               	movwf	??_rutInter
  2348  0206  0872               	movf	??_rutInter,w
  2349  0207  00AC               	movwf	_EXTREC
  2350  0208                     i1l1733:
  2351                           
  2352                           ;mainP2.c: 120:         UART.datorecep = 1;
  2353  0208  1431               	bsf	_UART,0
  2354  0209                     i1l1735:
  2355                           
  2356                           ;mainP2.c: 121:         PIR1bits.RCIF = 0;
  2357  0209  128C               	bcf	12,5	;volatile
  2358  020A                     i1l128:
  2359  020A  0875               	movf	??_rutInter+3,w
  2360  020B  008A               	movwf	10
  2361  020C  0874               	movf	??_rutInter+2,w
  2362  020D  0084               	movwf	4
  2363  020E  0E73               	swapf	??_rutInter+1,w
  2364  020F  0083               	movwf	3
  2365  0210  0EFE               	swapf	btemp,f
  2366  0211  0E7E               	swapf	btemp,w
  2367  0212  0009               	retfie
  2368  0213                     __end_of_rutInter:
  2369                           
  2370                           	psect	intentry
  2371  0004                     __pintentry:	
  2372                           ;incstack = 0
  2373                           ; Regs used in _rutInter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2374                           
  2375  0004                     interrupt_function:
  2376  007E                     saved_w	set	btemp
  2377  0004  00FE               	movwf	btemp
  2378  0005  0E03               	swapf	3,w
  2379  0006  00F3               	movwf	??_rutInter+1
  2380  0007  0804               	movf	4,w
  2381  0008  00F4               	movwf	??_rutInter+2
  2382  0009  080A               	movf	10,w
  2383  000A  00F5               	movwf	??_rutInter+3
  2384  000B  120A  118A  29A5   	ljmp	_rutInter
  2385                           
  2386                           	psect	text11
  2387  02C5                     __ptext11:	
  2388 ;; *************** function _servos *****************
  2389 ;; Defined at:
  2390 ;;		line 267 in file "mainP2.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;		None
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;		None
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  1    wreg      void 
  2397 ;; Registers used:
  2398 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2404 ;;      Params:         0       0       0       0       0
  2405 ;;      Locals:         0       0       0       0       0
  2406 ;;      Temps:          2       0       0       0       0
  2407 ;;      Totals:         2       0       0       0       0
  2408 ;;Total ram usage:        2 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; This function calls:
  2411 ;;		Nothing
  2412 ;; This function is called by:
  2413 ;;		_rutInter
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           
  2418                           ;psect for function _servos
  2419  02C5                     _servos:
  2420  02C5                     i1l1461:	
  2421                           ;incstack = 0
  2422                           ; Regs used in _servos: [wreg-fsr0h+status,2+status,0]
  2423                           
  2424                           
  2425                           ;mainP2.c: 269:     if(SERVOS.bit0 == 15) SERVOS.bit0 = 0;
  2426  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  2427  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  2428  02C7  0832               	movf	_SERVOS,w
  2429  02C8  391F               	andlw	31
  2430  02C9  3A0F               	xorlw	15
  2431  02CA  1D03               	skipz
  2432  02CB  2ACD               	goto	u40_21
  2433  02CC  2ACE               	goto	u40_20
  2434  02CD                     u40_21:
  2435  02CD  2AF1               	goto	i1l1499
  2436  02CE                     u40_20:
  2437  02CE                     i1l1463:
  2438  02CE  30E0               	movlw	-32
  2439  02CF  05B2               	andwf	_SERVOS,f
  2440  02D0  2AF1               	goto	i1l1499
  2441  02D1                     i1l1465:
  2442                           
  2443                           ;mainP2.c: 273:             TMR0 = POT1; PORTDbits.RD0 = 1;
  2444  02D1  0830               	movf	_POT1,w
  2445  02D2  0081               	movwf	1	;volatile
  2446  02D3                     i1l1467:
  2447  02D3  1408               	bsf	8,0	;volatile
  2448                           
  2449                           ;mainP2.c: 274:             break;
  2450  02D4  2B14               	goto	i1l169
  2451  02D5                     i1l1469:
  2452                           
  2453                           ;mainP2.c: 276:             TMR0 = 255-POT1; PORTDbits.RD0 = 0;
  2454  02D5  0930               	comf	_POT1,w
  2455  02D6  0081               	movwf	1	;volatile
  2456  02D7                     i1l1471:
  2457  02D7  1008               	bcf	8,0	;volatile
  2458                           
  2459                           ;mainP2.c: 277:             break;
  2460  02D8  2B14               	goto	i1l169
  2461  02D9                     i1l1473:
  2462                           
  2463                           ;mainP2.c: 279:             TMR0 = POT2; PORTDbits.RD1 = 1;
  2464  02D9  082F               	movf	_POT2,w
  2465  02DA  0081               	movwf	1	;volatile
  2466  02DB                     i1l1475:
  2467  02DB  1488               	bsf	8,1	;volatile
  2468                           
  2469                           ;mainP2.c: 280:             break;
  2470  02DC  2B14               	goto	i1l169
  2471  02DD                     i1l1477:
  2472                           
  2473                           ;mainP2.c: 282:              TMR0 = 255-POT2; PORTDbits.RD1 = 0;
  2474  02DD  092F               	comf	_POT2,w
  2475  02DE  0081               	movwf	1	;volatile
  2476  02DF                     i1l1479:
  2477  02DF  1088               	bcf	8,1	;volatile
  2478                           
  2479                           ;mainP2.c: 283:             break;
  2480  02E0  2B14               	goto	i1l169
  2481  02E1                     i1l1481:
  2482                           
  2483                           ;mainP2.c: 285:             TMR0 = POT3; PORTDbits.RD2 = 1;
  2484  02E1  082E               	movf	_POT3,w
  2485  02E2  0081               	movwf	1	;volatile
  2486  02E3                     i1l1483:
  2487  02E3  1508               	bsf	8,2	;volatile
  2488                           
  2489                           ;mainP2.c: 286:             break;
  2490  02E4  2B14               	goto	i1l169
  2491  02E5                     i1l1485:
  2492                           
  2493                           ;mainP2.c: 288:             TMR0 = 255-POT3; PORTDbits.RD2 = 0;
  2494  02E5  092E               	comf	_POT3,w
  2495  02E6  0081               	movwf	1	;volatile
  2496  02E7                     i1l1487:
  2497  02E7  1108               	bcf	8,2	;volatile
  2498                           
  2499                           ;mainP2.c: 289:             break;
  2500  02E8  2B14               	goto	i1l169
  2501  02E9                     i1l1489:
  2502                           
  2503                           ;mainP2.c: 291:             TMR0 = POT4; PORTDbits.RD3 = 1;
  2504  02E9  082D               	movf	_POT4,w
  2505  02EA  0081               	movwf	1	;volatile
  2506  02EB                     i1l1491:
  2507  02EB  1588               	bsf	8,3	;volatile
  2508                           
  2509                           ;mainP2.c: 292:             break;
  2510  02EC  2B14               	goto	i1l169
  2511  02ED                     i1l1493:
  2512                           
  2513                           ;mainP2.c: 294:             TMR0 = 255-POT4; PORTDbits.RD3 = 0;
  2514  02ED  092D               	comf	_POT4,w
  2515  02EE  0081               	movwf	1	;volatile
  2516  02EF                     i1l1495:
  2517  02EF  1188               	bcf	8,3	;volatile
  2518                           
  2519                           ;mainP2.c: 295:             break;
  2520  02F0  2B14               	goto	i1l169
  2521  02F1                     i1l1499:
  2522  02F1  0832               	movf	_SERVOS,w
  2523  02F2  391F               	andlw	31
  2524  02F3  00F0               	movwf	??_servos
  2525  02F4  01F1               	clrf	??_servos+1
  2526                           
  2527                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2528                           ; Switch size 1, requested type "simple"
  2529                           ; Number of cases is 1, Range of values is 0 to 0
  2530                           ; switch strategies available:
  2531                           ; Name         Instructions Cycles
  2532                           ; simple_byte            4     3 (average)
  2533                           ; direct_byte           11     8 (fixed)
  2534                           ; jumptable            260     6 (fixed)
  2535                           ;	Chosen strategy is simple_byte
  2536  02F5  0871               	movf	??_servos+1,w
  2537  02F6  3A00               	xorlw	0	; case 0
  2538  02F7  1903               	skipnz
  2539  02F8  2AFA               	goto	i1l2307
  2540  02F9  2B14               	goto	i1l169
  2541  02FA                     i1l2307:
  2542                           
  2543                           ; Switch size 1, requested type "simple"
  2544                           ; Number of cases is 8, Range of values is 0 to 10
  2545                           ; switch strategies available:
  2546                           ; Name         Instructions Cycles
  2547                           ; simple_byte           25    13 (average)
  2548                           ; direct_byte           41     8 (fixed)
  2549                           ; jumptable            260     6 (fixed)
  2550                           ;	Chosen strategy is simple_byte
  2551  02FA  0870               	movf	??_servos,w
  2552  02FB  3A00               	xorlw	0	; case 0
  2553  02FC  1903               	skipnz
  2554  02FD  2AD1               	goto	i1l1465
  2555  02FE  3A01               	xorlw	1	; case 1
  2556  02FF  1903               	skipnz
  2557  0300  2AD5               	goto	i1l1469
  2558  0301  3A02               	xorlw	2	; case 3
  2559  0302  1903               	skipnz
  2560  0303  2AD9               	goto	i1l1473
  2561  0304  3A07               	xorlw	7	; case 4
  2562  0305  1903               	skipnz
  2563  0306  2ADD               	goto	i1l1477
  2564  0307  3A02               	xorlw	2	; case 6
  2565  0308  1903               	skipnz
  2566  0309  2AE1               	goto	i1l1481
  2567  030A  3A01               	xorlw	1	; case 7
  2568  030B  1903               	skipnz
  2569  030C  2AE5               	goto	i1l1485
  2570  030D  3A0E               	xorlw	14	; case 9
  2571  030E  1903               	skipnz
  2572  030F  2AE9               	goto	i1l1489
  2573  0310  3A03               	xorlw	3	; case 10
  2574  0311  1903               	skipnz
  2575  0312  2AED               	goto	i1l1493
  2576  0313  2B14               	goto	i1l169
  2577  0314                     i1l169:
  2578  0314  0008               	return
  2579  0315                     __end_of_servos:
  2580  007E                     btemp	set	126	;btemp
  2581  007E                     wtemp0	set	126
  2582                           
  2583                           	psect	config
  2584                           
  2585                           ;Config register CONFIG1 @ 0x2007
  2586                           ;	Oscillator Selection bits
  2587                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2588                           ;	Watchdog Timer Enable bit
  2589                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2590                           ;	Power-up Timer Enable bit
  2591                           ;	PWRTE = OFF, PWRT disabled
  2592                           ;	RE3/MCLR pin function select bit
  2593                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2594                           ;	Code Protection bit
  2595                           ;	CP = OFF, Program memory code protection is disabled
  2596                           ;	Data Code Protection bit
  2597                           ;	CPD = OFF, Data memory code protection is disabled
  2598                           ;	Brown Out Reset Selection bits
  2599                           ;	BOREN = OFF, BOR disabled
  2600                           ;	Internal External Switchover bit
  2601                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2602                           ;	Fail-Safe Clock Monitor Enabled bit
  2603                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2604                           ;	Low Voltage Programming Enable bit
  2605                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2606                           ;	In-Circuit Debugger Mode bit
  2607                           ;	DEBUG = 0x1, unprogrammed default
  2608  2007                     	org	8199
  2609  2007  20F4               	dw	8436
  2610                           
  2611                           ;Config register CONFIG2 @ 0x2008
  2612                           ;	Brown-out Reset Selection bit
  2613                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2614                           ;	Flash Program Memory Self Write Enable bits
  2615                           ;	WRT = OFF, Write protection off
  2616  2008                     	org	8200
  2617  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80     11      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _rutInter in COMMON

    _rutInter->_servos

Critical Paths under _main in BANK0

    _main->_guardar3SEG
    _leer3SEG->_leerSERVOS
    _leerSERVOS->_leerposiciones
    _guardar3SEG->_guardarservos
    _guardarservos->_guardarposiciones

Critical Paths under _rutInter in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rutInter in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutInter in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutInter in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1209
                                              8 BANK0      3     3      0
                    _AnalogReadServo
                    _configuraciones
                        _guardar3SEG
                           _leer3SEG
                          _send1dato
 ---------------------------------------------------------------------------------
 (1) _leer3SEG                                             2     2      0     409
                                              5 BANK0      2     2      0
                         _leerSERVOS
                          _send1dato
 ---------------------------------------------------------------------------------
 (1) _send1dato                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _leerSERVOS                                           4     4      0     378
                                              1 BANK0      4     4      0
                     _leerposiciones
 ---------------------------------------------------------------------------------
 (3) _leerposiciones                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _guardar3SEG                                          2     2      0     769
                                              6 BANK0      2     2      0
                      _guardarservos
 ---------------------------------------------------------------------------------
 (2) _guardarservos                                        4     4      0     769
                                              2 BANK0      4     4      0
                  _guardarposiciones
 ---------------------------------------------------------------------------------
 (3) _guardarposiciones                                    2     1      1     422
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _configuraciones                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AnalogReadServo                                      2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _rutInter                                             4     4      0       0
                                              2 COMMON     4     4      0
                             _servos
 ---------------------------------------------------------------------------------
 (5) _servos                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AnalogReadServo
   _configuraciones
   _guardar3SEG
     _guardarservos
       _guardarposiciones
   _leer3SEG
     _leerSERVOS
       _leerposiciones
     _send1dato
   _send1dato

 _rutInter (ROOT)
   _servos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat May 15 10:32:27 2021

                       l200 037A                         l203 0386                         l220 039A  
                       l205 038A                         l206 038B                         l134 018C  
                       l231 026C                         l135 013D                         l152 0112  
                       l136 016F                         l217 02C4                         l145 0179  
                       l242 0316                         l146 0186                         l138 0143  
                       l155 0136                         l235 0343                         l139 016E  
                       l181 0059                         l245 0341                         l238 0368  
                       l191 00C1                         l185 0075                         l177 003B  
                       l194 03A0                         l189 0093                         l197 03A6  
                       u410 0116                         u411 0115                         _PR2 0092  
                       u700 038A                         u701 0389                         u710 03A6  
                       u711 03A5                         u800 005F                         u720 02C4  
                       u801 005E                         u721 02C3                         u810 0071  
                       u730 026C                         u811 0070                         u731 026B  
                       u820 007B                         u821 007A                         u830 008F  
                       u831 008E                         u840 0099                         u760 0027  
                       u841 0098                         u761 0026                         u745 0325  
                       u770 0037                         u690 037E                         u850 0142  
                       u771 0036                         u691 037D                         u755 034C  
                       u851 0141                         u780 0041                         u860 0173  
                       u781 0040                         u861 0172                         u790 0055  
                       u870 017E                         u791 0054                         u871 017D  
                       fsr0 0004                 leerSERVOS@n 0024                        l2001 024C  
                      l2003 0262                        l2011 0315                        l2005 0266  
                      l2013 0317                        l2021 0332                        l2101 014B  
                      l2031 0349                        l2015 031B                        l2041 0021  
                      l2017 0322                        l2105 0152                        l2113 015B  
                      l2051 0037                        l2035 0359                        l2027 0342  
                      l2115 0173                        l2107 0154                        l2123 018C  
                      l2061 0055                        l2053 0041                        l2045 0028  
                      l2301 0363                        l2029 0344                        l2117 017E  
                      l2071 0071                        l2063 005F                        l2055 0046  
                      l2047 002D                        l1511 00CB                        l2303 02AA  
                      l2119 0183                        l2305 00A7                        l2081 008F  
                      l2073 007B                        l2065 0064                        l2057 004B  
                      l2049 0031                        l1601 012F                        l1521 00E4  
                      l1513 00CD                        l1505 00C2                        l2083 0099  
                      l2075 0080                        l2067 0069                        l2059 004F  
                      l1603 0134                        l1531 00EB                        l1523 00E6  
                      l1515 00D9                        l1507 00C6                        l2077 0085  
                      l2069 006B                        l1605 0135                        l1541 00F2  
                      l1533 00EC                        l1525 00E8                        l1517 00DD  
                      l1509 00C7                        l2093 0137                        l2079 0089  
                      l2087 009E                        l1551 00F7                        l1543 00F3  
                      l1535 00EF                        l1527 00E9                        l1519 00DE  
                      l1561 0104                        l1553 00FD                        l1545 00F4  
                      l1537 00F0                        l1529 00EA                        l2097 0145  
                      l1571 010E                        l1563 0105                        l1555 00FF  
                      l1547 00F5                        l1539 00F1                        l2099 0149  
                      l1581 011D                        l1573 010F                        l1565 0106  
                      l1557 0100                        l1549 00F6                        l2293 0163  
                      l1591 012A                        l1583 011E                        l1575 0111  
                      l1567 0108                        l1559 0101                        l2295 019A  
                      l1593 012B                        l1585 0121                        l1577 0116  
                      l1569 010C                        l2297 033C                        l1595 012C  
                      l1587 0124                        l1579 011C                        l2299 0254  
                      l1597 012D                        l1589 0127                        l1941 0379  
                      l1599 012E                        l1943 037E                        l1951 0393  
                      l1945 0384                        l1937 036C                        l1953 0396  
                      l1947 0385                        l1939 0376                        l1971 0296  
                      l1965 0272                        l1949 038F                        l1957 039E  
                      l1967 027E                        l1975 02A2                        l1959 0270  
                      l1991 0218                        l1969 028A                        l1977 02B8  
                      l1993 0225                        l1985 0216                        l1979 02BE  
                      l1995 0232                        l1997 023F                        _POT1 0030  
                      _POT2 002F                        _POT3 002E                        _POT4 002D  
                      _UART 0031                        _TMR0 0001                        _main 0137  
                      btemp 007E            ?_configuraciones 0070                        start 000E  
              ?_guardar3SEG 0070                       ?_main 0070                       _EEADR 010D  
                     _EEDAT 010C                       _ANSEL 0188                       i1l124 01FF  
                     i1l125 01F9                       i1l126 01FE                       i1l119 01C1  
                     i1l128 020A                       i1l169 0314                       _RCREG 001A  
                     u40_20 02CE                       u40_21 02CD                       _TMR1H 000F  
                     _TMR1L 000E                       _SPBRG 0099                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       u60_24 01EA                       u61_20 01EF  
                     u53_20 01A9                       u61_21 01EE                       u53_21 01A8  
                     u62_20 01F3                       u54_20 01C0                       u62_21 01F2  
                     u54_21 01BF                       u63_20 01F7                       u55_20 01C7  
                     u63_21 01F6                       u55_21 01C6                       u64_20 01FD  
                     u56_20 01D5                       u64_21 01FC                       u56_21 01D4  
                     u65_20 0204                       u57_20 01D9                       u65_21 0203  
                     u57_21 01D8                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     u58_20 01DD                       u58_21 01DC                       u59_20 01E7  
                     u59_21 01E3                       _TXREG 0019               send1dato@dato 0020  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __initialization 0011                __end_of_main 01A5                      ??_main 0028  
                    _ADRESH 001E                      _CCPR2L 001B                      _EECON2 018D  
    __size_of_guardarservos 0058                      _ANSELH 0189                      i1l2307 02FA  
                    i1l1461 02C5                      i1l1701 01C7                      i1l1471 02D7  
                    i1l1463 02CE                      i1l1703 01C8                      i1l1711 01D1  
                    i1l1481 02E1                      i1l1473 02D9                      i1l1465 02D1  
                    i1l1713 01D5                      i1l1721 01EB                      i1l1705 01CC  
                    i1l1491 02EB                      i1l1483 02E3                      i1l1475 02DB  
                    i1l1467 02D3                      i1l1731 0204                      i1l1723 01EF  
                    i1l1715 01D9                      i1l1707 01CD                      i1l1493 02ED  
                    i1l1485 02E5                      i1l1477 02DD                      i1l1469 02D5  
                    i1l1733 0208                      i1l1725 01F3                      i1l1717 01DD  
                    i1l1709 01CF                      i1l1495 02EF                      i1l1487 02E7  
                    i1l1479 02DF                      i1l1735 0209                      i1l1727 01F7  
                    i1l1719 01EA                      i1l1489 02E9                      i1l1729 01FD  
                    i1l1499 02F1                      i1l1691 01A9                      i1l1693 01B4  
                    i1l1695 01B5                      i1l1697 01BA                      i1l1689 01A5  
                    i1l1699 01C0                      _EXTREC 002C                      _SERVOS 0032  
          __end_of_leer3SEG 0342                      _servos 02C5     __size_of_leerposiciones 000F  
                    saved_w 007E            __end_of_rutInter 0213  guardarposiciones@direccion 0020  
   __end_of__initialization 001D              __pcstackCOMMON 0070               _guardarservos 026D  
      __size_of_guardar3SEG 0027              _OPTION_REGbits 0081    __size_of_AnalogReadServo 00A1  
                __pbssBANK0 002B          __size_of_send1dato 000C                  __pmaintext 0137  
            ?_guardarservos 0070                  __pintentry 0004                     ?_servos 0070  
                _leerSERVOS 0213                   ?_leer3SEG 0070           _guardarposiciones 0369  
        ?_guardarposiciones 0020         ??_guardarposiciones 0076    __size_of_configuraciones 0075  
                 ?_rutInter 0070                     __ptext1 0315                     __ptext2 039B  
                   __ptext3 0213                     __ptext4 038C                     __ptext5 0342  
                   __ptext6 026D                     __ptext7 0369                     __ptext8 00C2  
                   __ptext9 0021             __size_of_servos 0050                   _T1CONbits 0010  
            _leerposiciones 038C                   _T2CONbits 0012           __end_of_send1dato 03A7  
 __end_of_guardarposiciones 038C                  ??_leer3SEG 0025        end_of_initialization 001D  
         ??_AnalogReadServo 0020             ??_guardarservos 0022                   _RCSTAbits 0018  
                 _SERVINDIC 0077                  ??_rutInter 0072      __end_of_leerposiciones 039B  
                 _PORTBbits 0006                   _PORTDbits 0008                   _PORTEbits 0009  
               ?_leerSERVOS 0070                 _CCP2CONbits 001D                   _TXSTAbits 0098  
         leerSERVOS@desfase 0023             ?_leerposiciones 0070              __end_of_servos 0315  
         ??_configuraciones 0076         start_initialization 0011  __size_of_guardarposiciones 0023  
      guardarservos@desfase 0024               ??_guardar3SEG 0026         __size_of_leerSERVOS 005A  
                  ??_servos 0070                 __pbssCOMMON 0076                   ___latbits 0002  
                 _datEEPROM 0076               __pcstackBANK0 0020              guardarservos@n 0025  
         __size_of_leer3SEG 002D           __size_of_rutInter 006E         __end_of_guardar3SEG 0369  
           _AnalogReadServo 0021                   _send1dato 039B           interrupt_function 0004  
                  _IOCBbits 0096                    _PIE1bits 008C                    _PIR1bits 000C  
                _ADCON0bits 001F                  _ADCON1bits 009F     leerposiciones@direccion 0020  
              ??_leerSERVOS 0021                  ?_send1dato 0070                  _EECON1bits 018C  
          ??_leerposiciones 0076       __end_of_guardarservos 02C5             _configuraciones 00C2  
               _guardar3SEG 0342          __end_of_leerSERVOS 026D     __end_of_AnalogReadServo 00C2  
                  __ptext10 01A5                    __ptext11 02C5                    _leer3SEG 0315  
             __size_of_main 006E                    _posicion 002B    guardarposiciones@guardar 0021  
                  _rutInter 01A5                  _INTCONbits 000B                    intlevel1 0000  
               ??_send1dato 0076     __end_of_configuraciones 0137                  _OSCCONbits 008F  
          ?_AnalogReadServo 0070  
