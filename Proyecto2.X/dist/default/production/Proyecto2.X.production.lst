

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri May 14 18:54:46 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0019                     _TXREG	set	25
   216  001E                     _ADRESH	set	30
   217  0008                     _PORTDbits	set	8
   218  0001                     _TMR0	set	1
   219  0018                     _RCSTAbits	set	24
   220  0012                     _T2CONbits	set	18
   221  001B                     _CCPR2L	set	27
   222  001D                     _CCP2CONbits	set	29
   223  0009                     _PORTE	set	9
   224  0008                     _PORTD	set	8
   225  0007                     _PORTC	set	7
   226  0006                     _PORTB	set	6
   227  0005                     _PORTA	set	5
   228  001A                     _RCREG	set	26
   229  0009                     _PORTEbits	set	9
   230  0010                     _T1CONbits	set	16
   231  0006                     _PORTBbits	set	6
   232  000E                     _TMR1L	set	14
   233  000F                     _TMR1H	set	15
   234  000C                     _PIR1bits	set	12
   235  001F                     _ADCON0bits	set	31
   236  000B                     _INTCONbits	set	11
   237  0081                     _OPTION_REGbits	set	129
   238  0098                     _TXSTAbits	set	152
   239  0099                     _SPBRG	set	153
   240  0092                     _PR2	set	146
   241  009F                     _ADCON1bits	set	159
   242  0096                     _IOCBbits	set	150
   243  008C                     _PIE1bits	set	140
   244  008F                     _OSCCONbits	set	143
   245  0089                     _TRISE	set	137
   246  0088                     _TRISD	set	136
   247  0087                     _TRISC	set	135
   248  0086                     _TRISB	set	134
   249  0085                     _TRISA	set	133
   250  010C                     _EEDAT	set	268
   251  010D                     _EEADR	set	269
   252  018D                     _EECON2	set	397
   253  018C                     _EECON1bits	set	396
   254  0189                     _ANSELH	set	393
   255  0188                     _ANSEL	set	392
   256                           
   257                           	psect	cinit
   258  0011                     start_initialization:	
   259                           ; #config settings
   260                           
   261  0011                     __initialization:
   262                           
   263                           ; Clear objects allocated to COMMON
   264  0011  01F6               	clrf	__pbssCOMMON& (0+127)
   265  0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   266                           
   267                           ; Clear objects allocated to BANK0
   268  0013  1283               	bcf	3,5	;RP0=0, select bank0
   269  0014  1303               	bcf	3,6	;RP1=0, select bank0
   270  0015  01AB               	clrf	__pbssBANK0& (0+127)
   271  0016  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   272  0017  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   273  0018  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   274  0019  01AF               	clrf	(__pbssBANK0+4)& (0+127)
   275  001A  01B0               	clrf	(__pbssBANK0+5)& (0+127)
   276  001B  01B1               	clrf	(__pbssBANK0+6)& (0+127)
   277  001C  01B2               	clrf	(__pbssBANK0+7)& (0+127)
   278  001D                     end_of_initialization:	
   279                           ;End of C runtime variable initialization code
   280                           
   281  001D                     __end_of__initialization:
   282  001D  0183               	clrf	3
   283  001E  120A  118A  2A53   	ljmp	_main	;jump to C main() function
   284                           
   285                           	psect	bssCOMMON
   286  0076                     __pbssCOMMON:
   287  0076                     _datEEPROM:
   288  0076                     	ds	1
   289  0077                     _SERVINDIC:
   290  0077                     	ds	1
   291                           
   292                           	psect	bssBANK0
   293  002B                     __pbssBANK0:
   294  002B                     _posicion:
   295  002B                     	ds	1
   296  002C                     _EXTREC:
   297  002C                     	ds	1
   298  002D                     _POT4:
   299  002D                     	ds	1
   300  002E                     _POT3:
   301  002E                     	ds	1
   302  002F                     _POT2:
   303  002F                     	ds	1
   304  0030                     _POT1:
   305  0030                     	ds	1
   306  0031                     _UART:
   307  0031                     	ds	1
   308  0032                     _SERVOS:
   309  0032                     	ds	1
   310                           
   311                           	psect	cstackCOMMON
   312  0070                     __pcstackCOMMON:
   313  0070                     ?_servos:
   314  0070                     ??_servos:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ?_configuraciones:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_leer3SEG:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_guardar3SEG:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_AnalogReadServo:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_rutInter:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_main:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_send1dato:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_guardarservos:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_leerposiciones:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_leerSERVOS:	
   345                           ; 1 bytes @ 0x0
   346                           
   347                           
   348                           ; 1 bytes @ 0x0
   349  0070                     	ds	2
   350  0072                     ??_rutInter:
   351                           
   352                           ; 1 bytes @ 0x2
   353  0072                     	ds	4
   354  0076                     ??_configuraciones:
   355  0076                     ??_send1dato:	
   356                           ; 1 bytes @ 0x6
   357                           
   358  0076                     ??_guardarposiciones:	
   359                           ; 1 bytes @ 0x6
   360                           
   361  0076                     ??_leerposiciones:	
   362                           ; 1 bytes @ 0x6
   363                           
   364                           
   365                           	psect	cstackBANK0
   366  0020                     __pcstackBANK0:	
   367                           ; 1 bytes @ 0x6
   368                           
   369  0020                     ??_AnalogReadServo:
   370  0020                     ?_guardarposiciones:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0020                     send1dato@dato:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0020                     guardarposiciones@direccion:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0020                     leerposiciones@direccion:	
   380                           ; 1 bytes @ 0x0
   381                           
   382                           
   383                           ; 1 bytes @ 0x0
   384  0020                     	ds	1
   385  0021                     ??_leerSERVOS:
   386  0021                     guardarposiciones@guardar:	
   387                           ; 1 bytes @ 0x1
   388                           
   389                           
   390                           ; 1 bytes @ 0x1
   391  0021                     	ds	1
   392  0022                     ??_guardarservos:
   393                           
   394                           ; 1 bytes @ 0x2
   395  0022                     	ds	1
   396  0023                     leerSERVOS@desfase:
   397                           
   398                           ; 1 bytes @ 0x3
   399  0023                     	ds	1
   400  0024                     guardarservos@desfase:
   401  0024                     leerSERVOS@n:	
   402                           ; 1 bytes @ 0x4
   403                           
   404                           
   405                           ; 1 bytes @ 0x4
   406  0024                     	ds	1
   407  0025                     ??_leer3SEG:
   408  0025                     guardarservos@n:	
   409                           ; 1 bytes @ 0x5
   410                           
   411                           
   412                           ; 1 bytes @ 0x5
   413  0025                     	ds	1
   414  0026                     ??_guardar3SEG:
   415                           
   416                           ; 1 bytes @ 0x6
   417  0026                     	ds	2
   418  0028                     ??_main:
   419                           
   420                           ; 1 bytes @ 0x8
   421  0028                     	ds	3
   422                           
   423                           	psect	maintext
   424  0253                     __pmaintext:	
   425 ;;
   426 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   427 ;;
   428 ;; *************** function _main *****************
   429 ;; Defined at:
   430 ;;		line 129 in file "mainP2.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : B00/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   444 ;;      Params:         0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0
   446 ;;      Temps:          0       3       0       0       0
   447 ;;      Totals:         0       3       0       0       0
   448 ;;Total ram usage:        3 bytes
   449 ;; Hardware stack levels required when called:    5
   450 ;; This function calls:
   451 ;;		_AnalogReadServo
   452 ;;		_configuraciones
   453 ;;		_guardar3SEG
   454 ;;		_leer3SEG
   455 ;; This function is called by:
   456 ;;		Startup code after reset
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460                           
   461                           ;psect for function _main
   462  0253                     _main:
   463  0253                     l2060:	
   464                           ;incstack = 0
   465                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   466                           
   467                           
   468                           ;mainP2.c: 130:     configuraciones();
   469  0253  120A  118A  20C2  120A  118A  	fcall	_configuraciones
   470  0258  2A8E               	goto	l2078
   471  0259                     l132:	
   472                           ;mainP2.c: 134:             case 0:
   473                           
   474                           
   475                           ;mainP2.c: 135:                 PORTBbits.RB7 = 0;
   476  0259  1386               	bcf	6,7	;volatile
   477                           
   478                           ;mainP2.c: 137:                 if(UART.datorecep){
   479  025A  1C31               	btfss	_UART,0
   480  025B  2A5D               	goto	u831
   481  025C  2A5E               	goto	u830
   482  025D                     u831:
   483  025D  2A71               	goto	l133
   484  025E                     u830:
   485  025E  2A63               	goto	l2068
   486  025F                     l135:	
   487                           ;mainP2.c: 139:                         case '1':
   488                           
   489                           
   490                           ;mainP2.c: 140:                             T1CONbits.TMR1ON = 1;
   491  025F  1410               	bsf	16,0	;volatile
   492                           
   493                           ;mainP2.c: 141:                             PORTEbits.RE0 = 1;
   494  0260  1409               	bsf	9,0	;volatile
   495  0261                     l2064:
   496                           
   497                           ;mainP2.c: 142:                             EXTREC = 0;
   498  0261  01AC               	clrf	_EXTREC
   499                           
   500                           ;mainP2.c: 143:                             break;
   501  0262  2A70               	goto	l136
   502  0263                     l2068:
   503  0263  082C               	movf	_EXTREC,w
   504  0264  00A8               	movwf	??_main
   505  0265  01A9               	clrf	??_main+1
   506                           
   507                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   508                           ; Switch size 1, requested type "simple"
   509                           ; Number of cases is 1, Range of values is 0 to 0
   510                           ; switch strategies available:
   511                           ; Name         Instructions Cycles
   512                           ; simple_byte            4     3 (average)
   513                           ; direct_byte           11     8 (fixed)
   514                           ; jumptable            260     6 (fixed)
   515                           ;	Chosen strategy is simple_byte
   516  0266  0829               	movf	??_main+1,w
   517  0267  3A00               	xorlw	0	; case 0
   518  0268  1903               	skipnz
   519  0269  2A6B               	goto	l2248
   520  026A  2A70               	goto	l136
   521  026B                     l2248:
   522                           
   523                           ; Switch size 1, requested type "simple"
   524                           ; Number of cases is 1, Range of values is 49 to 49
   525                           ; switch strategies available:
   526                           ; Name         Instructions Cycles
   527                           ; simple_byte            4     3 (average)
   528                           ; direct_byte           14    11 (fixed)
   529                           ; jumptable            263     9 (fixed)
   530                           ;	Chosen strategy is simple_byte
   531  026B  0828               	movf	??_main,w
   532  026C  3A31               	xorlw	49	; case 49
   533  026D  1903               	skipnz
   534  026E  2A5F               	goto	l135
   535  026F  2A70               	goto	l136
   536  0270                     l136:
   537                           
   538                           ;mainP2.c: 148:                     UART.datorecep = 0;
   539  0270  1031               	bcf	_UART,0
   540  0271                     l133:	
   541                           ;mainP2.c: 149:                 }
   542                           
   543                           
   544                           ;mainP2.c: 151:                 if(T1CONbits.TMR1ON){
   545  0271  1C10               	btfss	16,0	;volatile
   546  0272  2A74               	goto	u841
   547  0273  2A75               	goto	u840
   548  0274                     u841:
   549  0274  2A8E               	goto	l131
   550  0275                     u840:
   551  0275                     l2070:
   552                           
   553                           ;mainP2.c: 152:                     leer3SEG();
   554  0275  120A  118A  22F7  120A  118A  	fcall	_leer3SEG
   555  027A  2A8E               	goto	l2078
   556  027B                     l140:	
   557                           ;mainP2.c: 156:             case 1:
   558                           
   559                           
   560                           ;mainP2.c: 157:                 PORTBbits.RB7 = 1;
   561  027B  1786               	bsf	6,7	;volatile
   562                           
   563                           ;mainP2.c: 159:                 if(SERVOS.guardar){
   564  027C  1FB2               	btfss	_SERVOS,7
   565  027D  2A7F               	goto	u851
   566  027E  2A80               	goto	u850
   567  027F                     u851:
   568  027F  2A88               	goto	l141
   569  0280                     u850:
   570  0280                     l2072:
   571                           
   572                           ;mainP2.c: 160:                     guardar3SEG();
   573  0280  120A  118A  2324  120A  118A  	fcall	_guardar3SEG
   574  0285                     l2074:
   575                           
   576                           ;mainP2.c: 161:                     SERVOS.guardar = 0;
   577  0285  1283               	bcf	3,5	;RP0=0, select bank0
   578  0286  1303               	bcf	3,6	;RP1=0, select bank0
   579  0287  13B2               	bcf	_SERVOS,7
   580  0288                     l141:	
   581                           ;mainP2.c: 162:                 }
   582                           
   583                           
   584                           ;mainP2.c: 164:                 AnalogReadServo();
   585  0288  120A  118A  2021  120A  118A  	fcall	_AnalogReadServo
   586                           
   587                           ;mainP2.c: 165:                 break;
   588  028D  2A8E               	goto	l2078
   589  028E                     l131:
   590  028E                     l2078:
   591  028E  1283               	bcf	3,5	;RP0=0, select bank0
   592  028F  1303               	bcf	3,6	;RP1=0, select bank0
   593  0290  0E32               	swapf	_SERVOS,w
   594  0291  00A8               	movwf	??_main
   595  0292  0CA8               	rrf	??_main,f
   596  0293  0C28               	rrf	??_main,w
   597  0294  3901               	andlw	1
   598  0295  00A9               	movwf	??_main+1
   599  0296  01AA               	clrf	??_main+2
   600                           
   601                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   602                           ; Switch size 1, requested type "simple"
   603                           ; Number of cases is 1, Range of values is 0 to 0
   604                           ; switch strategies available:
   605                           ; Name         Instructions Cycles
   606                           ; simple_byte            4     3 (average)
   607                           ; direct_byte           11     8 (fixed)
   608                           ; jumptable            260     6 (fixed)
   609                           ;	Chosen strategy is simple_byte
   610  0297  082A               	movf	??_main+2,w
   611  0298  3A00               	xorlw	0	; case 0
   612  0299  1903               	skipnz
   613  029A  2A9C               	goto	l2250
   614  029B  2A8E               	goto	l2078
   615  029C                     l2250:
   616                           
   617                           ; Switch size 1, requested type "simple"
   618                           ; Number of cases is 2, Range of values is 0 to 1
   619                           ; switch strategies available:
   620                           ; Name         Instructions Cycles
   621                           ; simple_byte            7     4 (average)
   622                           ; direct_byte           14     8 (fixed)
   623                           ; jumptable            260     6 (fixed)
   624                           ;	Chosen strategy is simple_byte
   625  029C  0829               	movf	??_main+1,w
   626  029D  3A00               	xorlw	0	; case 0
   627  029E  1903               	skipnz
   628  029F  2A59               	goto	l132
   629  02A0  3A01               	xorlw	1	; case 1
   630  02A1  1903               	skipnz
   631  02A2  2A7B               	goto	l140
   632  02A3  2A8E               	goto	l2078
   633  02A4  120A  118A  280E   	ljmp	start
   634  02A7                     __end_of_main:
   635                           
   636                           	psect	text1
   637  02F7                     __ptext1:	
   638 ;; *************** function _leer3SEG *****************
   639 ;; Defined at:
   640 ;;		line 409 in file "mainP2.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      void 
   647 ;; Registers used:
   648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   654 ;;      Params:         0       0       0       0       0
   655 ;;      Locals:         0       0       0       0       0
   656 ;;      Temps:          0       2       0       0       0
   657 ;;      Totals:         0       2       0       0       0
   658 ;;Total ram usage:        2 bytes
   659 ;; Hardware stack levels used:    1
   660 ;; Hardware stack levels required when called:    4
   661 ;; This function calls:
   662 ;;		_leerSERVOS
   663 ;;		_send1dato
   664 ;; This function is called by:
   665 ;;		_main
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           
   670                           ;psect for function _leer3SEG
   671  02F7                     _leer3SEG:
   672  02F7                     l1978:	
   673                           ;incstack = 0
   674                           ; Regs used in _leer3SEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   675                           
   676                           
   677                           ;mainP2.c: 410:     switch(posicion){
   678  02F7  2B14               	goto	l1988
   679  02F8                     l237:	
   680                           ;mainP2.c: 411:         case 31:
   681                           
   682                           
   683                           ;mainP2.c: 412:             T1CONbits.TMR1ON = 0;
   684  02F8  1010               	bcf	16,0	;volatile
   685  02F9                     l1980:
   686                           
   687                           ;mainP2.c: 413:             TMR1H = 0;
   688  02F9  018F               	clrf	15	;volatile
   689                           
   690                           ;mainP2.c: 414:             TMR1L = 0;
   691  02FA  018E               	clrf	14	;volatile
   692                           
   693                           ;mainP2.c: 415:             posicion = 0;
   694  02FB  01AB               	clrf	_posicion
   695                           
   696                           ;mainP2.c: 416:             PORTE = 0;
   697  02FC  0189               	clrf	9	;volatile
   698  02FD                     l1982:
   699                           
   700                           ;mainP2.c: 417:             send1dato('a');
   701  02FD  3061               	movlw	97
   702  02FE  120A  118A  237D  120A  118A  	fcall	_send1dato
   703                           
   704                           ;mainP2.c: 418:             break;
   705  0303  2B23               	goto	l240
   706  0304                     l1984:
   707                           
   708                           ;mainP2.c: 420:             leerSERVOS(4*posicion);
   709  0304  082B               	movf	_posicion,w
   710  0305  00A5               	movwf	??_leer3SEG
   711  0306  3001               	movlw	1
   712  0307                     u725:
   713  0307  1003               	clrc
   714  0308  0DA5               	rlf	??_leer3SEG,f
   715  0309  3EFF               	addlw	-1
   716  030A  1D03               	skipz
   717  030B  2B07               	goto	u725
   718  030C  1003               	clrc
   719  030D  0D25               	rlf	??_leer3SEG,w
   720  030E  120A  118A  21A1  120A  118A  	fcall	_leerSERVOS
   721                           
   722                           ;mainP2.c: 421:             break;
   723  0313  2B23               	goto	l240
   724  0314                     l1988:
   725  0314  1283               	bcf	3,5	;RP0=0, select bank0
   726  0315  1303               	bcf	3,6	;RP1=0, select bank0
   727  0316  082B               	movf	_posicion,w
   728  0317  00A5               	movwf	??_leer3SEG
   729  0318  01A6               	clrf	??_leer3SEG+1
   730                           
   731                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   732                           ; Switch size 1, requested type "simple"
   733                           ; Number of cases is 1, Range of values is 0 to 0
   734                           ; switch strategies available:
   735                           ; Name         Instructions Cycles
   736                           ; simple_byte            4     3 (average)
   737                           ; direct_byte           11     8 (fixed)
   738                           ; jumptable            260     6 (fixed)
   739                           ;	Chosen strategy is simple_byte
   740  0319  0826               	movf	??_leer3SEG+1,w
   741  031A  3A00               	xorlw	0	; case 0
   742  031B  1903               	skipnz
   743  031C  2B1E               	goto	l2252
   744  031D  2B04               	goto	l1984
   745  031E                     l2252:
   746                           
   747                           ; Switch size 1, requested type "simple"
   748                           ; Number of cases is 1, Range of values is 31 to 31
   749                           ; switch strategies available:
   750                           ; Name         Instructions Cycles
   751                           ; simple_byte            4     3 (average)
   752                           ; direct_byte           14    11 (fixed)
   753                           ; jumptable            263     9 (fixed)
   754                           ;	Chosen strategy is simple_byte
   755  031E  0825               	movf	??_leer3SEG,w
   756  031F  3A1F               	xorlw	31	; case 31
   757  0320  1903               	skipnz
   758  0321  2AF8               	goto	l237
   759  0322  2B04               	goto	l1984
   760  0323                     l240:
   761  0323  0008               	return
   762  0324                     __end_of_leer3SEG:
   763                           
   764                           	psect	text2
   765  037D                     __ptext2:	
   766 ;; *************** function _send1dato *****************
   767 ;; Defined at:
   768 ;;		line 338 in file "mainP2.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;  dato            1    wreg     unsigned char 
   771 ;; Auto vars:     Size  Location     Type
   772 ;;  dato            1    0[BANK0 ] unsigned char 
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   782 ;;      Params:         0       0       0       0       0
   783 ;;      Locals:         0       1       0       0       0
   784 ;;      Temps:          0       0       0       0       0
   785 ;;      Totals:         0       1       0       0       0
   786 ;;Total ram usage:        1 bytes
   787 ;; Hardware stack levels used:    1
   788 ;; Hardware stack levels required when called:    2
   789 ;; This function calls:
   790 ;;		Nothing
   791 ;; This function is called by:
   792 ;;		_leer3SEG
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           
   797                           ;psect for function _send1dato
   798  037D                     _send1dato:
   799                           
   800                           ;incstack = 0
   801                           ; Regs used in _send1dato: [wreg]
   802                           ;send1dato@dato stored from wreg
   803  037D  1283               	bcf	3,5	;RP0=0, select bank0
   804  037E  1303               	bcf	3,6	;RP1=0, select bank0
   805  037F  00A0               	movwf	send1dato@dato
   806  0380                     l1924:
   807                           
   808                           ;mainP2.c: 339:     TXREG = dato;
   809  0380  0820               	movf	send1dato@dato,w
   810  0381  0099               	movwf	25	;volatile
   811  0382                     l189:	
   812                           ;mainP2.c: 340:     while(!TXSTAbits.TRMT);
   813                           
   814  0382  1683               	bsf	3,5	;RP0=1, select bank1
   815  0383  1303               	bcf	3,6	;RP1=0, select bank1
   816  0384  1C98               	btfss	24,1	;volatile
   817  0385  2B87               	goto	u691
   818  0386  2B88               	goto	u690
   819  0387                     u691:
   820  0387  2B82               	goto	l189
   821  0388                     u690:
   822  0388                     l192:
   823  0388  0008               	return
   824  0389                     __end_of_send1dato:
   825                           
   826                           	psect	text3
   827  01A1                     __ptext3:	
   828 ;; *************** function _leerSERVOS *****************
   829 ;; Defined at:
   830 ;;		line 379 in file "mainP2.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;  desfase         1    wreg     unsigned char 
   833 ;; Auto vars:     Size  Location     Type
   834 ;;  desfase         1    3[BANK0 ] unsigned char 
   835 ;;  n               1    4[BANK0 ] unsigned char 
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   845 ;;      Params:         0       0       0       0       0
   846 ;;      Locals:         0       2       0       0       0
   847 ;;      Temps:          0       2       0       0       0
   848 ;;      Totals:         0       4       0       0       0
   849 ;;Total ram usage:        4 bytes
   850 ;; Hardware stack levels used:    1
   851 ;; Hardware stack levels required when called:    3
   852 ;; This function calls:
   853 ;;		_leerposiciones
   854 ;; This function is called by:
   855 ;;		_leer3SEG
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           
   860                           ;psect for function _leerSERVOS
   861  01A1                     _leerSERVOS:
   862                           
   863                           ;incstack = 0
   864                           ; Regs used in _leerSERVOS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   865                           ;leerSERVOS@desfase stored from wreg
   866  01A1  1283               	bcf	3,5	;RP0=0, select bank0
   867  01A2  1303               	bcf	3,6	;RP1=0, select bank0
   868  01A3  00A3               	movwf	leerSERVOS@desfase
   869  01A4                     l1952:
   870                           
   871                           ;mainP2.c: 380:     for(uint8_t n=0;n<=3; n++){
   872  01A4  01A4               	clrf	leerSERVOS@n
   873  01A5  29DA               	goto	l1968
   874  01A6                     l1958:
   875  01A6  0823               	movf	leerSERVOS@desfase,w
   876  01A7  0724               	addwf	leerSERVOS@n,w
   877  01A8  120A  118A  236E  120A  118A  	fcall	_leerposiciones
   878  01AD  1283               	bcf	3,5	;RP0=0, select bank0
   879  01AE  1303               	bcf	3,6	;RP1=0, select bank0
   880  01AF  00A1               	movwf	??_leerSERVOS
   881  01B0  0821               	movf	??_leerSERVOS,w
   882  01B1  00B0               	movwf	_POT1
   883                           
   884                           ;mainP2.c: 383:                 break;
   885  01B2  29F0               	goto	l1970
   886  01B3                     l1960:
   887  01B3  0823               	movf	leerSERVOS@desfase,w
   888  01B4  0724               	addwf	leerSERVOS@n,w
   889  01B5  120A  118A  236E  120A  118A  	fcall	_leerposiciones
   890  01BA  1283               	bcf	3,5	;RP0=0, select bank0
   891  01BB  1303               	bcf	3,6	;RP1=0, select bank0
   892  01BC  00A1               	movwf	??_leerSERVOS
   893  01BD  0821               	movf	??_leerSERVOS,w
   894  01BE  00AF               	movwf	_POT2
   895                           
   896                           ;mainP2.c: 385:                 break;
   897  01BF  29F0               	goto	l1970
   898  01C0                     l1962:
   899  01C0  0823               	movf	leerSERVOS@desfase,w
   900  01C1  0724               	addwf	leerSERVOS@n,w
   901  01C2  120A  118A  236E  120A  118A  	fcall	_leerposiciones
   902  01C7  1283               	bcf	3,5	;RP0=0, select bank0
   903  01C8  1303               	bcf	3,6	;RP1=0, select bank0
   904  01C9  00A1               	movwf	??_leerSERVOS
   905  01CA  0821               	movf	??_leerSERVOS,w
   906  01CB  00AE               	movwf	_POT3
   907                           
   908                           ;mainP2.c: 387:                 break;
   909  01CC  29F0               	goto	l1970
   910  01CD                     l1964:
   911  01CD  0823               	movf	leerSERVOS@desfase,w
   912  01CE  0724               	addwf	leerSERVOS@n,w
   913  01CF  120A  118A  236E  120A  118A  	fcall	_leerposiciones
   914  01D4  1283               	bcf	3,5	;RP0=0, select bank0
   915  01D5  1303               	bcf	3,6	;RP1=0, select bank0
   916  01D6  00A1               	movwf	??_leerSERVOS
   917  01D7  0821               	movf	??_leerSERVOS,w
   918  01D8  00AD               	movwf	_POT4
   919                           
   920                           ;mainP2.c: 389:                 break;
   921  01D9  29F0               	goto	l1970
   922  01DA                     l1968:
   923  01DA  0824               	movf	leerSERVOS@n,w
   924  01DB  00A1               	movwf	??_leerSERVOS
   925  01DC  01A2               	clrf	??_leerSERVOS+1
   926                           
   927                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   928                           ; Switch size 1, requested type "simple"
   929                           ; Number of cases is 1, Range of values is 0 to 0
   930                           ; switch strategies available:
   931                           ; Name         Instructions Cycles
   932                           ; simple_byte            4     3 (average)
   933                           ; direct_byte           11     8 (fixed)
   934                           ; jumptable            260     6 (fixed)
   935                           ;	Chosen strategy is simple_byte
   936  01DD  0822               	movf	??_leerSERVOS+1,w
   937  01DE  3A00               	xorlw	0	; case 0
   938  01DF  1903               	skipnz
   939  01E0  29E2               	goto	l2254
   940  01E1  29F0               	goto	l1970
   941  01E2                     l2254:
   942                           
   943                           ; Switch size 1, requested type "simple"
   944                           ; Number of cases is 4, Range of values is 0 to 3
   945                           ; switch strategies available:
   946                           ; Name         Instructions Cycles
   947                           ; simple_byte           13     7 (average)
   948                           ; direct_byte           20     8 (fixed)
   949                           ; jumptable            260     6 (fixed)
   950                           ;	Chosen strategy is simple_byte
   951  01E2  0821               	movf	??_leerSERVOS,w
   952  01E3  3A00               	xorlw	0	; case 0
   953  01E4  1903               	skipnz
   954  01E5  29A6               	goto	l1958
   955  01E6  3A01               	xorlw	1	; case 1
   956  01E7  1903               	skipnz
   957  01E8  29B3               	goto	l1960
   958  01E9  3A03               	xorlw	3	; case 2
   959  01EA  1903               	skipnz
   960  01EB  29C0               	goto	l1962
   961  01EC  3A01               	xorlw	1	; case 3
   962  01ED  1903               	skipnz
   963  01EE  29CD               	goto	l1964
   964  01EF  29F0               	goto	l1970
   965  01F0                     l1970:
   966                           
   967                           ;mainP2.c: 391:     }
   968  01F0  3001               	movlw	1
   969  01F1  00A1               	movwf	??_leerSERVOS
   970  01F2  0821               	movf	??_leerSERVOS,w
   971  01F3  07A4               	addwf	leerSERVOS@n,f
   972  01F4                     l1972:
   973  01F4  3004               	movlw	4
   974  01F5  0224               	subwf	leerSERVOS@n,w
   975  01F6  1C03               	skipc
   976  01F7  29F9               	goto	u711
   977  01F8  29FA               	goto	u710
   978  01F9                     u711:
   979  01F9  29DA               	goto	l1968
   980  01FA                     u710:
   981  01FA                     l226:
   982  01FA  0008               	return
   983  01FB                     __end_of_leerSERVOS:
   984                           
   985                           	psect	text4
   986  036E                     __ptext4:	
   987 ;; *************** function _leerposiciones *****************
   988 ;; Defined at:
   989 ;;		line 372 in file "mainP2.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  direccion       1    wreg     unsigned char 
   992 ;; Auto vars:     Size  Location     Type
   993 ;;  direccion       1    0[BANK0 ] unsigned char 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      unsigned char 
   996 ;; Registers used:
   997 ;;		wreg
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1003 ;;      Params:         0       0       0       0       0
  1004 ;;      Locals:         0       1       0       0       0
  1005 ;;      Temps:          0       0       0       0       0
  1006 ;;      Totals:         0       1       0       0       0
  1007 ;;Total ram usage:        1 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; Hardware stack levels required when called:    2
  1010 ;; This function calls:
  1011 ;;		Nothing
  1012 ;; This function is called by:
  1013 ;;		_leerSERVOS
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           
  1018                           ;psect for function _leerposiciones
  1019  036E                     _leerposiciones:
  1020                           
  1021                           ;incstack = 0
  1022                           ; Regs used in _leerposiciones: [wreg]
  1023                           ;leerposiciones@direccion stored from wreg
  1024  036E  1283               	bcf	3,5	;RP0=0, select bank0
  1025  036F  1303               	bcf	3,6	;RP1=0, select bank0
  1026  0370  00A0               	movwf	leerposiciones@direccion
  1027  0371                     l1916:
  1028                           
  1029                           ;mainP2.c: 373:     EEADR = direccion;
  1030  0371  0820               	movf	leerposiciones@direccion,w
  1031  0372  1283               	bcf	3,5	;RP0=0, select bank2
  1032  0373  1703               	bsf	3,6	;RP1=1, select bank2
  1033  0374  008D               	movwf	13	;volatile
  1034  0375                     l1918:
  1035                           
  1036                           ;mainP2.c: 374:     EECON1bits.EEPGD = 0;
  1037  0375  1683               	bsf	3,5	;RP0=1, select bank3
  1038  0376  1703               	bsf	3,6	;RP1=1, select bank3
  1039  0377  138C               	bcf	12,7	;volsfr
  1040  0378                     l1920:
  1041                           
  1042                           ;mainP2.c: 375:     EECON1bits.RD = 1;
  1043  0378  140C               	bsf	12,0	;volsfr
  1044                           
  1045                           ;mainP2.c: 376:     return EEDAT;
  1046  0379  1283               	bcf	3,5	;RP0=0, select bank2
  1047  037A  1703               	bsf	3,6	;RP1=1, select bank2
  1048  037B  080C               	movf	12,w	;volatile
  1049  037C                     l215:
  1050  037C  0008               	return
  1051  037D                     __end_of_leerposiciones:
  1052                           
  1053                           	psect	text5
  1054  0324                     __ptext5:	
  1055 ;; *************** function _guardar3SEG *****************
  1056 ;; Defined at:
  1057 ;;		line 394 in file "mainP2.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;		None
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;		None
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      void 
  1064 ;; Registers used:
  1065 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1071 ;;      Params:         0       0       0       0       0
  1072 ;;      Locals:         0       0       0       0       0
  1073 ;;      Temps:          0       2       0       0       0
  1074 ;;      Totals:         0       2       0       0       0
  1075 ;;Total ram usage:        2 bytes
  1076 ;; Hardware stack levels used:    1
  1077 ;; Hardware stack levels required when called:    4
  1078 ;; This function calls:
  1079 ;;		_guardarservos
  1080 ;; This function is called by:
  1081 ;;		_main
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           
  1086                           ;psect for function _guardar3SEG
  1087  0324                     _guardar3SEG:
  1088  0324                     l1994:	
  1089                           ;incstack = 0
  1090                           ; Regs used in _guardar3SEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1091                           
  1092                           
  1093                           ;mainP2.c: 395:     switch(posicion){
  1094  0324  2B3B               	goto	l2002
  1095  0325                     l230:	
  1096                           ;mainP2.c: 396:         case 31:
  1097                           
  1098                           
  1099                           ;mainP2.c: 397:             T1CONbits.TMR1ON = 0;
  1100  0325  1010               	bcf	16,0	;volatile
  1101  0326                     l1996:
  1102                           
  1103                           ;mainP2.c: 398:             TMR1H = 0;
  1104  0326  018F               	clrf	15	;volatile
  1105                           
  1106                           ;mainP2.c: 399:             TMR1L = 0;
  1107  0327  018E               	clrf	14	;volatile
  1108                           
  1109                           ;mainP2.c: 400:             posicion = 0;
  1110  0328  01AB               	clrf	_posicion
  1111                           
  1112                           ;mainP2.c: 401:             PORTE = 0;
  1113  0329  0189               	clrf	9	;volatile
  1114                           
  1115                           ;mainP2.c: 402:             break;
  1116  032A  2B4A               	goto	l233
  1117  032B                     l1998:
  1118                           
  1119                           ;mainP2.c: 404:             guardarservos(4*posicion);
  1120  032B  082B               	movf	_posicion,w
  1121  032C  00A6               	movwf	??_guardar3SEG
  1122  032D  3001               	movlw	1
  1123  032E                     u735:
  1124  032E  1003               	clrc
  1125  032F  0DA6               	rlf	??_guardar3SEG,f
  1126  0330  3EFF               	addlw	-1
  1127  0331  1D03               	skipz
  1128  0332  2B2E               	goto	u735
  1129  0333  1003               	clrc
  1130  0334  0D26               	rlf	??_guardar3SEG,w
  1131  0335  120A  118A  21FB  120A  118A  	fcall	_guardarservos
  1132                           
  1133                           ;mainP2.c: 405:             break;
  1134  033A  2B4A               	goto	l233
  1135  033B                     l2002:
  1136  033B  1283               	bcf	3,5	;RP0=0, select bank0
  1137  033C  1303               	bcf	3,6	;RP1=0, select bank0
  1138  033D  082B               	movf	_posicion,w
  1139  033E  00A6               	movwf	??_guardar3SEG
  1140  033F  01A7               	clrf	??_guardar3SEG+1
  1141                           
  1142                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1143                           ; Switch size 1, requested type "simple"
  1144                           ; Number of cases is 1, Range of values is 0 to 0
  1145                           ; switch strategies available:
  1146                           ; Name         Instructions Cycles
  1147                           ; simple_byte            4     3 (average)
  1148                           ; direct_byte           11     8 (fixed)
  1149                           ; jumptable            260     6 (fixed)
  1150                           ;	Chosen strategy is simple_byte
  1151  0340  0827               	movf	??_guardar3SEG+1,w
  1152  0341  3A00               	xorlw	0	; case 0
  1153  0342  1903               	skipnz
  1154  0343  2B45               	goto	l2256
  1155  0344  2B2B               	goto	l1998
  1156  0345                     l2256:
  1157                           
  1158                           ; Switch size 1, requested type "simple"
  1159                           ; Number of cases is 1, Range of values is 31 to 31
  1160                           ; switch strategies available:
  1161                           ; Name         Instructions Cycles
  1162                           ; simple_byte            4     3 (average)
  1163                           ; direct_byte           14    11 (fixed)
  1164                           ; jumptable            263     9 (fixed)
  1165                           ;	Chosen strategy is simple_byte
  1166  0345  0826               	movf	??_guardar3SEG,w
  1167  0346  3A1F               	xorlw	31	; case 31
  1168  0347  1903               	skipnz
  1169  0348  2B25               	goto	l230
  1170  0349  2B2B               	goto	l1998
  1171  034A                     l233:
  1172  034A  0008               	return
  1173  034B                     __end_of_guardar3SEG:
  1174                           
  1175                           	psect	text6
  1176  01FB                     __ptext6:	
  1177 ;; *************** function _guardarservos *****************
  1178 ;; Defined at:
  1179 ;;		line 357 in file "mainP2.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  desfase         1    wreg     unsigned char 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  desfase         1    4[BANK0 ] unsigned char 
  1184 ;;  n               1    5[BANK0 ] unsigned char 
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1194 ;;      Params:         0       0       0       0       0
  1195 ;;      Locals:         0       2       0       0       0
  1196 ;;      Temps:          0       2       0       0       0
  1197 ;;      Totals:         0       4       0       0       0
  1198 ;;Total ram usage:        4 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    3
  1201 ;; This function calls:
  1202 ;;		_guardarposiciones
  1203 ;; This function is called by:
  1204 ;;		_guardar3SEG
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           
  1209                           ;psect for function _guardarservos
  1210  01FB                     _guardarservos:
  1211                           
  1212                           ;incstack = 0
  1213                           ; Regs used in _guardarservos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1214                           ;guardarservos@desfase stored from wreg
  1215  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1216  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1217  01FD  00A4               	movwf	guardarservos@desfase
  1218  01FE                     l1926:
  1219                           
  1220                           ;mainP2.c: 358:     for(uint8_t n=0;n<=3;n++){
  1221  01FE  01A5               	clrf	guardarservos@n
  1222  01FF  2A30               	goto	l1942
  1223  0200                     l1932:
  1224  0200  0824               	movf	guardarservos@desfase,w
  1225  0201  0725               	addwf	guardarservos@n,w
  1226  0202  00A2               	movwf	??_guardarservos
  1227  0203  0822               	movf	??_guardarservos,w
  1228  0204  00A0               	movwf	guardarposiciones@direccion
  1229  0205  0830               	movf	_POT1,w
  1230  0206  120A  118A  234B  120A  118A  	fcall	_guardarposiciones
  1231                           
  1232                           ;mainP2.c: 361:                 break;
  1233  020B  2A46               	goto	l1944
  1234  020C                     l1934:
  1235  020C  0824               	movf	guardarservos@desfase,w
  1236  020D  0725               	addwf	guardarservos@n,w
  1237  020E  00A2               	movwf	??_guardarservos
  1238  020F  0822               	movf	??_guardarservos,w
  1239  0210  00A0               	movwf	guardarposiciones@direccion
  1240  0211  082F               	movf	_POT2,w
  1241  0212  120A  118A  234B  120A  118A  	fcall	_guardarposiciones
  1242                           
  1243                           ;mainP2.c: 363:                 break;
  1244  0217  2A46               	goto	l1944
  1245  0218                     l1936:
  1246  0218  0824               	movf	guardarservos@desfase,w
  1247  0219  0725               	addwf	guardarservos@n,w
  1248  021A  00A2               	movwf	??_guardarservos
  1249  021B  0822               	movf	??_guardarservos,w
  1250  021C  00A0               	movwf	guardarposiciones@direccion
  1251  021D  082E               	movf	_POT3,w
  1252  021E  120A  118A  234B  120A  118A  	fcall	_guardarposiciones
  1253                           
  1254                           ;mainP2.c: 365:                 break;
  1255  0223  2A46               	goto	l1944
  1256  0224                     l1938:
  1257  0224  0824               	movf	guardarservos@desfase,w
  1258  0225  0725               	addwf	guardarservos@n,w
  1259  0226  00A2               	movwf	??_guardarservos
  1260  0227  0822               	movf	??_guardarservos,w
  1261  0228  00A0               	movwf	guardarposiciones@direccion
  1262  0229  082D               	movf	_POT4,w
  1263  022A  120A  118A  234B  120A  118A  	fcall	_guardarposiciones
  1264                           
  1265                           ;mainP2.c: 367:                 break;
  1266  022F  2A46               	goto	l1944
  1267  0230                     l1942:
  1268  0230  0825               	movf	guardarservos@n,w
  1269  0231  00A2               	movwf	??_guardarservos
  1270  0232  01A3               	clrf	??_guardarservos+1
  1271                           
  1272                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1273                           ; Switch size 1, requested type "simple"
  1274                           ; Number of cases is 1, Range of values is 0 to 0
  1275                           ; switch strategies available:
  1276                           ; Name         Instructions Cycles
  1277                           ; simple_byte            4     3 (average)
  1278                           ; direct_byte           11     8 (fixed)
  1279                           ; jumptable            260     6 (fixed)
  1280                           ;	Chosen strategy is simple_byte
  1281  0233  0823               	movf	??_guardarservos+1,w
  1282  0234  3A00               	xorlw	0	; case 0
  1283  0235  1903               	skipnz
  1284  0236  2A38               	goto	l2258
  1285  0237  2A46               	goto	l1944
  1286  0238                     l2258:
  1287                           
  1288                           ; Switch size 1, requested type "simple"
  1289                           ; Number of cases is 4, Range of values is 0 to 3
  1290                           ; switch strategies available:
  1291                           ; Name         Instructions Cycles
  1292                           ; simple_byte           13     7 (average)
  1293                           ; direct_byte           20     8 (fixed)
  1294                           ; jumptable            260     6 (fixed)
  1295                           ;	Chosen strategy is simple_byte
  1296  0238  0822               	movf	??_guardarservos,w
  1297  0239  3A00               	xorlw	0	; case 0
  1298  023A  1903               	skipnz
  1299  023B  2A00               	goto	l1932
  1300  023C  3A01               	xorlw	1	; case 1
  1301  023D  1903               	skipnz
  1302  023E  2A0C               	goto	l1934
  1303  023F  3A03               	xorlw	3	; case 2
  1304  0240  1903               	skipnz
  1305  0241  2A18               	goto	l1936
  1306  0242  3A01               	xorlw	1	; case 3
  1307  0243  1903               	skipnz
  1308  0244  2A24               	goto	l1938
  1309  0245  2A46               	goto	l1944
  1310  0246                     l1944:
  1311                           
  1312                           ;mainP2.c: 369:     }
  1313  0246  3001               	movlw	1
  1314  0247  1283               	bcf	3,5	;RP0=0, select bank0
  1315  0248  1303               	bcf	3,6	;RP1=0, select bank0
  1316  0249  00A2               	movwf	??_guardarservos
  1317  024A  0822               	movf	??_guardarservos,w
  1318  024B  07A5               	addwf	guardarservos@n,f
  1319  024C                     l1946:
  1320  024C  3004               	movlw	4
  1321  024D  0225               	subwf	guardarservos@n,w
  1322  024E  1C03               	skipc
  1323  024F  2A51               	goto	u701
  1324  0250  2A52               	goto	u700
  1325  0251                     u701:
  1326  0251  2A30               	goto	l1942
  1327  0252                     u700:
  1328  0252                     l212:
  1329  0252  0008               	return
  1330  0253                     __end_of_guardarservos:
  1331                           
  1332                           	psect	text7
  1333  034B                     __ptext7:	
  1334 ;; *************** function _guardarposiciones *****************
  1335 ;; Defined at:
  1336 ;;		line 343 in file "mainP2.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  guardar         1    wreg     unsigned char 
  1339 ;;  direccion       1    0[BANK0 ] unsigned char 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  guardar         1    1[BANK0 ] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1351 ;;      Params:         0       1       0       0       0
  1352 ;;      Locals:         0       1       0       0       0
  1353 ;;      Temps:          0       0       0       0       0
  1354 ;;      Totals:         0       2       0       0       0
  1355 ;;Total ram usage:        2 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; Hardware stack levels required when called:    2
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		_guardarservos
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           
  1366                           ;psect for function _guardarposiciones
  1367  034B                     _guardarposiciones:
  1368                           
  1369                           ;incstack = 0
  1370                           ; Regs used in _guardarposiciones: [wreg]
  1371                           ;guardarposiciones@guardar stored from wreg
  1372  034B  1283               	bcf	3,5	;RP0=0, select bank0
  1373  034C  1303               	bcf	3,6	;RP1=0, select bank0
  1374  034D  00A1               	movwf	guardarposiciones@guardar
  1375  034E                     l1904:
  1376                           
  1377                           ;mainP2.c: 344:     EEADR = direccion;
  1378  034E  0820               	movf	guardarposiciones@direccion,w
  1379  034F  1283               	bcf	3,5	;RP0=0, select bank2
  1380  0350  1703               	bsf	3,6	;RP1=1, select bank2
  1381  0351  008D               	movwf	13	;volatile
  1382                           
  1383                           ;mainP2.c: 345:     EEDAT = guardar;
  1384  0352  1283               	bcf	3,5	;RP0=0, select bank0
  1385  0353  1303               	bcf	3,6	;RP1=0, select bank0
  1386  0354  0821               	movf	guardarposiciones@guardar,w
  1387  0355  1283               	bcf	3,5	;RP0=0, select bank2
  1388  0356  1703               	bsf	3,6	;RP1=1, select bank2
  1389  0357  008C               	movwf	12	;volatile
  1390  0358                     l1906:
  1391                           
  1392                           ;mainP2.c: 346:     EECON1bits.WREN = 1;
  1393  0358  1683               	bsf	3,5	;RP0=1, select bank3
  1394  0359  1703               	bsf	3,6	;RP1=1, select bank3
  1395  035A  150C               	bsf	12,2	;volsfr
  1396  035B                     l1908:
  1397                           
  1398                           ;mainP2.c: 347:     INTCONbits.GIE = 0;
  1399  035B  138B               	bcf	11,7	;volatile
  1400  035C                     l195:	
  1401                           ;mainP2.c: 348:     while(INTCONbits.GIE);
  1402                           
  1403  035C  1B8B               	btfsc	11,7	;volatile
  1404  035D  2B5F               	goto	u671
  1405  035E  2B60               	goto	u670
  1406  035F                     u671:
  1407  035F  2B5C               	goto	l195
  1408  0360                     u670:
  1409  0360                     l1910:
  1410                           
  1411                           ;mainP2.c: 349:     EECON2 = 0X55;
  1412  0360  3055               	movlw	85
  1413  0361  1683               	bsf	3,5	;RP0=1, select bank3
  1414  0362  1703               	bsf	3,6	;RP1=1, select bank3
  1415  0363  008D               	movwf	13	;volsfr
  1416                           
  1417                           ;mainP2.c: 350:     EECON2 = 0XAA;
  1418  0364  30AA               	movlw	170
  1419  0365  008D               	movwf	13	;volsfr
  1420  0366                     l1912:
  1421                           
  1422                           ;mainP2.c: 351:     EECON1bits.WR = 1;
  1423  0366  148C               	bsf	12,1	;volsfr
  1424  0367                     l1914:
  1425                           
  1426                           ;mainP2.c: 352:     INTCONbits.GIE = 1;
  1427  0367  178B               	bsf	11,7	;volatile
  1428  0368                     l198:	
  1429                           ;mainP2.c: 353:     while(EECON1bits.WR);
  1430                           
  1431  0368  188C               	btfsc	12,1	;volsfr
  1432  0369  2B6B               	goto	u681
  1433  036A  2B6C               	goto	u680
  1434  036B                     u681:
  1435  036B  2B68               	goto	l198
  1436  036C                     u680:
  1437  036C                     l200:
  1438                           
  1439                           ;mainP2.c: 354:     EECON1bits.WREN = 0;
  1440  036C  110C               	bcf	12,2	;volsfr
  1441  036D                     l201:
  1442  036D  0008               	return
  1443  036E                     __end_of_guardarposiciones:
  1444                           
  1445                           	psect	text8
  1446  00C2                     __ptext8:	
  1447 ;; *************** function _configuraciones *****************
  1448 ;; Defined at:
  1449 ;;		line 174 in file "mainP2.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;		None
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      void 
  1456 ;; Registers used:
  1457 ;;		wreg, status,2, status,0
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1463 ;;      Params:         0       0       0       0       0
  1464 ;;      Locals:         0       0       0       0       0
  1465 ;;      Temps:          0       0       0       0       0
  1466 ;;      Totals:         0       0       0       0       0
  1467 ;;Total ram usage:        0 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; Hardware stack levels required when called:    2
  1470 ;; This function calls:
  1471 ;;		Nothing
  1472 ;; This function is called by:
  1473 ;;		_main
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           
  1478                           ;psect for function _configuraciones
  1479  00C2                     _configuraciones:
  1480  00C2                     l1486:	
  1481                           ;incstack = 0
  1482                           ; Regs used in _configuraciones: [wreg+status,2+status,0]
  1483                           
  1484                           
  1485                           ;mainP2.c: 176:     ANSEL = 0X0F;
  1486  00C2  300F               	movlw	15
  1487  00C3  1683               	bsf	3,5	;RP0=1, select bank3
  1488  00C4  1703               	bsf	3,6	;RP1=1, select bank3
  1489  00C5  0088               	movwf	8	;volatile
  1490  00C6                     l1488:
  1491                           
  1492                           ;mainP2.c: 177:     ANSELH = 0X00;
  1493  00C6  0189               	clrf	9	;volatile
  1494  00C7                     l1490:
  1495                           
  1496                           ;mainP2.c: 178:     TRISA = 0X0F;
  1497  00C7  300F               	movlw	15
  1498  00C8  1683               	bsf	3,5	;RP0=1, select bank1
  1499  00C9  1303               	bcf	3,6	;RP1=0, select bank1
  1500  00CA  0085               	movwf	5	;volatile
  1501  00CB                     l1492:
  1502                           
  1503                           ;mainP2.c: 179:     TRISB = 0X07;
  1504  00CB  3007               	movlw	7
  1505  00CC  0086               	movwf	6	;volatile
  1506  00CD                     l1494:
  1507                           
  1508                           ;mainP2.c: 180:     TRISC = 0X82;
  1509  00CD  3082               	movlw	130
  1510  00CE  0087               	movwf	7	;volatile
  1511                           
  1512                           ;mainP2.c: 181:     TRISD = 0X00;
  1513  00CF  0188               	clrf	8	;volatile
  1514                           
  1515                           ;mainP2.c: 182:     TRISE = 0X00;
  1516  00D0  0189               	clrf	9	;volatile
  1517                           
  1518                           ;mainP2.c: 183:     PORTA = 0X00;
  1519  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1520  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1521  00D3  0185               	clrf	5	;volatile
  1522                           
  1523                           ;mainP2.c: 184:     PORTB = 0X00;
  1524  00D4  0186               	clrf	6	;volatile
  1525                           
  1526                           ;mainP2.c: 185:     PORTC = 0X00;
  1527  00D5  0187               	clrf	7	;volatile
  1528                           
  1529                           ;mainP2.c: 186:     PORTD = 0X00;
  1530  00D6  0188               	clrf	8	;volatile
  1531                           
  1532                           ;mainP2.c: 187:     PORTE = 0X00;
  1533  00D7  0189               	clrf	9	;volatile
  1534                           
  1535                           ;mainP2.c: 188:     posicion = 0;
  1536  00D8  01AB               	clrf	_posicion
  1537  00D9                     l1496:
  1538                           
  1539                           ;mainP2.c: 190:     OSCCONbits.IRCF = 0b111;
  1540  00D9  3070               	movlw	112
  1541  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  1542  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  1543  00DC  048F               	iorwf	15,f	;volatile
  1544  00DD                     l1498:
  1545                           
  1546                           ;mainP2.c: 191:     OSCCONbits.SCS = 0b1;
  1547  00DD  140F               	bsf	15,0	;volatile
  1548  00DE                     l1500:
  1549                           
  1550                           ;mainP2.c: 194:     T1CONbits.T1CKPS = 0B10;
  1551  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1552  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1553  00E0  0810               	movf	16,w	;volatile
  1554  00E1  39CF               	andlw	-49
  1555  00E2  3820               	iorlw	32
  1556  00E3  0090               	movwf	16	;volatile
  1557  00E4                     l1502:
  1558                           
  1559                           ;mainP2.c: 195:     TMR1H = 0B00111100;
  1560  00E4  303C               	movlw	60
  1561  00E5  008F               	movwf	15	;volatile
  1562  00E6                     l1504:
  1563                           
  1564                           ;mainP2.c: 196:     TMR1L = 0B10101111;
  1565  00E6  30AF               	movlw	175
  1566  00E7  008E               	movwf	14	;volatile
  1567  00E8                     l1506:
  1568                           
  1569                           ;mainP2.c: 197:     T1CONbits.TMR1ON = 0;
  1570  00E8  1010               	bcf	16,0	;volatile
  1571  00E9                     l1508:
  1572                           
  1573                           ;mainP2.c: 200:     INTCONbits.TMR0IF = 0;
  1574  00E9  110B               	bcf	11,2	;volatile
  1575  00EA                     l1510:
  1576                           
  1577                           ;mainP2.c: 201:     INTCONbits.TMR0IE = 1;
  1578  00EA  168B               	bsf	11,5	;volatile
  1579  00EB                     l1512:
  1580                           
  1581                           ;mainP2.c: 202:     PIR1bits.TMR1IF = 0;
  1582  00EB  100C               	bcf	12,0	;volatile
  1583  00EC                     l1514:
  1584                           
  1585                           ;mainP2.c: 203:     PIE1bits.TMR1IE = 1;
  1586  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  1587  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  1588  00EE  140C               	bsf	12,0	;volatile
  1589  00EF                     l1516:
  1590                           
  1591                           ;mainP2.c: 204:     INTCONbits.RBIF = 0;
  1592  00EF  100B               	bcf	11,0	;volatile
  1593  00F0                     l1518:
  1594                           
  1595                           ;mainP2.c: 205:     INTCONbits.RBIE = 0;
  1596  00F0  118B               	bcf	11,3	;volatile
  1597  00F1                     l1520:
  1598                           
  1599                           ;mainP2.c: 206:     INTCONbits.PEIE = 1;
  1600  00F1  170B               	bsf	11,6	;volatile
  1601  00F2                     l1522:
  1602                           
  1603                           ;mainP2.c: 207:     PIE1bits.RCIE = 1;
  1604  00F2  168C               	bsf	12,5	;volatile
  1605  00F3                     l1524:
  1606                           
  1607                           ;mainP2.c: 208:     INTCONbits.GIE = 1;
  1608  00F3  178B               	bsf	11,7	;volatile
  1609  00F4                     l1526:
  1610                           
  1611                           ;mainP2.c: 211:     IOCBbits.IOCB0 = 1;
  1612  00F4  1416               	bsf	22,0	;volatile
  1613  00F5                     l1528:
  1614                           
  1615                           ;mainP2.c: 212:     IOCBbits.IOCB1 = 1;
  1616  00F5  1496               	bsf	22,1	;volatile
  1617  00F6                     l1530:
  1618                           
  1619                           ;mainP2.c: 213:     IOCBbits.IOCB2 = 1;
  1620  00F6  1516               	bsf	22,2	;volatile
  1621  00F7                     l1532:
  1622                           
  1623                           ;mainP2.c: 216:     ADCON0bits.ADCS = 0b10;
  1624  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1625  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1626  00F9  081F               	movf	31,w	;volatile
  1627  00FA  393F               	andlw	-193
  1628  00FB  3880               	iorlw	128
  1629  00FC  009F               	movwf	31	;volatile
  1630  00FD                     l1534:
  1631                           
  1632                           ;mainP2.c: 217:     ADCON0bits.CHS = 0b0000;
  1633  00FD  30C3               	movlw	-61
  1634  00FE  059F               	andwf	31,f	;volatile
  1635  00FF                     l1536:
  1636                           
  1637                           ;mainP2.c: 218:     ADCON0bits.GO = 0b0;
  1638  00FF  109F               	bcf	31,1	;volatile
  1639  0100                     l1538:
  1640                           
  1641                           ;mainP2.c: 219:     ADCON0bits.ADON = 0b1;
  1642  0100  141F               	bsf	31,0	;volatile
  1643  0101                     l1540:
  1644                           
  1645                           ;mainP2.c: 220:     ADCON1bits.ADFM = 0b0;
  1646  0101  1683               	bsf	3,5	;RP0=1, select bank1
  1647  0102  1303               	bcf	3,6	;RP1=0, select bank1
  1648  0103  139F               	bcf	31,7	;volatile
  1649  0104                     l1542:
  1650                           
  1651                           ;mainP2.c: 221:     ADCON1bits.VCFG1 = 0b0;
  1652  0104  129F               	bcf	31,5	;volatile
  1653  0105                     l1544:
  1654                           
  1655                           ;mainP2.c: 222:     ADCON1bits.VCFG0 = 0b0;
  1656  0105  121F               	bcf	31,4	;volatile
  1657  0106                     l1546:
  1658                           
  1659                           ;mainP2.c: 225:     PR2 = 249;
  1660  0106  30F9               	movlw	249
  1661  0107  0092               	movwf	18	;volatile
  1662  0108                     l1548:
  1663                           
  1664                           ;mainP2.c: 226:     CCP2CONbits.CCP2M = 0b1111;
  1665  0108  300F               	movlw	15
  1666  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1667  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1668  010B  049D               	iorwf	29,f	;volatile
  1669  010C                     l1550:
  1670                           
  1671                           ;mainP2.c: 227:     CCPR2L = 0x0F;
  1672  010C  300F               	movlw	15
  1673  010D  009B               	movwf	27	;volatile
  1674  010E                     l1552:
  1675                           
  1676                           ;mainP2.c: 228:     PIR1bits.TMR2IF = 0;
  1677  010E  108C               	bcf	12,1	;volatile
  1678  010F                     l1554:
  1679                           
  1680                           ;mainP2.c: 229:     T2CONbits.T2CKPS = 0b11;
  1681  010F  3003               	movlw	3
  1682  0110  0492               	iorwf	18,f	;volatile
  1683  0111                     l1556:
  1684                           
  1685                           ;mainP2.c: 230:     T2CONbits.TMR2ON = 1;
  1686  0111  1512               	bsf	18,2	;volatile
  1687  0112                     l147:	
  1688                           ;mainP2.c: 232:     while(!PIR1bits.TMR2IF);
  1689                           
  1690  0112  1C8C               	btfss	12,1	;volatile
  1691  0113  2915               	goto	u401
  1692  0114  2916               	goto	u400
  1693  0115                     u401:
  1694  0115  2912               	goto	l147
  1695  0116                     u400:
  1696  0116                     l1558:
  1697                           
  1698                           ;mainP2.c: 233:     TRISC = 0X80;
  1699  0116  3080               	movlw	128
  1700  0117  1683               	bsf	3,5	;RP0=1, select bank1
  1701  0118  1303               	bcf	3,6	;RP1=0, select bank1
  1702  0119  0087               	movwf	7	;volatile
  1703                           
  1704                           ;mainP2.c: 236:     SPBRG = 12;
  1705  011A  300C               	movlw	12
  1706  011B  0099               	movwf	25	;volatile
  1707  011C                     l1560:
  1708                           
  1709                           ;mainP2.c: 237:     TXSTAbits.BRGH = 0;
  1710  011C  1118               	bcf	24,2	;volatile
  1711  011D                     l1562:
  1712                           
  1713                           ;mainP2.c: 238:     TXSTAbits.TXEN = 1;
  1714  011D  1698               	bsf	24,5	;volatile
  1715  011E                     l1564:
  1716                           
  1717                           ;mainP2.c: 239:     RCSTAbits.CREN = 1;
  1718  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1719  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0120  1618               	bsf	24,4	;volatile
  1721  0121                     l1566:
  1722                           
  1723                           ;mainP2.c: 240:     TXSTAbits.SYNC = 0;
  1724  0121  1683               	bsf	3,5	;RP0=1, select bank1
  1725  0122  1303               	bcf	3,6	;RP1=0, select bank1
  1726  0123  1218               	bcf	24,4	;volatile
  1727  0124                     l1568:
  1728                           
  1729                           ;mainP2.c: 241:     RCSTAbits.SPEN = 1;
  1730  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1731  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1732  0126  1798               	bsf	24,7	;volatile
  1733  0127                     l1570:
  1734                           
  1735                           ;mainP2.c: 244:     OSCCONbits.SCS = 1;
  1736  0127  1683               	bsf	3,5	;RP0=1, select bank1
  1737  0128  1303               	bcf	3,6	;RP1=0, select bank1
  1738  0129  140F               	bsf	15,0	;volatile
  1739  012A                     l1572:
  1740                           
  1741                           ;mainP2.c: 245:     OPTION_REGbits.T0CS = 0;
  1742  012A  1281               	bcf	1,5	;volatile
  1743  012B                     l1574:
  1744                           
  1745                           ;mainP2.c: 246:     OPTION_REGbits.PSA = 0;
  1746  012B  1181               	bcf	1,3	;volatile
  1747  012C                     l1576:
  1748                           
  1749                           ;mainP2.c: 247:     OPTION_REGbits.PS2 = 0;
  1750  012C  1101               	bcf	1,2	;volatile
  1751  012D                     l1578:
  1752                           
  1753                           ;mainP2.c: 248:     OPTION_REGbits.PS1 = 1;
  1754  012D  1481               	bsf	1,1	;volatile
  1755  012E                     l1580:
  1756                           
  1757                           ;mainP2.c: 249:     OPTION_REGbits.PS0 = 1;
  1758  012E  1401               	bsf	1,0	;volatile
  1759  012F                     l1582:
  1760                           
  1761                           ;mainP2.c: 250:     INTCONbits.T0IF = 0;
  1762  012F  110B               	bcf	11,2	;volatile
  1763                           
  1764                           ;mainP2.c: 251:     TMR0 = 131;
  1765  0130  3083               	movlw	131
  1766  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1767  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1768  0133  0081               	movwf	1	;volatile
  1769  0134                     l1584:
  1770                           
  1771                           ;mainP2.c: 252:     SERVOS.bit1 = 0;
  1772  0134  12B2               	bcf	_SERVOS,5
  1773  0135                     l1586:
  1774                           
  1775                           ;mainP2.c: 253:     SERVOS.modo = 0;
  1776  0135  1332               	bcf	_SERVOS,6
  1777  0136                     l150:
  1778  0136  0008               	return
  1779  0137                     __end_of_configuraciones:
  1780                           
  1781                           	psect	text9
  1782  0021                     __ptext9:	
  1783 ;; *************** function _AnalogReadServo *****************
  1784 ;; Defined at:
  1785 ;;		line 290 in file "mainP2.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;		None
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1799 ;;      Params:         0       0       0       0       0
  1800 ;;      Locals:         0       0       0       0       0
  1801 ;;      Temps:          0       2       0       0       0
  1802 ;;      Totals:         0       2       0       0       0
  1803 ;;Total ram usage:        2 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    2
  1806 ;; This function calls:
  1807 ;;		Nothing
  1808 ;; This function is called by:
  1809 ;;		_main
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           
  1814                           ;psect for function _AnalogReadServo
  1815  0021                     _AnalogReadServo:
  1816  0021                     l2008:	
  1817                           ;incstack = 0
  1818                           ; Regs used in _AnalogReadServo: [wreg-fsr0h+status,2+status,0]
  1819                           
  1820                           
  1821                           ;mainP2.c: 292:     if(!ADCON0bits.GO){
  1822  0021  1283               	bcf	3,5	;RP0=0, select bank0
  1823  0022  1303               	bcf	3,6	;RP1=0, select bank0
  1824  0023  189F               	btfsc	31,1	;volatile
  1825  0024  2826               	goto	u741
  1826  0025  2827               	goto	u740
  1827  0026                     u741:
  1828  0026  28C1               	goto	l186
  1829  0027                     u740:
  1830  0027  289E               	goto	l2054
  1831  0028                     l2012:
  1832                           
  1833                           ;mainP2.c: 295:                  POT2 = ADRESH;
  1834  0028  081E               	movf	30,w	;volatile
  1835  0029  00A0               	movwf	??_AnalogReadServo
  1836  002A  0820               	movf	??_AnalogReadServo,w
  1837  002B  00AF               	movwf	_POT2
  1838                           
  1839                           ;mainP2.c: 296:             break;
  1840  002C  28C1               	goto	l186
  1841  002D                     l2014:
  1842                           
  1843                           ;mainP2.c: 299:                 ADCON0bits.CHS = 2;
  1844  002D  081F               	movf	31,w	;volatile
  1845  002E  39C3               	andlw	-61
  1846  002F  3808               	iorlw	8
  1847  0030  009F               	movwf	31	;volatile
  1848  0031                     l2016:
  1849                           
  1850                           ;mainP2.c: 300:                 if(POT2>=160) POT2 = 160;
  1851  0031  30A0               	movlw	160
  1852  0032  022F               	subwf	_POT2,w
  1853  0033  1C03               	skipc
  1854  0034  2836               	goto	u751
  1855  0035  2837               	goto	u750
  1856  0036                     u751:
  1857  0036  283B               	goto	l172
  1858  0037                     u750:
  1859  0037                     l2018:
  1860  0037  30A0               	movlw	160
  1861  0038  00A0               	movwf	??_AnalogReadServo
  1862  0039  0820               	movf	??_AnalogReadServo,w
  1863  003A  00AF               	movwf	_POT2
  1864  003B                     l172:
  1865                           
  1866                           ;mainP2.c: 301:                 if(POT2<=10) POT2 = 10;
  1867  003B  300B               	movlw	11
  1868  003C  022F               	subwf	_POT2,w
  1869  003D  1803               	skipnc
  1870  003E  2840               	goto	u761
  1871  003F  2841               	goto	u760
  1872  0040                     u761:
  1873  0040  28C1               	goto	l186
  1874  0041                     u760:
  1875  0041                     l2020:
  1876  0041  300A               	movlw	10
  1877  0042  00A0               	movwf	??_AnalogReadServo
  1878  0043  0820               	movf	??_AnalogReadServo,w
  1879  0044  00AF               	movwf	_POT2
  1880  0045  28C1               	goto	l186
  1881  0046                     l2022:
  1882                           
  1883                           ;mainP2.c: 305:                 POT3 = ADRESH;
  1884  0046  081E               	movf	30,w	;volatile
  1885  0047  00A0               	movwf	??_AnalogReadServo
  1886  0048  0820               	movf	??_AnalogReadServo,w
  1887  0049  00AE               	movwf	_POT3
  1888                           
  1889                           ;mainP2.c: 306:             break;
  1890  004A  28C1               	goto	l186
  1891  004B                     l2024:
  1892                           
  1893                           ;mainP2.c: 309:                 ADCON0bits.CHS = 3;
  1894  004B  081F               	movf	31,w	;volatile
  1895  004C  39C3               	andlw	-61
  1896  004D  380C               	iorlw	12
  1897  004E  009F               	movwf	31	;volatile
  1898  004F                     l2026:
  1899                           
  1900                           ;mainP2.c: 310:                 if(POT3>=160) POT3 = 160;
  1901  004F  30A0               	movlw	160
  1902  0050  022E               	subwf	_POT3,w
  1903  0051  1C03               	skipc
  1904  0052  2854               	goto	u771
  1905  0053  2855               	goto	u770
  1906  0054                     u771:
  1907  0054  2859               	goto	l176
  1908  0055                     u770:
  1909  0055                     l2028:
  1910  0055  30A0               	movlw	160
  1911  0056  00A0               	movwf	??_AnalogReadServo
  1912  0057  0820               	movf	??_AnalogReadServo,w
  1913  0058  00AE               	movwf	_POT3
  1914  0059                     l176:
  1915                           
  1916                           ;mainP2.c: 311:                 if(POT3<=10) POT3 = 10;
  1917  0059  300B               	movlw	11
  1918  005A  022E               	subwf	_POT3,w
  1919  005B  1803               	skipnc
  1920  005C  285E               	goto	u781
  1921  005D  285F               	goto	u780
  1922  005E                     u781:
  1923  005E  28C1               	goto	l186
  1924  005F                     u780:
  1925  005F                     l2030:
  1926  005F  300A               	movlw	10
  1927  0060  00A0               	movwf	??_AnalogReadServo
  1928  0061  0820               	movf	??_AnalogReadServo,w
  1929  0062  00AE               	movwf	_POT3
  1930  0063  28C1               	goto	l186
  1931  0064                     l2032:
  1932                           
  1933                           ;mainP2.c: 315:                 POT4 = ADRESH;
  1934  0064  081E               	movf	30,w	;volatile
  1935  0065  00A0               	movwf	??_AnalogReadServo
  1936  0066  0820               	movf	??_AnalogReadServo,w
  1937  0067  00AD               	movwf	_POT4
  1938                           
  1939                           ;mainP2.c: 316:             break;
  1940  0068  28C1               	goto	l186
  1941  0069                     l2034:
  1942                           
  1943                           ;mainP2.c: 319:                 ADCON0bits.CHS = 0;
  1944  0069  30C3               	movlw	-61
  1945  006A  059F               	andwf	31,f	;volatile
  1946  006B                     l2036:
  1947                           
  1948                           ;mainP2.c: 320:                 if(POT4>=160) POT4 = 160;
  1949  006B  30A0               	movlw	160
  1950  006C  022D               	subwf	_POT4,w
  1951  006D  1C03               	skipc
  1952  006E  2870               	goto	u791
  1953  006F  2871               	goto	u790
  1954  0070                     u791:
  1955  0070  2875               	goto	l180
  1956  0071                     u790:
  1957  0071                     l2038:
  1958  0071  30A0               	movlw	160
  1959  0072  00A0               	movwf	??_AnalogReadServo
  1960  0073  0820               	movf	??_AnalogReadServo,w
  1961  0074  00AD               	movwf	_POT4
  1962  0075                     l180:
  1963                           
  1964                           ;mainP2.c: 321:                 if(POT4<=10) POT4 = 10;
  1965  0075  300B               	movlw	11
  1966  0076  022D               	subwf	_POT4,w
  1967  0077  1803               	skipnc
  1968  0078  287A               	goto	u801
  1969  0079  287B               	goto	u800
  1970  007A                     u801:
  1971  007A  28C1               	goto	l186
  1972  007B                     u800:
  1973  007B                     l2040:
  1974  007B  300A               	movlw	10
  1975  007C  00A0               	movwf	??_AnalogReadServo
  1976  007D  0820               	movf	??_AnalogReadServo,w
  1977  007E  00AD               	movwf	_POT4
  1978  007F  28C1               	goto	l186
  1979  0080                     l2042:
  1980                           
  1981                           ;mainP2.c: 325:                 POT1 = ADRESH;
  1982  0080  081E               	movf	30,w	;volatile
  1983  0081  00A0               	movwf	??_AnalogReadServo
  1984  0082  0820               	movf	??_AnalogReadServo,w
  1985  0083  00B0               	movwf	_POT1
  1986                           
  1987                           ;mainP2.c: 326:             break;
  1988  0084  28C1               	goto	l186
  1989  0085                     l2044:
  1990                           
  1991                           ;mainP2.c: 329:                 ADCON0bits.CHS = 1;
  1992  0085  081F               	movf	31,w	;volatile
  1993  0086  39C3               	andlw	-61
  1994  0087  3804               	iorlw	4
  1995  0088  009F               	movwf	31	;volatile
  1996  0089                     l2046:
  1997                           
  1998                           ;mainP2.c: 330:                 if(POT1>=160) POT1 = 160;
  1999  0089  30A0               	movlw	160
  2000  008A  0230               	subwf	_POT1,w
  2001  008B  1C03               	skipc
  2002  008C  288E               	goto	u811
  2003  008D  288F               	goto	u810
  2004  008E                     u811:
  2005  008E  2893               	goto	l184
  2006  008F                     u810:
  2007  008F                     l2048:
  2008  008F  30A0               	movlw	160
  2009  0090  00A0               	movwf	??_AnalogReadServo
  2010  0091  0820               	movf	??_AnalogReadServo,w
  2011  0092  00B0               	movwf	_POT1
  2012  0093                     l184:
  2013                           
  2014                           ;mainP2.c: 331:                 if(POT1<=10) POT1 = 10;
  2015  0093  300B               	movlw	11
  2016  0094  0230               	subwf	_POT1,w
  2017  0095  1803               	skipnc
  2018  0096  2898               	goto	u821
  2019  0097  2899               	goto	u820
  2020  0098                     u821:
  2021  0098  28C1               	goto	l186
  2022  0099                     u820:
  2023  0099                     l2050:
  2024  0099  300A               	movlw	10
  2025  009A  00A0               	movwf	??_AnalogReadServo
  2026  009B  0820               	movf	??_AnalogReadServo,w
  2027  009C  00B0               	movwf	_POT1
  2028  009D  28C1               	goto	l186
  2029  009E                     l2054:
  2030  009E  0832               	movf	_SERVOS,w
  2031  009F  391F               	andlw	31
  2032  00A0  00A0               	movwf	??_AnalogReadServo
  2033  00A1  01A1               	clrf	??_AnalogReadServo+1
  2034                           
  2035                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2036                           ; Switch size 1, requested type "simple"
  2037                           ; Number of cases is 1, Range of values is 0 to 0
  2038                           ; switch strategies available:
  2039                           ; Name         Instructions Cycles
  2040                           ; simple_byte            4     3 (average)
  2041                           ; direct_byte           11     8 (fixed)
  2042                           ; jumptable            260     6 (fixed)
  2043                           ;	Chosen strategy is simple_byte
  2044  00A2  0821               	movf	??_AnalogReadServo+1,w
  2045  00A3  3A00               	xorlw	0	; case 0
  2046  00A4  1903               	skipnz
  2047  00A5  28A7               	goto	l2260
  2048  00A6  28C1               	goto	l186
  2049  00A7                     l2260:
  2050                           
  2051                           ; Switch size 1, requested type "simple"
  2052                           ; Number of cases is 8, Range of values is 0 to 10
  2053                           ; switch strategies available:
  2054                           ; Name         Instructions Cycles
  2055                           ; simple_byte           25    13 (average)
  2056                           ; direct_byte           41     8 (fixed)
  2057                           ; jumptable            260     6 (fixed)
  2058                           ;	Chosen strategy is simple_byte
  2059  00A7  0820               	movf	??_AnalogReadServo,w
  2060  00A8  3A00               	xorlw	0	; case 0
  2061  00A9  1903               	skipnz
  2062  00AA  2828               	goto	l2012
  2063  00AB  3A01               	xorlw	1	; case 1
  2064  00AC  1903               	skipnz
  2065  00AD  282D               	goto	l2014
  2066  00AE  3A02               	xorlw	2	; case 3
  2067  00AF  1903               	skipnz
  2068  00B0  2846               	goto	l2022
  2069  00B1  3A07               	xorlw	7	; case 4
  2070  00B2  1903               	skipnz
  2071  00B3  284B               	goto	l2024
  2072  00B4  3A02               	xorlw	2	; case 6
  2073  00B5  1903               	skipnz
  2074  00B6  2864               	goto	l2032
  2075  00B7  3A01               	xorlw	1	; case 7
  2076  00B8  1903               	skipnz
  2077  00B9  2869               	goto	l2034
  2078  00BA  3A0E               	xorlw	14	; case 9
  2079  00BB  1903               	skipnz
  2080  00BC  2880               	goto	l2042
  2081  00BD  3A03               	xorlw	3	; case 10
  2082  00BE  1903               	skipnz
  2083  00BF  2885               	goto	l2044
  2084  00C0  28C1               	goto	l186
  2085  00C1                     l186:
  2086  00C1  0008               	return
  2087  00C2                     __end_of_AnalogReadServo:
  2088                           
  2089                           	psect	text10
  2090  0137                     __ptext10:	
  2091 ;; *************** function _rutInter *****************
  2092 ;; Defined at:
  2093 ;;		line 86 in file "mainP2.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;		None
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;		None
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  1    wreg      void 
  2100 ;; Registers used:
  2101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2107 ;;      Params:         0       0       0       0       0
  2108 ;;      Locals:         0       0       0       0       0
  2109 ;;      Temps:          4       0       0       0       0
  2110 ;;      Totals:         4       0       0       0       0
  2111 ;;Total ram usage:        4 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; Hardware stack levels required when called:    1
  2114 ;; This function calls:
  2115 ;;		_servos
  2116 ;; This function is called by:
  2117 ;;		Interrupt level 1
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           
  2122                           ;psect for function _rutInter
  2123  0137                     _rutInter:
  2124  0137                     i1l1670:
  2125                           
  2126                           ;mainP2.c: 88:     if(INTCONbits.TMR0IF) {
  2127  0137  1D0B               	btfss	11,2	;volatile
  2128  0138  293A               	goto	u52_21
  2129  0139  293B               	goto	u52_20
  2130  013A                     u52_21:
  2131  013A  2953               	goto	i1l117
  2132  013B                     u52_20:
  2133  013B                     i1l1672:
  2134                           
  2135                           ;mainP2.c: 89:         SERVOS.bit0++;
  2136  013B  1283               	bcf	3,5	;RP0=0, select bank0
  2137  013C  1303               	bcf	3,6	;RP1=0, select bank0
  2138  013D  0832               	movf	_SERVOS,w
  2139  013E  391F               	andlw	31
  2140  013F  00F2               	movwf	??_rutInter
  2141  0140  0AF2               	incf	??_rutInter,f
  2142  0141  0832               	movf	_SERVOS,w
  2143  0142  0672               	xorwf	??_rutInter,w
  2144  0143  39E0               	andlw	-32
  2145  0144  0672               	xorwf	??_rutInter,w
  2146  0145  00B2               	movwf	_SERVOS
  2147  0146                     i1l1674:
  2148                           
  2149                           ;mainP2.c: 90:         INTCONbits.TMR0IF = 0;
  2150  0146  110B               	bcf	11,2	;volatile
  2151  0147                     i1l1676:
  2152                           
  2153                           ;mainP2.c: 91:         servos();
  2154  0147  120A  118A  22A7  120A  118A  	fcall	_servos
  2155  014C                     i1l1678:
  2156                           
  2157                           ;mainP2.c: 92:         if(SERVOS.modo) ADCON0bits.GO = 1;
  2158  014C  1283               	bcf	3,5	;RP0=0, select bank0
  2159  014D  1303               	bcf	3,6	;RP1=0, select bank0
  2160  014E  1F32               	btfss	_SERVOS,6
  2161  014F  2951               	goto	u53_21
  2162  0150  2952               	goto	u53_20
  2163  0151                     u53_21:
  2164  0151  2953               	goto	i1l117
  2165  0152                     u53_20:
  2166  0152                     i1l1680:
  2167  0152  149F               	bsf	31,1	;volatile
  2168  0153                     i1l117:	
  2169                           ;mainP2.c: 93:     }
  2170                           
  2171                           
  2172                           ;mainP2.c: 95:     if(PIR1bits.TMR1IF){
  2173  0153  1283               	bcf	3,5	;RP0=0, select bank0
  2174  0154  1303               	bcf	3,6	;RP1=0, select bank0
  2175  0155  1C0C               	btfss	12,0	;volatile
  2176  0156  2958               	goto	u54_21
  2177  0157  2959               	goto	u54_20
  2178  0158                     u54_21:
  2179  0158  2963               	goto	i1l1692
  2180  0159                     u54_20:
  2181  0159                     i1l1682:
  2182                           
  2183                           ;mainP2.c: 96:         SERVOS.guardar = 1;
  2184  0159  17B2               	bsf	_SERVOS,7
  2185  015A                     i1l1684:
  2186                           
  2187                           ;mainP2.c: 97:         posicion ++;
  2188  015A  3001               	movlw	1
  2189  015B  00F2               	movwf	??_rutInter
  2190  015C  0872               	movf	??_rutInter,w
  2191  015D  07AB               	addwf	_posicion,f
  2192  015E                     i1l1686:
  2193                           
  2194                           ;mainP2.c: 98:         PIR1bits.TMR1IF = 0;
  2195  015E  100C               	bcf	12,0	;volatile
  2196  015F                     i1l1688:
  2197                           
  2198                           ;mainP2.c: 99:         TMR1H = 0B00111100;
  2199  015F  303C               	movlw	60
  2200  0160  008F               	movwf	15	;volatile
  2201  0161                     i1l1690:
  2202                           
  2203                           ;mainP2.c: 100:         TMR1L = 0B10101111;
  2204  0161  30AF               	movlw	175
  2205  0162  008E               	movwf	14	;volatile
  2206  0163                     i1l1692:
  2207                           
  2208                           ;mainP2.c: 103:     if(INTCONbits.RBIF && PORTBbits.RB0){
  2209  0163  1C0B               	btfss	11,0	;volatile
  2210  0164  2966               	goto	u55_21
  2211  0165  2967               	goto	u55_20
  2212  0166                     u55_21:
  2213  0166  2979               	goto	i1l1700
  2214  0167                     u55_20:
  2215  0167                     i1l1694:
  2216  0167  1C06               	btfss	6,0	;volatile
  2217  0168  296A               	goto	u56_21
  2218  0169  296B               	goto	u56_20
  2219  016A                     u56_21:
  2220  016A  2979               	goto	i1l1700
  2221  016B                     u56_20:
  2222  016B                     i1l1696:
  2223                           
  2224                           ;mainP2.c: 104:         SERVOS.modo = ~SERVOS.modo;
  2225  016B  1003               	clrc
  2226  016C  1F32               	btfss	_SERVOS,6
  2227  016D  1403               	setc
  2228  016E  1803               	btfsc	3,0
  2229  016F  2971               	goto	u57_21
  2230  0170  2975               	goto	u57_20
  2231  0171                     u57_21:
  2232  0171  1283               	bcf	3,5	;RP0=0, select bank0
  2233  0172  1303               	bcf	3,6	;RP1=0, select bank0
  2234  0173  1732               	bsf	_SERVOS,6
  2235  0174  2978               	goto	u58_24
  2236  0175                     u57_20:
  2237  0175  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0176  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0177  1332               	bcf	_SERVOS,6
  2240  0178                     u58_24:
  2241  0178                     i1l1698:
  2242                           
  2243                           ;mainP2.c: 105:         INTCONbits.RBIF = 0;
  2244  0178  100B               	bcf	11,0	;volatile
  2245  0179                     i1l1700:
  2246                           
  2247                           ;mainP2.c: 108:     if(INTCONbits.RBIF && PORTBbits.RB1){
  2248  0179  1C0B               	btfss	11,0	;volatile
  2249  017A  297C               	goto	u59_21
  2250  017B  297D               	goto	u59_20
  2251  017C                     u59_21:
  2252  017C  298D               	goto	i1l121
  2253  017D                     u59_20:
  2254  017D                     i1l1702:
  2255  017D  1C86               	btfss	6,1	;volatile
  2256  017E  2980               	goto	u60_21
  2257  017F  2981               	goto	u60_20
  2258  0180                     u60_21:
  2259  0180  298D               	goto	i1l121
  2260  0181                     u60_20:
  2261  0181                     i1l1704:
  2262                           
  2263                           ;mainP2.c: 109:         if(SERVOS.modo)T1CONbits.TMR1ON = 1;
  2264  0181  1F32               	btfss	_SERVOS,6
  2265  0182  2984               	goto	u61_21
  2266  0183  2985               	goto	u61_20
  2267  0184                     u61_21:
  2268  0184  2986               	goto	i1l122
  2269  0185                     u61_20:
  2270  0185                     i1l1706:
  2271  0185  1410               	bsf	16,0	;volatile
  2272  0186                     i1l122:
  2273                           
  2274                           ;mainP2.c: 110:         PORTEbits.RE0 = 1;
  2275  0186  1409               	bsf	9,0	;volatile
  2276                           
  2277                           ;mainP2.c: 111:         if(SERVOS.modo)SERVOS.guardar = 1;
  2278  0187  1F32               	btfss	_SERVOS,6
  2279  0188  298A               	goto	u62_21
  2280  0189  298B               	goto	u62_20
  2281  018A                     u62_21:
  2282  018A  298C               	goto	i1l123
  2283  018B                     u62_20:
  2284  018B                     i1l1708:
  2285  018B  17B2               	bsf	_SERVOS,7
  2286  018C                     i1l123:
  2287                           
  2288                           ;mainP2.c: 112:         INTCONbits.RBIF = 0;
  2289  018C  100B               	bcf	11,0	;volatile
  2290  018D                     i1l121:	
  2291                           ;mainP2.c: 113:     }
  2292                           
  2293                           
  2294                           ;mainP2.c: 115:     INTCONbits.RBIF = 0;
  2295  018D  100B               	bcf	11,0	;volatile
  2296                           
  2297                           ;mainP2.c: 117:     if(PIR1bits.RCIF){
  2298  018E  1E8C               	btfss	12,5	;volatile
  2299  018F  2991               	goto	u63_21
  2300  0190  2992               	goto	u63_20
  2301  0191                     u63_21:
  2302  0191  2998               	goto	i1l125
  2303  0192                     u63_20:
  2304  0192                     i1l1710:
  2305                           
  2306                           ;mainP2.c: 118:         EXTREC = RCREG;
  2307  0192  081A               	movf	26,w	;volatile
  2308  0193  00F2               	movwf	??_rutInter
  2309  0194  0872               	movf	??_rutInter,w
  2310  0195  00AC               	movwf	_EXTREC
  2311  0196                     i1l1712:
  2312                           
  2313                           ;mainP2.c: 119:         UART.datorecep = 1;
  2314  0196  1431               	bsf	_UART,0
  2315  0197                     i1l1714:
  2316                           
  2317                           ;mainP2.c: 120:         PIR1bits.RCIF = 0;
  2318  0197  128C               	bcf	12,5	;volatile
  2319  0198                     i1l125:
  2320  0198  0875               	movf	??_rutInter+3,w
  2321  0199  008A               	movwf	10
  2322  019A  0874               	movf	??_rutInter+2,w
  2323  019B  0084               	movwf	4
  2324  019C  0E73               	swapf	??_rutInter+1,w
  2325  019D  0083               	movwf	3
  2326  019E  0EFE               	swapf	btemp,f
  2327  019F  0E7E               	swapf	btemp,w
  2328  01A0  0009               	retfie
  2329  01A1                     __end_of_rutInter:
  2330                           
  2331                           	psect	intentry
  2332  0004                     __pintentry:	
  2333                           ;incstack = 0
  2334                           ; Regs used in _rutInter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2335                           
  2336  0004                     interrupt_function:
  2337  007E                     saved_w	set	btemp
  2338  0004  00FE               	movwf	btemp
  2339  0005  0E03               	swapf	3,w
  2340  0006  00F3               	movwf	??_rutInter+1
  2341  0007  0804               	movf	4,w
  2342  0008  00F4               	movwf	??_rutInter+2
  2343  0009  080A               	movf	10,w
  2344  000A  00F5               	movwf	??_rutInter+3
  2345  000B  120A  118A  2937   	ljmp	_rutInter
  2346                           
  2347                           	psect	text11
  2348  02A7                     __ptext11:	
  2349 ;; *************** function _servos *****************
  2350 ;; Defined at:
  2351 ;;		line 256 in file "mainP2.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;		None
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;		None
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      void 
  2358 ;; Registers used:
  2359 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2365 ;;      Params:         0       0       0       0       0
  2366 ;;      Locals:         0       0       0       0       0
  2367 ;;      Temps:          2       0       0       0       0
  2368 ;;      Totals:         2       0       0       0       0
  2369 ;;Total ram usage:        2 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_rutInter
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           
  2379                           ;psect for function _servos
  2380  02A7                     _servos:
  2381  02A7                     i1l1442:	
  2382                           ;incstack = 0
  2383                           ; Regs used in _servos: [wreg-fsr0h+status,2+status,0]
  2384                           
  2385                           
  2386                           ;mainP2.c: 258:     if(SERVOS.bit0 == 15) SERVOS.bit0 = 0;
  2387  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  2388  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  2389  02A9  0832               	movf	_SERVOS,w
  2390  02AA  391F               	andlw	31
  2391  02AB  3A0F               	xorlw	15
  2392  02AC  1D03               	skipz
  2393  02AD  2AAF               	goto	u39_21
  2394  02AE  2AB0               	goto	u39_20
  2395  02AF                     u39_21:
  2396  02AF  2AD3               	goto	i1l1480
  2397  02B0                     u39_20:
  2398  02B0                     i1l1444:
  2399  02B0  30E0               	movlw	-32
  2400  02B1  05B2               	andwf	_SERVOS,f
  2401  02B2  2AD3               	goto	i1l1480
  2402  02B3                     i1l1446:
  2403                           
  2404                           ;mainP2.c: 262:             TMR0 = POT1; PORTDbits.RD0 = 1;
  2405  02B3  0830               	movf	_POT1,w
  2406  02B4  0081               	movwf	1	;volatile
  2407  02B5                     i1l1448:
  2408  02B5  1408               	bsf	8,0	;volatile
  2409                           
  2410                           ;mainP2.c: 263:             break;
  2411  02B6  2AF6               	goto	i1l164
  2412  02B7                     i1l1450:
  2413                           
  2414                           ;mainP2.c: 265:             TMR0 = 255-POT1; PORTDbits.RD0 = 0;
  2415  02B7  0930               	comf	_POT1,w
  2416  02B8  0081               	movwf	1	;volatile
  2417  02B9                     i1l1452:
  2418  02B9  1008               	bcf	8,0	;volatile
  2419                           
  2420                           ;mainP2.c: 266:             break;
  2421  02BA  2AF6               	goto	i1l164
  2422  02BB                     i1l1454:
  2423                           
  2424                           ;mainP2.c: 268:             TMR0 = POT2; PORTDbits.RD1 = 1;
  2425  02BB  082F               	movf	_POT2,w
  2426  02BC  0081               	movwf	1	;volatile
  2427  02BD                     i1l1456:
  2428  02BD  1488               	bsf	8,1	;volatile
  2429                           
  2430                           ;mainP2.c: 269:             break;
  2431  02BE  2AF6               	goto	i1l164
  2432  02BF                     i1l1458:
  2433                           
  2434                           ;mainP2.c: 271:              TMR0 = 255-POT2; PORTDbits.RD1 = 0;
  2435  02BF  092F               	comf	_POT2,w
  2436  02C0  0081               	movwf	1	;volatile
  2437  02C1                     i1l1460:
  2438  02C1  1088               	bcf	8,1	;volatile
  2439                           
  2440                           ;mainP2.c: 272:             break;
  2441  02C2  2AF6               	goto	i1l164
  2442  02C3                     i1l1462:
  2443                           
  2444                           ;mainP2.c: 274:             TMR0 = POT3; PORTDbits.RD2 = 1;
  2445  02C3  082E               	movf	_POT3,w
  2446  02C4  0081               	movwf	1	;volatile
  2447  02C5                     i1l1464:
  2448  02C5  1508               	bsf	8,2	;volatile
  2449                           
  2450                           ;mainP2.c: 275:             break;
  2451  02C6  2AF6               	goto	i1l164
  2452  02C7                     i1l1466:
  2453                           
  2454                           ;mainP2.c: 277:             TMR0 = 255-POT3; PORTDbits.RD2 = 0;
  2455  02C7  092E               	comf	_POT3,w
  2456  02C8  0081               	movwf	1	;volatile
  2457  02C9                     i1l1468:
  2458  02C9  1108               	bcf	8,2	;volatile
  2459                           
  2460                           ;mainP2.c: 278:             break;
  2461  02CA  2AF6               	goto	i1l164
  2462  02CB                     i1l1470:
  2463                           
  2464                           ;mainP2.c: 280:             TMR0 = POT4; PORTDbits.RD3 = 1;
  2465  02CB  082D               	movf	_POT4,w
  2466  02CC  0081               	movwf	1	;volatile
  2467  02CD                     i1l1472:
  2468  02CD  1588               	bsf	8,3	;volatile
  2469                           
  2470                           ;mainP2.c: 281:             break;
  2471  02CE  2AF6               	goto	i1l164
  2472  02CF                     i1l1474:
  2473                           
  2474                           ;mainP2.c: 283:             TMR0 = 255-POT4; PORTDbits.RD3 = 0;
  2475  02CF  092D               	comf	_POT4,w
  2476  02D0  0081               	movwf	1	;volatile
  2477  02D1                     i1l1476:
  2478  02D1  1188               	bcf	8,3	;volatile
  2479                           
  2480                           ;mainP2.c: 284:             break;
  2481  02D2  2AF6               	goto	i1l164
  2482  02D3                     i1l1480:
  2483  02D3  0832               	movf	_SERVOS,w
  2484  02D4  391F               	andlw	31
  2485  02D5  00F0               	movwf	??_servos
  2486  02D6  01F1               	clrf	??_servos+1
  2487                           
  2488                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2489                           ; Switch size 1, requested type "simple"
  2490                           ; Number of cases is 1, Range of values is 0 to 0
  2491                           ; switch strategies available:
  2492                           ; Name         Instructions Cycles
  2493                           ; simple_byte            4     3 (average)
  2494                           ; direct_byte           11     8 (fixed)
  2495                           ; jumptable            260     6 (fixed)
  2496                           ;	Chosen strategy is simple_byte
  2497  02D7  0871               	movf	??_servos+1,w
  2498  02D8  3A00               	xorlw	0	; case 0
  2499  02D9  1903               	skipnz
  2500  02DA  2ADC               	goto	i1l2262
  2501  02DB  2AF6               	goto	i1l164
  2502  02DC                     i1l2262:
  2503                           
  2504                           ; Switch size 1, requested type "simple"
  2505                           ; Number of cases is 8, Range of values is 0 to 10
  2506                           ; switch strategies available:
  2507                           ; Name         Instructions Cycles
  2508                           ; simple_byte           25    13 (average)
  2509                           ; direct_byte           41     8 (fixed)
  2510                           ; jumptable            260     6 (fixed)
  2511                           ;	Chosen strategy is simple_byte
  2512  02DC  0870               	movf	??_servos,w
  2513  02DD  3A00               	xorlw	0	; case 0
  2514  02DE  1903               	skipnz
  2515  02DF  2AB3               	goto	i1l1446
  2516  02E0  3A01               	xorlw	1	; case 1
  2517  02E1  1903               	skipnz
  2518  02E2  2AB7               	goto	i1l1450
  2519  02E3  3A02               	xorlw	2	; case 3
  2520  02E4  1903               	skipnz
  2521  02E5  2ABB               	goto	i1l1454
  2522  02E6  3A07               	xorlw	7	; case 4
  2523  02E7  1903               	skipnz
  2524  02E8  2ABF               	goto	i1l1458
  2525  02E9  3A02               	xorlw	2	; case 6
  2526  02EA  1903               	skipnz
  2527  02EB  2AC3               	goto	i1l1462
  2528  02EC  3A01               	xorlw	1	; case 7
  2529  02ED  1903               	skipnz
  2530  02EE  2AC7               	goto	i1l1466
  2531  02EF  3A0E               	xorlw	14	; case 9
  2532  02F0  1903               	skipnz
  2533  02F1  2ACB               	goto	i1l1470
  2534  02F2  3A03               	xorlw	3	; case 10
  2535  02F3  1903               	skipnz
  2536  02F4  2ACF               	goto	i1l1474
  2537  02F5  2AF6               	goto	i1l164
  2538  02F6                     i1l164:
  2539  02F6  0008               	return
  2540  02F7                     __end_of_servos:
  2541  007E                     btemp	set	126	;btemp
  2542  007E                     wtemp0	set	126
  2543                           
  2544                           	psect	config
  2545                           
  2546                           ;Config register CONFIG1 @ 0x2007
  2547                           ;	Oscillator Selection bits
  2548                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2549                           ;	Watchdog Timer Enable bit
  2550                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2551                           ;	Power-up Timer Enable bit
  2552                           ;	PWRTE = OFF, PWRT disabled
  2553                           ;	RE3/MCLR pin function select bit
  2554                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2555                           ;	Code Protection bit
  2556                           ;	CP = OFF, Program memory code protection is disabled
  2557                           ;	Data Code Protection bit
  2558                           ;	CPD = OFF, Data memory code protection is disabled
  2559                           ;	Brown Out Reset Selection bits
  2560                           ;	BOREN = OFF, BOR disabled
  2561                           ;	Internal External Switchover bit
  2562                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2563                           ;	Fail-Safe Clock Monitor Enabled bit
  2564                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2565                           ;	Low Voltage Programming Enable bit
  2566                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2567                           ;	In-Circuit Debugger Mode bit
  2568                           ;	DEBUG = 0x1, unprogrammed default
  2569  2007                     	org	8199
  2570  2007  20F4               	dw	8436
  2571                           
  2572                           ;Config register CONFIG2 @ 0x2008
  2573                           ;	Brown-out Reset Selection bit
  2574                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2575                           ;	Flash Program Memory Self Write Enable bits
  2576                           ;	WRT = OFF, Write protection off
  2577  2008                     	org	8200
  2578  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80     11      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _rutInter in COMMON

    _rutInter->_servos

Critical Paths under _main in BANK0

    _main->_guardar3SEG
    _leer3SEG->_leerSERVOS
    _leerSERVOS->_leerposiciones
    _guardar3SEG->_guardarservos
    _guardarservos->_guardarposiciones

Critical Paths under _rutInter in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rutInter in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutInter in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutInter in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1178
                                              8 BANK0      3     3      0
                    _AnalogReadServo
                    _configuraciones
                        _guardar3SEG
                           _leer3SEG
 ---------------------------------------------------------------------------------
 (1) _leer3SEG                                             2     2      0     409
                                              5 BANK0      2     2      0
                         _leerSERVOS
                          _send1dato
 ---------------------------------------------------------------------------------
 (2) _send1dato                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _leerSERVOS                                           4     4      0     378
                                              1 BANK0      4     4      0
                     _leerposiciones
 ---------------------------------------------------------------------------------
 (3) _leerposiciones                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _guardar3SEG                                          2     2      0     769
                                              6 BANK0      2     2      0
                      _guardarservos
 ---------------------------------------------------------------------------------
 (2) _guardarservos                                        4     4      0     769
                                              2 BANK0      4     4      0
                  _guardarposiciones
 ---------------------------------------------------------------------------------
 (3) _guardarposiciones                                    2     1      1     422
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _configuraciones                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AnalogReadServo                                      2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _rutInter                                             4     4      0       0
                                              2 COMMON     4     4      0
                             _servos
 ---------------------------------------------------------------------------------
 (5) _servos                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AnalogReadServo
   _configuraciones
   _guardar3SEG
     _guardarservos
       _guardarposiciones
   _leer3SEG
     _leerSERVOS
       _leerposiciones
     _send1dato

 _rutInter (ROOT)
   _servos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri May 14 18:54:46 2021

                       l200 036C                         l201 036D                         l131 028E  
                       l212 0252                         l140 027B                         l132 0259  
                       l141 0288                         l133 0271                         l150 0136  
                       l230 0325                         l215 037C                         l135 025F  
                       l240 0323                         l136 0270                         l233 034A  
                       l226 01FA                         l147 0112                         l180 0075  
                       l172 003B                         l237 02F8                         l184 0093  
                       l176 0059                         l192 0388                         l186 00C1  
                       l195 035C                         l189 0382                         l198 0368  
                       u400 0116                         u401 0115                         _PR2 0092  
                       u700 0252                         u701 0251                         u710 01FA  
                       u711 01F9                         u800 007B                         u801 007A  
                       u810 008F                         u811 008E                         u820 0099  
                       u740 0027                         u821 0098                         u741 0026  
                       u725 0307                         u750 0037                         u670 0360  
                       u830 025E                         u751 0036                         u671 035F  
                       u735 032E                         u831 025D                         u760 0041  
                       u680 036C                         u840 0275                         u761 0040  
                       u681 036B                         u841 0274                         u770 0055  
                       u690 0388                         u850 0280                         u771 0054  
                       u691 0387                         u851 027F                         u780 005F  
                       u781 005E                         u790 0071                         u791 0070  
                       fsr0 0004                 leerSERVOS@n 0024                        l2002 033B  
                      l2020 0041                        l2012 0028                        l2030 005F  
                      l2022 0046                        l2014 002D                        l2040 007B  
                      l2032 0064                        l2024 004B                        l2016 0031  
                      l2008 0021                        l2050 0099                        l2042 0080  
                      l2034 0069                        l2026 004F                        l2018 0037  
                      l2044 0085                        l2036 006B                        l2028 0055  
                      l1500 00DE                        l2060 0253                        l2046 0089  
                      l2038 0071                        l2054 009E                        l1510 00EA  
                      l1502 00E4                        l2070 0275                        l2048 008F  
                      l1520 00F1                        l1512 00EB                        l1504 00E6  
                      l2072 0280                        l2064 0261                        l1530 00F6  
                      l1522 00F2                        l1514 00EC                        l1506 00E8  
                      l2250 029C                        l2074 0285                        l2260 00A7  
                      l1540 0101                        l1532 00F7                        l1524 00F3  
                      l1516 00EF                        l1508 00E9                        l2252 031E  
                      l2068 0263                        l1550 010C                        l1542 0104  
                      l1534 00FD                        l1526 00F4                        l1518 00F0  
                      l2254 01E2                        l2078 028E                        l1560 011C  
                      l1552 010E                        l1544 0105                        l1536 00FF  
                      l1528 00F5                        l2256 0345                        l2248 026B  
                      l1570 0127                        l1562 011D                        l1554 010F  
                      l1546 0106                        l1538 0100                        l1490 00C7  
                      l2258 0238                        l1580 012E                        l1572 012A  
                      l1564 011E                        l1556 0111                        l1548 0108  
                      l1492 00CB                        l1582 012F                        l1574 012B  
                      l1566 0121                        l1558 0116                        l1494 00CD  
                      l1486 00C2                        l1910 0360                        l1584 0134  
                      l1576 012C                        l1568 0124                        l1496 00D9  
                      l1488 00C6                        l1912 0366                        l1904 034E  
                      l1920 0378                        l1586 0135                        l1578 012D  
                      l1498 00DD                        l1914 0367                        l1906 0358  
                      l1908 035B                        l1932 0200                        l1916 0371  
                      l1924 0380                        l1934 020C                        l1942 0230  
                      l1926 01FE                        l1918 0375                        l1936 0218  
                      l1944 0246                        l1960 01B3                        l1952 01A4  
                      l1946 024C                        l1938 0224                        l1962 01C0  
                      l1970 01F0                        l1972 01F4                        l1964 01CD  
                      l1980 02F9                        l1958 01A6                        l1982 02FD  
                      l1968 01DA                        l1984 0304                        l1994 0324  
                      l1978 02F7                        l1996 0326                        l1988 0314  
                      l1998 032B                        _POT1 0030                        _POT2 002F  
                      _POT3 002E                        _POT4 002D                        _UART 0031  
                      _TMR0 0001                        _main 0253                        btemp 007E  
          ?_configuraciones 0070                        start 000E                ?_guardar3SEG 0070  
                     ?_main 0070                       _EEADR 010D                       _EEDAT 010C  
                     _ANSEL 0188                       i1l121 018D                       i1l122 0186  
                     i1l123 018C                       i1l125 0198                       i1l117 0153  
                     i1l164 02F6                       _RCREG 001A                       _TMR1H 000F  
                     _TMR1L 000E                       _SPBRG 0099                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       u60_20 0181                       u52_20 013B  
                     u60_21 0180                       u52_21 013A                       u61_20 0185  
                     u53_20 0152                       u61_21 0184                       u53_21 0151  
                     u62_20 018B                       u54_20 0159                       u62_21 018A  
                     u54_21 0158                       u39_20 02B0                       u63_20 0192  
                     u55_20 0167                       u39_21 02AF                       u63_21 0191  
                     u55_21 0166                       u56_20 016B                       u56_21 016A  
                     u57_20 0175                       u57_21 0171                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                       u58_24 0178                       u59_20 017D  
                     u59_21 017C                       _TXREG 0019               send1dato@dato 0020  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __initialization 0011                __end_of_main 02A7                      ??_main 0028  
                    _ADRESH 001E                      _CCPR2L 001B                      _EECON2 018D  
    __size_of_guardarservos 0058                      _ANSELH 0189                      i1l1450 02B7  
                    i1l1442 02A7                      i1l1460 02C1                      i1l1452 02B9  
                    i1l1444 02B0                      i1l1700 0179                      i1l2262 02DC  
                    i1l1470 02CB                      i1l1462 02C3                      i1l1454 02BB  
                    i1l1446 02B3                      i1l1710 0192                      i1l1702 017D  
                    i1l1472 02CD                      i1l1464 02C5                      i1l1456 02BD  
                    i1l1448 02B5                      i1l1480 02D3                      i1l1712 0196  
                    i1l1704 0181                      i1l1474 02CF                      i1l1466 02C7  
                    i1l1458 02BF                      i1l1714 0197                      i1l1706 0185  
                    i1l1476 02D1                      i1l1468 02C9                      i1l1708 018B  
                    i1l1670 0137                      i1l1680 0152                      i1l1672 013B  
                    i1l1690 0161                      i1l1682 0159                      i1l1674 0146  
                    i1l1684 015A                      i1l1692 0163                      i1l1676 0147  
                    i1l1694 0167                      i1l1686 015E                      i1l1678 014C  
                    i1l1696 016B                      i1l1688 015F                      i1l1698 0178  
                    _EXTREC 002C                      _SERVOS 0032            __end_of_leer3SEG 0324  
                    _servos 02A7     __size_of_leerposiciones 000F                      saved_w 007E  
          __end_of_rutInter 01A1  guardarposiciones@direccion 0020     __end_of__initialization 001D  
            __pcstackCOMMON 0070               _guardarservos 01FB        __size_of_guardar3SEG 0027  
            _OPTION_REGbits 0081    __size_of_AnalogReadServo 00A1                  __pbssBANK0 002B  
        __size_of_send1dato 000C                  __pmaintext 0253              ?_guardarservos 0070  
                __pintentry 0004                     ?_servos 0070                  _leerSERVOS 01A1  
                 ?_leer3SEG 0070           _guardarposiciones 034B          ?_guardarposiciones 0020  
       ??_guardarposiciones 0076    __size_of_configuraciones 0075                   ?_rutInter 0070  
                   __ptext1 02F7                     __ptext2 037D                     __ptext3 01A1  
                   __ptext4 036E                     __ptext5 0324                     __ptext6 01FB  
                   __ptext7 034B                     __ptext8 00C2                     __ptext9 0021  
           __size_of_servos 0050                   _T1CONbits 0010              _leerposiciones 036E  
                 _T2CONbits 0012           __end_of_send1dato 0389   __end_of_guardarposiciones 036E  
                ??_leer3SEG 0025        end_of_initialization 001D           ??_AnalogReadServo 0020  
           ??_guardarservos 0022                   _RCSTAbits 0018                   _SERVINDIC 0077  
                ??_rutInter 0072      __end_of_leerposiciones 037D                   _PORTBbits 0006  
                 _PORTDbits 0008                   _PORTEbits 0009                 ?_leerSERVOS 0070  
               _CCP2CONbits 001D                   _TXSTAbits 0098           leerSERVOS@desfase 0023  
           ?_leerposiciones 0070              __end_of_servos 02F7           ??_configuraciones 0076  
       start_initialization 0011  __size_of_guardarposiciones 0023        guardarservos@desfase 0024  
             ??_guardar3SEG 0026         __size_of_leerSERVOS 005A                    ??_servos 0070  
               __pbssCOMMON 0076                   ___latbits 0002                   _datEEPROM 0076  
             __pcstackBANK0 0020              guardarservos@n 0025           __size_of_leer3SEG 002D  
         __size_of_rutInter 006A         __end_of_guardar3SEG 034B             _AnalogReadServo 0021  
                 _send1dato 037D           interrupt_function 0004                    _IOCBbits 0096  
                  _PIE1bits 008C                    _PIR1bits 000C                  _ADCON0bits 001F  
                _ADCON1bits 009F     leerposiciones@direccion 0020                ??_leerSERVOS 0021  
                ?_send1dato 0070                  _EECON1bits 018C            ??_leerposiciones 0076  
     __end_of_guardarservos 0253             _configuraciones 00C2                 _guardar3SEG 0324  
        __end_of_leerSERVOS 01FB     __end_of_AnalogReadServo 00C2                    __ptext10 0137  
                  __ptext11 02A7                    _leer3SEG 02F7               __size_of_main 0054  
                  _posicion 002B    guardarposiciones@guardar 0021                    _rutInter 0137  
                _INTCONbits 000B                    intlevel1 0000                 ??_send1dato 0076  
   __end_of_configuraciones 0137                  _OSCCONbits 008F            ?_AnalogReadServo 0070  
