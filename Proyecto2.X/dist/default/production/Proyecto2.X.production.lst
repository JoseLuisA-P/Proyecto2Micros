

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon May 17 20:13:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0019                     _TXREG	set	25
   216  001E                     _ADRESH	set	30
   217  0008                     _PORTDbits	set	8
   218  0001                     _TMR0	set	1
   219  0018                     _RCSTAbits	set	24
   220  0012                     _T2CONbits	set	18
   221  001D                     _CCP2CONbits	set	29
   222  0009                     _PORTE	set	9
   223  0008                     _PORTD	set	8
   224  0007                     _PORTC	set	7
   225  0006                     _PORTB	set	6
   226  0005                     _PORTA	set	5
   227  001B                     _CCPR2L	set	27
   228  001A                     _RCREG	set	26
   229  0009                     _PORTEbits	set	9
   230  0010                     _T1CONbits	set	16
   231  0006                     _PORTBbits	set	6
   232  000E                     _TMR1L	set	14
   233  000F                     _TMR1H	set	15
   234  000C                     _PIR1bits	set	12
   235  001F                     _ADCON0bits	set	31
   236  000B                     _INTCONbits	set	11
   237  0081                     _OPTION_REGbits	set	129
   238  0098                     _TXSTAbits	set	152
   239  0099                     _SPBRG	set	153
   240  0092                     _PR2	set	146
   241  009F                     _ADCON1bits	set	159
   242  0096                     _IOCBbits	set	150
   243  008C                     _PIE1bits	set	140
   244  008F                     _OSCCONbits	set	143
   245  0089                     _TRISE	set	137
   246  0088                     _TRISD	set	136
   247  0087                     _TRISC	set	135
   248  0086                     _TRISB	set	134
   249  0085                     _TRISA	set	133
   250  010C                     _EEDAT	set	268
   251  010D                     _EEADR	set	269
   252  018D                     _EECON2	set	397
   253  0189                     _ANSELH	set	393
   254  0188                     _ANSEL	set	392
   255  018C                     _EECON1bits	set	396
   256                           
   257                           	psect	cinit
   258  0011                     start_initialization:	
   259                           ; #config settings
   260                           
   261  0011                     __initialization:
   262                           
   263                           ; Clear objects allocated to COMMON
   264  0011  01F6               	clrf	__pbssCOMMON& (0+127)
   265  0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   266                           
   267                           ; Clear objects allocated to BANK0
   268  0013  1283               	bcf	3,5	;RP0=0, select bank0
   269  0014  1303               	bcf	3,6	;RP1=0, select bank0
   270  0015  01AB               	clrf	__pbssBANK0& (0+127)
   271  0016  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   272  0017  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   273  0018  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   274  0019  01AF               	clrf	(__pbssBANK0+4)& (0+127)
   275  001A  01B0               	clrf	(__pbssBANK0+5)& (0+127)
   276  001B  01B1               	clrf	(__pbssBANK0+6)& (0+127)
   277  001C  01B2               	clrf	(__pbssBANK0+7)& (0+127)
   278  001D                     end_of_initialization:	
   279                           ;End of C runtime variable initialization code
   280                           
   281  001D                     __end_of__initialization:
   282  001D  0183               	clrf	3
   283  001E  120A  118A  29CD   	ljmp	_main	;jump to C main() function
   284                           
   285                           	psect	bssCOMMON
   286  0076                     __pbssCOMMON:
   287  0076                     _datEEPROM:
   288  0076                     	ds	1
   289  0077                     _SERVINDIC:
   290  0077                     	ds	1
   291                           
   292                           	psect	bssBANK0
   293  002B                     __pbssBANK0:
   294  002B                     _posicion:
   295  002B                     	ds	1
   296  002C                     _EXTREC:
   297  002C                     	ds	1
   298  002D                     _POT4:
   299  002D                     	ds	1
   300  002E                     _POT3:
   301  002E                     	ds	1
   302  002F                     _POT2:
   303  002F                     	ds	1
   304  0030                     _POT1:
   305  0030                     	ds	1
   306  0031                     _UART:
   307  0031                     	ds	1
   308  0032                     _SERVOS:
   309  0032                     	ds	1
   310                           
   311                           	psect	cstackCOMMON
   312  0070                     __pcstackCOMMON:
   313  0070                     ?_servos:
   314  0070                     ??_servos:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ?_configuraciones:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_send1dato:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_leer3SEG:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_guardar3SEG:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_AnalogReadServo:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_rutInter:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_main:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_guardarservos:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_leerposiciones:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_leerSERVOS:	
   345                           ; 1 bytes @ 0x0
   346                           
   347                           
   348                           ; 1 bytes @ 0x0
   349  0070                     	ds	2
   350  0072                     ??_rutInter:
   351                           
   352                           ; 1 bytes @ 0x2
   353  0072                     	ds	4
   354  0076                     ??_configuraciones:
   355  0076                     ??_send1dato:	
   356                           ; 1 bytes @ 0x6
   357                           
   358  0076                     ??_guardarposiciones:	
   359                           ; 1 bytes @ 0x6
   360                           
   361  0076                     ??_leerposiciones:	
   362                           ; 1 bytes @ 0x6
   363                           
   364                           
   365                           	psect	cstackBANK0
   366  0020                     __pcstackBANK0:	
   367                           ; 1 bytes @ 0x6
   368                           
   369  0020                     ??_AnalogReadServo:
   370  0020                     ?_guardarposiciones:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0020                     send1dato@dato:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0020                     guardarposiciones@direccion:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0020                     leerposiciones@direccion:	
   380                           ; 1 bytes @ 0x0
   381                           
   382                           
   383                           ; 1 bytes @ 0x0
   384  0020                     	ds	1
   385  0021                     ??_leerSERVOS:
   386  0021                     guardarposiciones@guardar:	
   387                           ; 1 bytes @ 0x1
   388                           
   389                           
   390                           ; 1 bytes @ 0x1
   391  0021                     	ds	1
   392  0022                     ??_guardarservos:
   393                           
   394                           ; 1 bytes @ 0x2
   395  0022                     	ds	1
   396  0023                     leerSERVOS@desfase:
   397                           
   398                           ; 1 bytes @ 0x3
   399  0023                     	ds	1
   400  0024                     guardarservos@desfase:
   401  0024                     leerSERVOS@n:	
   402                           ; 1 bytes @ 0x4
   403                           
   404                           
   405                           ; 1 bytes @ 0x4
   406  0024                     	ds	1
   407  0025                     ??_leer3SEG:
   408  0025                     guardarservos@n:	
   409                           ; 1 bytes @ 0x5
   410                           
   411                           
   412                           ; 1 bytes @ 0x5
   413  0025                     	ds	1
   414  0026                     ??_guardar3SEG:
   415                           
   416                           ; 1 bytes @ 0x6
   417  0026                     	ds	2
   418  0028                     ??_main:
   419                           
   420                           ; 1 bytes @ 0x8
   421  0028                     	ds	3
   422                           
   423                           	psect	maintext
   424  01CD                     __pmaintext:	
   425 ;;
   426 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   427 ;;
   428 ;; *************** function _main *****************
   429 ;; Defined at:
   430 ;;		line 130 in file "mainP2.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : B00/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   444 ;;      Params:         0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0
   446 ;;      Temps:          0       3       0       0       0
   447 ;;      Totals:         0       3       0       0       0
   448 ;;Total ram usage:        3 bytes
   449 ;; Hardware stack levels required when called:    5
   450 ;; This function calls:
   451 ;;		_AnalogReadServo
   452 ;;		_configuraciones
   453 ;;		_guardar3SEG
   454 ;;		_leer3SEG
   455 ;;		_send1dato
   456 ;; This function is called by:
   457 ;;		Startup code after reset
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           
   462                           ;psect for function _main
   463  01CD                     _main:
   464  01CD                     l2092:	
   465                           ;incstack = 0
   466                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   467                           
   468                           
   469                           ;mainP2.c: 131:     configuraciones();
   470  01CD  120A  118A  2158  120A  118A  	fcall	_configuraciones
   471  01D2  2A22               	goto	l2122
   472  01D3                     l135:	
   473                           ;mainP2.c: 135:             case 0:
   474                           
   475                           
   476                           ;mainP2.c: 136:                 PORTBbits.RB7 = 0;
   477  01D3  1386               	bcf	6,7	;volatile
   478                           
   479                           ;mainP2.c: 138:                 if(UART.datorecep){
   480  01D4  1C31               	btfss	_UART,0
   481  01D5  29D7               	goto	u961
   482  01D6  29D8               	goto	u960
   483  01D7                     u961:
   484  01D7  2A05               	goto	l136
   485  01D8                     u960:
   486  01D8  29F1               	goto	l2112
   487  01D9                     l138:	
   488                           ;mainP2.c: 140:                         case '1':
   489                           
   490                           
   491                           ;mainP2.c: 141:                             T1CONbits.TMR1ON = 1;
   492  01D9  1410               	bsf	16,0	;volatile
   493                           
   494                           ;mainP2.c: 142:                             PORTEbits.RE0 = 1;
   495  01DA  1409               	bsf	9,0	;volatile
   496  01DB                     l2096:
   497                           
   498                           ;mainP2.c: 143:                             EXTREC = 0;
   499  01DB  1283               	bcf	3,5	;RP0=0, select bank0
   500  01DC  1303               	bcf	3,6	;RP1=0, select bank0
   501  01DD  01AC               	clrf	_EXTREC
   502                           
   503                           ;mainP2.c: 144:                             break;
   504  01DE  2A04               	goto	l139
   505  01DF                     l2098:
   506                           
   507                           ;mainP2.c: 146:                             CCPR2L = 0xFF;
   508  01DF  30FF               	movlw	255
   509  01E0  009B               	movwf	27	;volatile
   510  01E1                     l2100:
   511                           
   512                           ;mainP2.c: 147:                             send1dato('b');
   513  01E1  3062               	movlw	98
   514  01E2  120A  118A  23BD  120A  118A  	fcall	_send1dato
   515  01E7  29DB               	goto	l2096
   516  01E8                     l2104:
   517                           
   518                           ;mainP2.c: 151:                             CCPR2L = 0x0F;
   519  01E8  300F               	movlw	15
   520  01E9  009B               	movwf	27	;volatile
   521  01EA                     l2106:
   522                           
   523                           ;mainP2.c: 152:                             send1dato('c');
   524  01EA  3063               	movlw	99
   525  01EB  120A  118A  23BD  120A  118A  	fcall	_send1dato
   526  01F0  29DB               	goto	l2096
   527  01F1                     l2112:
   528  01F1  082C               	movf	_EXTREC,w
   529  01F2  00A8               	movwf	??_main
   530  01F3  01A9               	clrf	??_main+1
   531                           
   532                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   533                           ; Switch size 1, requested type "simple"
   534                           ; Number of cases is 1, Range of values is 0 to 0
   535                           ; switch strategies available:
   536                           ; Name         Instructions Cycles
   537                           ; simple_byte            4     3 (average)
   538                           ; direct_byte           11     8 (fixed)
   539                           ; jumptable            260     6 (fixed)
   540                           ;	Chosen strategy is simple_byte
   541  01F4  0829               	movf	??_main+1,w
   542  01F5  3A00               	xorlw	0	; case 0
   543  01F6  1903               	skipnz
   544  01F7  29F9               	goto	l2292
   545  01F8  2A04               	goto	l139
   546  01F9                     l2292:
   547                           
   548                           ; Switch size 1, requested type "simple"
   549                           ; Number of cases is 3, Range of values is 49 to 51
   550                           ; switch strategies available:
   551                           ; Name         Instructions Cycles
   552                           ; simple_byte           10     6 (average)
   553                           ; direct_byte           20    11 (fixed)
   554                           ; jumptable            263     9 (fixed)
   555                           ;	Chosen strategy is simple_byte
   556  01F9  0828               	movf	??_main,w
   557  01FA  3A31               	xorlw	49	; case 49
   558  01FB  1903               	skipnz
   559  01FC  29D9               	goto	l138
   560  01FD  3A03               	xorlw	3	; case 50
   561  01FE  1903               	skipnz
   562  01FF  29DF               	goto	l2098
   563  0200  3A01               	xorlw	1	; case 51
   564  0201  1903               	skipnz
   565  0202  29E8               	goto	l2104
   566  0203  2A04               	goto	l139
   567  0204                     l139:
   568                           
   569                           ;mainP2.c: 159:                     UART.datorecep = 0;
   570  0204  1031               	bcf	_UART,0
   571  0205                     l136:	
   572                           ;mainP2.c: 160:                 }
   573                           
   574                           
   575                           ;mainP2.c: 162:                 if(T1CONbits.TMR1ON){
   576  0205  1C10               	btfss	16,0	;volatile
   577  0206  2A08               	goto	u971
   578  0207  2A09               	goto	u970
   579  0208                     u971:
   580  0208  2A22               	goto	l134
   581  0209                     u970:
   582  0209                     l2114:
   583                           
   584                           ;mainP2.c: 163:                     leer3SEG();
   585  0209  120A  118A  233D  120A  118A  	fcall	_leer3SEG
   586  020E  2A22               	goto	l2122
   587  020F                     l145:	
   588                           ;mainP2.c: 167:             case 1:
   589                           
   590                           
   591                           ;mainP2.c: 168:                 PORTBbits.RB7 = 1;
   592  020F  1786               	bsf	6,7	;volatile
   593                           
   594                           ;mainP2.c: 170:                 if(SERVOS.guardar){
   595  0210  1FB2               	btfss	_SERVOS,7
   596  0211  2A13               	goto	u981
   597  0212  2A14               	goto	u980
   598  0213                     u981:
   599  0213  2A1C               	goto	l146
   600  0214                     u980:
   601  0214                     l2116:
   602                           
   603                           ;mainP2.c: 171:                     guardar3SEG();
   604  0214  120A  118A  236A  120A  118A  	fcall	_guardar3SEG
   605  0219                     l2118:
   606                           
   607                           ;mainP2.c: 172:                     SERVOS.guardar = 0;
   608  0219  1283               	bcf	3,5	;RP0=0, select bank0
   609  021A  1303               	bcf	3,6	;RP1=0, select bank0
   610  021B  13B2               	bcf	_SERVOS,7
   611  021C                     l146:	
   612                           ;mainP2.c: 173:                 }
   613                           
   614                           
   615                           ;mainP2.c: 175:                 AnalogReadServo();
   616  021C  120A  118A  2021  120A  118A  	fcall	_AnalogReadServo
   617                           
   618                           ;mainP2.c: 176:                 break;
   619  0221  2A22               	goto	l2122
   620  0222                     l134:
   621  0222                     l2122:
   622  0222  1283               	bcf	3,5	;RP0=0, select bank0
   623  0223  1303               	bcf	3,6	;RP1=0, select bank0
   624  0224  0E32               	swapf	_SERVOS,w
   625  0225  00A8               	movwf	??_main
   626  0226  0CA8               	rrf	??_main,f
   627  0227  0C28               	rrf	??_main,w
   628  0228  3901               	andlw	1
   629  0229  00A9               	movwf	??_main+1
   630  022A  01AA               	clrf	??_main+2
   631                           
   632                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   633                           ; Switch size 1, requested type "simple"
   634                           ; Number of cases is 1, Range of values is 0 to 0
   635                           ; switch strategies available:
   636                           ; Name         Instructions Cycles
   637                           ; simple_byte            4     3 (average)
   638                           ; direct_byte           11     8 (fixed)
   639                           ; jumptable            260     6 (fixed)
   640                           ;	Chosen strategy is simple_byte
   641  022B  082A               	movf	??_main+2,w
   642  022C  3A00               	xorlw	0	; case 0
   643  022D  1903               	skipnz
   644  022E  2A30               	goto	l2294
   645  022F  2A22               	goto	l2122
   646  0230                     l2294:
   647                           
   648                           ; Switch size 1, requested type "simple"
   649                           ; Number of cases is 2, Range of values is 0 to 1
   650                           ; switch strategies available:
   651                           ; Name         Instructions Cycles
   652                           ; simple_byte            7     4 (average)
   653                           ; direct_byte           14     8 (fixed)
   654                           ; jumptable            260     6 (fixed)
   655                           ;	Chosen strategy is simple_byte
   656  0230  0829               	movf	??_main+1,w
   657  0231  3A00               	xorlw	0	; case 0
   658  0232  1903               	skipnz
   659  0233  29D3               	goto	l135
   660  0234  3A01               	xorlw	1	; case 1
   661  0235  1903               	skipnz
   662  0236  2A0F               	goto	l145
   663  0237  2A22               	goto	l2122
   664  0238  120A  118A  280E   	ljmp	start
   665  023B                     __end_of_main:
   666                           
   667                           	psect	text1
   668  033D                     __ptext1:	
   669 ;; *************** function _leer3SEG *****************
   670 ;; Defined at:
   671 ;;		line 419 in file "mainP2.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   685 ;;      Params:         0       0       0       0       0
   686 ;;      Locals:         0       0       0       0       0
   687 ;;      Temps:          0       2       0       0       0
   688 ;;      Totals:         0       2       0       0       0
   689 ;;Total ram usage:        2 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; Hardware stack levels required when called:    4
   692 ;; This function calls:
   693 ;;		_leerSERVOS
   694 ;;		_send1dato
   695 ;; This function is called by:
   696 ;;		_main
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           
   701                           ;psect for function _leer3SEG
   702  033D                     _leer3SEG:
   703  033D                     l2010:	
   704                           ;incstack = 0
   705                           ; Regs used in _leer3SEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   706                           
   707                           
   708                           ;mainP2.c: 420:     switch(posicion){
   709  033D  2B5A               	goto	l2020
   710  033E                     l243:	
   711                           ;mainP2.c: 421:         case 31:
   712                           
   713                           
   714                           ;mainP2.c: 422:             T1CONbits.TMR1ON = 0;
   715  033E  1010               	bcf	16,0	;volatile
   716  033F                     l2012:
   717                           
   718                           ;mainP2.c: 423:             TMR1H = 0;
   719  033F  018F               	clrf	15	;volatile
   720                           
   721                           ;mainP2.c: 424:             TMR1L = 0;
   722  0340  018E               	clrf	14	;volatile
   723                           
   724                           ;mainP2.c: 425:             posicion = 0;
   725  0341  01AB               	clrf	_posicion
   726                           
   727                           ;mainP2.c: 426:             PORTE = 0;
   728  0342  0189               	clrf	9	;volatile
   729  0343                     l2014:
   730                           
   731                           ;mainP2.c: 427:             send1dato('a');
   732  0343  3061               	movlw	97
   733  0344  120A  118A  23BD  120A  118A  	fcall	_send1dato
   734                           
   735                           ;mainP2.c: 428:             break;
   736  0349  2B69               	goto	l246
   737  034A                     l2016:
   738                           
   739                           ;mainP2.c: 430:             leerSERVOS(4*posicion);
   740  034A  082B               	movf	_posicion,w
   741  034B  00A5               	movwf	??_leer3SEG
   742  034C  3001               	movlw	1
   743  034D                     u815:
   744  034D  1003               	clrc
   745  034E  0DA5               	rlf	??_leer3SEG,f
   746  034F  3EFF               	addlw	-1
   747  0350  1D03               	skipz
   748  0351  2B4D               	goto	u815
   749  0352  1003               	clrc
   750  0353  0D25               	rlf	??_leer3SEG,w
   751  0354  120A  118A  223B  120A  118A  	fcall	_leerSERVOS
   752                           
   753                           ;mainP2.c: 431:             break;
   754  0359  2B69               	goto	l246
   755  035A                     l2020:
   756  035A  1283               	bcf	3,5	;RP0=0, select bank0
   757  035B  1303               	bcf	3,6	;RP1=0, select bank0
   758  035C  082B               	movf	_posicion,w
   759  035D  00A5               	movwf	??_leer3SEG
   760  035E  01A6               	clrf	??_leer3SEG+1
   761                           
   762                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   763                           ; Switch size 1, requested type "simple"
   764                           ; Number of cases is 1, Range of values is 0 to 0
   765                           ; switch strategies available:
   766                           ; Name         Instructions Cycles
   767                           ; simple_byte            4     3 (average)
   768                           ; direct_byte           11     8 (fixed)
   769                           ; jumptable            260     6 (fixed)
   770                           ;	Chosen strategy is simple_byte
   771  035F  0826               	movf	??_leer3SEG+1,w
   772  0360  3A00               	xorlw	0	; case 0
   773  0361  1903               	skipnz
   774  0362  2B64               	goto	l2296
   775  0363  2B4A               	goto	l2016
   776  0364                     l2296:
   777                           
   778                           ; Switch size 1, requested type "simple"
   779                           ; Number of cases is 1, Range of values is 31 to 31
   780                           ; switch strategies available:
   781                           ; Name         Instructions Cycles
   782                           ; simple_byte            4     3 (average)
   783                           ; direct_byte           14    11 (fixed)
   784                           ; jumptable            263     9 (fixed)
   785                           ;	Chosen strategy is simple_byte
   786  0364  0825               	movf	??_leer3SEG,w
   787  0365  3A1F               	xorlw	31	; case 31
   788  0366  1903               	skipnz
   789  0367  2B3E               	goto	l243
   790  0368  2B4A               	goto	l2016
   791  0369                     l246:
   792  0369  0008               	return
   793  036A                     __end_of_leer3SEG:
   794                           
   795                           	psect	text2
   796  03BD                     __ptext2:	
   797 ;; *************** function _send1dato *****************
   798 ;; Defined at:
   799 ;;		line 349 in file "mainP2.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  dato            1    wreg     unsigned char 
   802 ;; Auto vars:     Size  Location     Type
   803 ;;  dato            1    0[BANK0 ] unsigned char 
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   813 ;;      Params:         0       0       0       0       0
   814 ;;      Locals:         0       1       0       0       0
   815 ;;      Temps:          0       0       0       0       0
   816 ;;      Totals:         0       1       0       0       0
   817 ;;Total ram usage:        1 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    2
   820 ;; This function calls:
   821 ;;		Nothing
   822 ;; This function is called by:
   823 ;;		_main
   824 ;;		_leer3SEG
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           
   829                           ;psect for function _send1dato
   830  03BD                     _send1dato:
   831                           
   832                           ;incstack = 0
   833                           ; Regs used in _send1dato: [wreg]
   834                           ;send1dato@dato stored from wreg
   835  03BD  1283               	bcf	3,5	;RP0=0, select bank0
   836  03BE  1303               	bcf	3,6	;RP1=0, select bank0
   837  03BF  00A0               	movwf	send1dato@dato
   838  03C0                     l1956:
   839                           
   840                           ;mainP2.c: 350:     TXREG = dato;
   841  03C0  0820               	movf	send1dato@dato,w
   842  03C1  0099               	movwf	25	;volatile
   843  03C2                     l198:	
   844                           ;mainP2.c: 351:     while(!TXSTAbits.TRMT);
   845                           
   846  03C2  1683               	bsf	3,5	;RP0=1, select bank1
   847  03C3  1303               	bcf	3,6	;RP1=0, select bank1
   848  03C4  1C98               	btfss	24,1	;volatile
   849  03C5  2BC7               	goto	u781
   850  03C6  2BC8               	goto	u780
   851  03C7                     u781:
   852  03C7  2BC2               	goto	l198
   853  03C8                     u780:
   854  03C8                     l201:
   855  03C8  0008               	return
   856  03C9                     __end_of_send1dato:
   857                           
   858                           	psect	text3
   859  023B                     __ptext3:	
   860 ;; *************** function _leerSERVOS *****************
   861 ;; Defined at:
   862 ;;		line 389 in file "mainP2.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  desfase         1    wreg     unsigned char 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  desfase         1    3[BANK0 ] unsigned char 
   867 ;;  n               1    4[BANK0 ] unsigned char 
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   877 ;;      Params:         0       0       0       0       0
   878 ;;      Locals:         0       2       0       0       0
   879 ;;      Temps:          0       2       0       0       0
   880 ;;      Totals:         0       4       0       0       0
   881 ;;Total ram usage:        4 bytes
   882 ;; Hardware stack levels used:    1
   883 ;; Hardware stack levels required when called:    3
   884 ;; This function calls:
   885 ;;		_leerposiciones
   886 ;; This function is called by:
   887 ;;		_leer3SEG
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           
   892                           ;psect for function _leerSERVOS
   893  023B                     _leerSERVOS:
   894                           
   895                           ;incstack = 0
   896                           ; Regs used in _leerSERVOS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   897                           ;leerSERVOS@desfase stored from wreg
   898  023B  1283               	bcf	3,5	;RP0=0, select bank0
   899  023C  1303               	bcf	3,6	;RP1=0, select bank0
   900  023D  00A3               	movwf	leerSERVOS@desfase
   901  023E                     l1984:
   902                           
   903                           ;mainP2.c: 390:     for(uint8_t n=0;n<=3; n++){
   904  023E  01A4               	clrf	leerSERVOS@n
   905  023F  2A74               	goto	l2000
   906  0240                     l1990:
   907  0240  0823               	movf	leerSERVOS@desfase,w
   908  0241  0724               	addwf	leerSERVOS@n,w
   909  0242  120A  118A  23AE  120A  118A  	fcall	_leerposiciones
   910  0247  1283               	bcf	3,5	;RP0=0, select bank0
   911  0248  1303               	bcf	3,6	;RP1=0, select bank0
   912  0249  00A1               	movwf	??_leerSERVOS
   913  024A  0821               	movf	??_leerSERVOS,w
   914  024B  00B0               	movwf	_POT1
   915                           
   916                           ;mainP2.c: 393:                 break;
   917  024C  2A8A               	goto	l2002
   918  024D                     l1992:
   919  024D  0823               	movf	leerSERVOS@desfase,w
   920  024E  0724               	addwf	leerSERVOS@n,w
   921  024F  120A  118A  23AE  120A  118A  	fcall	_leerposiciones
   922  0254  1283               	bcf	3,5	;RP0=0, select bank0
   923  0255  1303               	bcf	3,6	;RP1=0, select bank0
   924  0256  00A1               	movwf	??_leerSERVOS
   925  0257  0821               	movf	??_leerSERVOS,w
   926  0258  00AF               	movwf	_POT2
   927                           
   928                           ;mainP2.c: 395:                 break;
   929  0259  2A8A               	goto	l2002
   930  025A                     l1994:
   931  025A  0823               	movf	leerSERVOS@desfase,w
   932  025B  0724               	addwf	leerSERVOS@n,w
   933  025C  120A  118A  23AE  120A  118A  	fcall	_leerposiciones
   934  0261  1283               	bcf	3,5	;RP0=0, select bank0
   935  0262  1303               	bcf	3,6	;RP1=0, select bank0
   936  0263  00A1               	movwf	??_leerSERVOS
   937  0264  0821               	movf	??_leerSERVOS,w
   938  0265  00AE               	movwf	_POT3
   939                           
   940                           ;mainP2.c: 397:                 break;
   941  0266  2A8A               	goto	l2002
   942  0267                     l1996:
   943  0267  0823               	movf	leerSERVOS@desfase,w
   944  0268  0724               	addwf	leerSERVOS@n,w
   945  0269  120A  118A  23AE  120A  118A  	fcall	_leerposiciones
   946  026E  1283               	bcf	3,5	;RP0=0, select bank0
   947  026F  1303               	bcf	3,6	;RP1=0, select bank0
   948  0270  00A1               	movwf	??_leerSERVOS
   949  0271  0821               	movf	??_leerSERVOS,w
   950  0272  00AD               	movwf	_POT4
   951                           
   952                           ;mainP2.c: 399:                 break;
   953  0273  2A8A               	goto	l2002
   954  0274                     l2000:
   955  0274  0824               	movf	leerSERVOS@n,w
   956  0275  00A1               	movwf	??_leerSERVOS
   957  0276  01A2               	clrf	??_leerSERVOS+1
   958                           
   959                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   960                           ; Switch size 1, requested type "simple"
   961                           ; Number of cases is 1, Range of values is 0 to 0
   962                           ; switch strategies available:
   963                           ; Name         Instructions Cycles
   964                           ; simple_byte            4     3 (average)
   965                           ; direct_byte           11     8 (fixed)
   966                           ; jumptable            260     6 (fixed)
   967                           ;	Chosen strategy is simple_byte
   968  0277  0822               	movf	??_leerSERVOS+1,w
   969  0278  3A00               	xorlw	0	; case 0
   970  0279  1903               	skipnz
   971  027A  2A7C               	goto	l2298
   972  027B  2A8A               	goto	l2002
   973  027C                     l2298:
   974                           
   975                           ; Switch size 1, requested type "simple"
   976                           ; Number of cases is 4, Range of values is 0 to 3
   977                           ; switch strategies available:
   978                           ; Name         Instructions Cycles
   979                           ; simple_byte           13     7 (average)
   980                           ; direct_byte           20     8 (fixed)
   981                           ; jumptable            260     6 (fixed)
   982                           ;	Chosen strategy is simple_byte
   983  027C  0821               	movf	??_leerSERVOS,w
   984  027D  3A00               	xorlw	0	; case 0
   985  027E  1903               	skipnz
   986  027F  2A40               	goto	l1990
   987  0280  3A01               	xorlw	1	; case 1
   988  0281  1903               	skipnz
   989  0282  2A4D               	goto	l1992
   990  0283  3A03               	xorlw	3	; case 2
   991  0284  1903               	skipnz
   992  0285  2A5A               	goto	l1994
   993  0286  3A01               	xorlw	1	; case 3
   994  0287  1903               	skipnz
   995  0288  2A67               	goto	l1996
   996  0289  2A8A               	goto	l2002
   997  028A                     l2002:
   998                           
   999                           ;mainP2.c: 401:     }
  1000  028A  3001               	movlw	1
  1001  028B  00A1               	movwf	??_leerSERVOS
  1002  028C  0821               	movf	??_leerSERVOS,w
  1003  028D  07A4               	addwf	leerSERVOS@n,f
  1004  028E                     l2004:
  1005  028E  3004               	movlw	4
  1006  028F  0224               	subwf	leerSERVOS@n,w
  1007  0290  1C03               	skipc
  1008  0291  2A93               	goto	u801
  1009  0292  2A94               	goto	u800
  1010  0293                     u801:
  1011  0293  2A74               	goto	l2000
  1012  0294                     u800:
  1013  0294                     l232:
  1014  0294  0008               	return
  1015  0295                     __end_of_leerSERVOS:
  1016                           
  1017                           	psect	text4
  1018  03AE                     __ptext4:	
  1019 ;; *************** function _leerposiciones *****************
  1020 ;; Defined at:
  1021 ;;		line 382 in file "mainP2.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  direccion       1    wreg     unsigned char 
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  direccion       1    0[BANK0 ] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      unsigned char 
  1028 ;; Registers used:
  1029 ;;		wreg
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1035 ;;      Params:         0       0       0       0       0
  1036 ;;      Locals:         0       1       0       0       0
  1037 ;;      Temps:          0       0       0       0       0
  1038 ;;      Totals:         0       1       0       0       0
  1039 ;;Total ram usage:        1 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; Hardware stack levels required when called:    2
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_leerSERVOS
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           
  1050                           ;psect for function _leerposiciones
  1051  03AE                     _leerposiciones:
  1052                           
  1053                           ;incstack = 0
  1054                           ; Regs used in _leerposiciones: [wreg]
  1055                           ;leerposiciones@direccion stored from wreg
  1056  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  1057  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  1058  03B0  00A0               	movwf	leerposiciones@direccion
  1059  03B1                     l1948:
  1060                           
  1061                           ;mainP2.c: 383:     EEADR = direccion;
  1062  03B1  0820               	movf	leerposiciones@direccion,w
  1063  03B2  1283               	bcf	3,5	;RP0=0, select bank2
  1064  03B3  1703               	bsf	3,6	;RP1=1, select bank2
  1065  03B4  008D               	movwf	13	;volatile
  1066  03B5                     l1950:
  1067                           
  1068                           ;mainP2.c: 384:     EECON1bits.EEPGD = 0;
  1069  03B5  1683               	bsf	3,5	;RP0=1, select bank3
  1070  03B6  1703               	bsf	3,6	;RP1=1, select bank3
  1071  03B7  138C               	bcf	12,7	;volsfr
  1072  03B8                     l1952:
  1073                           
  1074                           ;mainP2.c: 385:     EECON1bits.RD = 1;
  1075  03B8  140C               	bsf	12,0	;volsfr
  1076                           
  1077                           ;mainP2.c: 386:     return EEDAT;
  1078  03B9  1283               	bcf	3,5	;RP0=0, select bank2
  1079  03BA  1703               	bsf	3,6	;RP1=1, select bank2
  1080  03BB  080C               	movf	12,w	;volatile
  1081  03BC                     l221:
  1082  03BC  0008               	return
  1083  03BD                     __end_of_leerposiciones:
  1084                           
  1085                           	psect	text5
  1086  036A                     __ptext5:	
  1087 ;; *************** function _guardar3SEG *****************
  1088 ;; Defined at:
  1089 ;;		line 404 in file "mainP2.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1103 ;;      Params:         0       0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0
  1105 ;;      Temps:          0       2       0       0       0
  1106 ;;      Totals:         0       2       0       0       0
  1107 ;;Total ram usage:        2 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; Hardware stack levels required when called:    4
  1110 ;; This function calls:
  1111 ;;		_guardarservos
  1112 ;; This function is called by:
  1113 ;;		_main
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           
  1118                           ;psect for function _guardar3SEG
  1119  036A                     _guardar3SEG:
  1120  036A                     l2026:	
  1121                           ;incstack = 0
  1122                           ; Regs used in _guardar3SEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1123                           
  1124                           
  1125                           ;mainP2.c: 405:     switch(posicion){
  1126  036A  2B81               	goto	l2034
  1127  036B                     l236:	
  1128                           ;mainP2.c: 406:         case 31:
  1129                           
  1130                           
  1131                           ;mainP2.c: 407:             T1CONbits.TMR1ON = 0;
  1132  036B  1010               	bcf	16,0	;volatile
  1133  036C                     l2028:
  1134                           
  1135                           ;mainP2.c: 408:             TMR1H = 0;
  1136  036C  018F               	clrf	15	;volatile
  1137                           
  1138                           ;mainP2.c: 409:             TMR1L = 0;
  1139  036D  018E               	clrf	14	;volatile
  1140                           
  1141                           ;mainP2.c: 410:             posicion = 0;
  1142  036E  01AB               	clrf	_posicion
  1143                           
  1144                           ;mainP2.c: 411:             PORTE = 0;
  1145  036F  0189               	clrf	9	;volatile
  1146                           
  1147                           ;mainP2.c: 412:             break;
  1148  0370  2B90               	goto	l239
  1149  0371                     l2030:
  1150                           
  1151                           ;mainP2.c: 414:             guardarservos(4*posicion);
  1152  0371  082B               	movf	_posicion,w
  1153  0372  00A6               	movwf	??_guardar3SEG
  1154  0373  3001               	movlw	1
  1155  0374                     u825:
  1156  0374  1003               	clrc
  1157  0375  0DA6               	rlf	??_guardar3SEG,f
  1158  0376  3EFF               	addlw	-1
  1159  0377  1D03               	skipz
  1160  0378  2B74               	goto	u825
  1161  0379  1003               	clrc
  1162  037A  0D26               	rlf	??_guardar3SEG,w
  1163  037B  120A  118A  2295  120A  118A  	fcall	_guardarservos
  1164                           
  1165                           ;mainP2.c: 415:             break;
  1166  0380  2B90               	goto	l239
  1167  0381                     l2034:
  1168  0381  1283               	bcf	3,5	;RP0=0, select bank0
  1169  0382  1303               	bcf	3,6	;RP1=0, select bank0
  1170  0383  082B               	movf	_posicion,w
  1171  0384  00A6               	movwf	??_guardar3SEG
  1172  0385  01A7               	clrf	??_guardar3SEG+1
  1173                           
  1174                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1175                           ; Switch size 1, requested type "simple"
  1176                           ; Number of cases is 1, Range of values is 0 to 0
  1177                           ; switch strategies available:
  1178                           ; Name         Instructions Cycles
  1179                           ; simple_byte            4     3 (average)
  1180                           ; direct_byte           11     8 (fixed)
  1181                           ; jumptable            260     6 (fixed)
  1182                           ;	Chosen strategy is simple_byte
  1183  0386  0827               	movf	??_guardar3SEG+1,w
  1184  0387  3A00               	xorlw	0	; case 0
  1185  0388  1903               	skipnz
  1186  0389  2B8B               	goto	l2300
  1187  038A  2B71               	goto	l2030
  1188  038B                     l2300:
  1189                           
  1190                           ; Switch size 1, requested type "simple"
  1191                           ; Number of cases is 1, Range of values is 31 to 31
  1192                           ; switch strategies available:
  1193                           ; Name         Instructions Cycles
  1194                           ; simple_byte            4     3 (average)
  1195                           ; direct_byte           14    11 (fixed)
  1196                           ; jumptable            263     9 (fixed)
  1197                           ;	Chosen strategy is simple_byte
  1198  038B  0826               	movf	??_guardar3SEG,w
  1199  038C  3A1F               	xorlw	31	; case 31
  1200  038D  1903               	skipnz
  1201  038E  2B6B               	goto	l236
  1202  038F  2B71               	goto	l2030
  1203  0390                     l239:
  1204  0390  0008               	return
  1205  0391                     __end_of_guardar3SEG:
  1206                           
  1207                           	psect	text6
  1208  0295                     __ptext6:	
  1209 ;; *************** function _guardarservos *****************
  1210 ;; Defined at:
  1211 ;;		line 367 in file "mainP2.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;  desfase         1    wreg     unsigned char 
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;  desfase         1    4[BANK0 ] unsigned char 
  1216 ;;  n               1    5[BANK0 ] unsigned char 
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       0       0       0       0
  1227 ;;      Locals:         0       2       0       0       0
  1228 ;;      Temps:          0       2       0       0       0
  1229 ;;      Totals:         0       4       0       0       0
  1230 ;;Total ram usage:        4 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    3
  1233 ;; This function calls:
  1234 ;;		_guardarposiciones
  1235 ;; This function is called by:
  1236 ;;		_guardar3SEG
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           
  1241                           ;psect for function _guardarservos
  1242  0295                     _guardarservos:
  1243                           
  1244                           ;incstack = 0
  1245                           ; Regs used in _guardarservos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1246                           ;guardarservos@desfase stored from wreg
  1247  0295  1283               	bcf	3,5	;RP0=0, select bank0
  1248  0296  1303               	bcf	3,6	;RP1=0, select bank0
  1249  0297  00A4               	movwf	guardarservos@desfase
  1250  0298                     l1958:
  1251                           
  1252                           ;mainP2.c: 368:     for(uint8_t n=0;n<=3;n++){
  1253  0298  01A5               	clrf	guardarservos@n
  1254  0299  2ACA               	goto	l1974
  1255  029A                     l1964:
  1256  029A  0824               	movf	guardarservos@desfase,w
  1257  029B  0725               	addwf	guardarservos@n,w
  1258  029C  00A2               	movwf	??_guardarservos
  1259  029D  0822               	movf	??_guardarservos,w
  1260  029E  00A0               	movwf	guardarposiciones@direccion
  1261  029F  0830               	movf	_POT1,w
  1262  02A0  120A  118A  2391  120A  118A  	fcall	_guardarposiciones
  1263                           
  1264                           ;mainP2.c: 371:                 break;
  1265  02A5  2AE0               	goto	l1976
  1266  02A6                     l1966:
  1267  02A6  0824               	movf	guardarservos@desfase,w
  1268  02A7  0725               	addwf	guardarservos@n,w
  1269  02A8  00A2               	movwf	??_guardarservos
  1270  02A9  0822               	movf	??_guardarservos,w
  1271  02AA  00A0               	movwf	guardarposiciones@direccion
  1272  02AB  082F               	movf	_POT2,w
  1273  02AC  120A  118A  2391  120A  118A  	fcall	_guardarposiciones
  1274                           
  1275                           ;mainP2.c: 373:                 break;
  1276  02B1  2AE0               	goto	l1976
  1277  02B2                     l1968:
  1278  02B2  0824               	movf	guardarservos@desfase,w
  1279  02B3  0725               	addwf	guardarservos@n,w
  1280  02B4  00A2               	movwf	??_guardarservos
  1281  02B5  0822               	movf	??_guardarservos,w
  1282  02B6  00A0               	movwf	guardarposiciones@direccion
  1283  02B7  082E               	movf	_POT3,w
  1284  02B8  120A  118A  2391  120A  118A  	fcall	_guardarposiciones
  1285                           
  1286                           ;mainP2.c: 375:                 break;
  1287  02BD  2AE0               	goto	l1976
  1288  02BE                     l1970:
  1289  02BE  0824               	movf	guardarservos@desfase,w
  1290  02BF  0725               	addwf	guardarservos@n,w
  1291  02C0  00A2               	movwf	??_guardarservos
  1292  02C1  0822               	movf	??_guardarservos,w
  1293  02C2  00A0               	movwf	guardarposiciones@direccion
  1294  02C3  082D               	movf	_POT4,w
  1295  02C4  120A  118A  2391  120A  118A  	fcall	_guardarposiciones
  1296                           
  1297                           ;mainP2.c: 377:                 break;
  1298  02C9  2AE0               	goto	l1976
  1299  02CA                     l1974:
  1300  02CA  0825               	movf	guardarservos@n,w
  1301  02CB  00A2               	movwf	??_guardarservos
  1302  02CC  01A3               	clrf	??_guardarservos+1
  1303                           
  1304                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1305                           ; Switch size 1, requested type "simple"
  1306                           ; Number of cases is 1, Range of values is 0 to 0
  1307                           ; switch strategies available:
  1308                           ; Name         Instructions Cycles
  1309                           ; simple_byte            4     3 (average)
  1310                           ; direct_byte           11     8 (fixed)
  1311                           ; jumptable            260     6 (fixed)
  1312                           ;	Chosen strategy is simple_byte
  1313  02CD  0823               	movf	??_guardarservos+1,w
  1314  02CE  3A00               	xorlw	0	; case 0
  1315  02CF  1903               	skipnz
  1316  02D0  2AD2               	goto	l2302
  1317  02D1  2AE0               	goto	l1976
  1318  02D2                     l2302:
  1319                           
  1320                           ; Switch size 1, requested type "simple"
  1321                           ; Number of cases is 4, Range of values is 0 to 3
  1322                           ; switch strategies available:
  1323                           ; Name         Instructions Cycles
  1324                           ; simple_byte           13     7 (average)
  1325                           ; direct_byte           20     8 (fixed)
  1326                           ; jumptable            260     6 (fixed)
  1327                           ;	Chosen strategy is simple_byte
  1328  02D2  0822               	movf	??_guardarservos,w
  1329  02D3  3A00               	xorlw	0	; case 0
  1330  02D4  1903               	skipnz
  1331  02D5  2A9A               	goto	l1964
  1332  02D6  3A01               	xorlw	1	; case 1
  1333  02D7  1903               	skipnz
  1334  02D8  2AA6               	goto	l1966
  1335  02D9  3A03               	xorlw	3	; case 2
  1336  02DA  1903               	skipnz
  1337  02DB  2AB2               	goto	l1968
  1338  02DC  3A01               	xorlw	1	; case 3
  1339  02DD  1903               	skipnz
  1340  02DE  2ABE               	goto	l1970
  1341  02DF  2AE0               	goto	l1976
  1342  02E0                     l1976:
  1343                           
  1344                           ;mainP2.c: 379:     }
  1345  02E0  3001               	movlw	1
  1346  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  1347  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  1348  02E3  00A2               	movwf	??_guardarservos
  1349  02E4  0822               	movf	??_guardarservos,w
  1350  02E5  07A5               	addwf	guardarservos@n,f
  1351  02E6                     l1978:
  1352  02E6  3004               	movlw	4
  1353  02E7  0225               	subwf	guardarservos@n,w
  1354  02E8  1C03               	skipc
  1355  02E9  2AEB               	goto	u791
  1356  02EA  2AEC               	goto	u790
  1357  02EB                     u791:
  1358  02EB  2ACA               	goto	l1974
  1359  02EC                     u790:
  1360  02EC                     l218:
  1361  02EC  0008               	return
  1362  02ED                     __end_of_guardarservos:
  1363                           
  1364                           	psect	text7
  1365  0391                     __ptext7:	
  1366 ;; *************** function _guardarposiciones *****************
  1367 ;; Defined at:
  1368 ;;		line 354 in file "mainP2.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  guardar         1    wreg     unsigned char 
  1371 ;;  direccion       1    0[BANK0 ] unsigned char 
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  guardar         1    1[BANK0 ] unsigned char 
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      void 
  1376 ;; Registers used:
  1377 ;;		wreg
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1383 ;;      Params:         0       1       0       0       0
  1384 ;;      Locals:         0       1       0       0       0
  1385 ;;      Temps:          0       0       0       0       0
  1386 ;;      Totals:         0       2       0       0       0
  1387 ;;Total ram usage:        2 bytes
  1388 ;; Hardware stack levels used:    1
  1389 ;; Hardware stack levels required when called:    2
  1390 ;; This function calls:
  1391 ;;		Nothing
  1392 ;; This function is called by:
  1393 ;;		_guardarservos
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           
  1398                           ;psect for function _guardarposiciones
  1399  0391                     _guardarposiciones:
  1400                           
  1401                           ;incstack = 0
  1402                           ; Regs used in _guardarposiciones: [wreg]
  1403                           ;guardarposiciones@guardar stored from wreg
  1404  0391  1283               	bcf	3,5	;RP0=0, select bank0
  1405  0392  1303               	bcf	3,6	;RP1=0, select bank0
  1406  0393  00A1               	movwf	guardarposiciones@guardar
  1407  0394                     l1938:
  1408                           
  1409                           ;mainP2.c: 355:     EEADR = direccion;
  1410  0394  0820               	movf	guardarposiciones@direccion,w
  1411  0395  1283               	bcf	3,5	;RP0=0, select bank2
  1412  0396  1703               	bsf	3,6	;RP1=1, select bank2
  1413  0397  008D               	movwf	13	;volatile
  1414                           
  1415                           ;mainP2.c: 356:     EEDAT = guardar;
  1416  0398  1283               	bcf	3,5	;RP0=0, select bank0
  1417  0399  1303               	bcf	3,6	;RP1=0, select bank0
  1418  039A  0821               	movf	guardarposiciones@guardar,w
  1419  039B  1283               	bcf	3,5	;RP0=0, select bank2
  1420  039C  1703               	bsf	3,6	;RP1=1, select bank2
  1421  039D  008C               	movwf	12	;volatile
  1422  039E                     l1940:
  1423                           
  1424                           ;mainP2.c: 357:     EECON1bits.WREN = 1;
  1425  039E  1683               	bsf	3,5	;RP0=1, select bank3
  1426  039F  1703               	bsf	3,6	;RP1=1, select bank3
  1427  03A0  150C               	bsf	12,2	;volsfr
  1428  03A1                     l1942:
  1429                           
  1430                           ;mainP2.c: 358:     INTCONbits.GIE = 0;
  1431  03A1  138B               	bcf	11,7	;volatile
  1432                           
  1433                           ;mainP2.c: 359:     EECON2 = 0X55;
  1434  03A2  3055               	movlw	85
  1435  03A3  008D               	movwf	13	;volsfr
  1436                           
  1437                           ;mainP2.c: 360:     EECON2 = 0XAA;
  1438  03A4  30AA               	movlw	170
  1439  03A5  008D               	movwf	13	;volsfr
  1440  03A6                     l1944:
  1441                           
  1442                           ;mainP2.c: 361:     EECON1bits.WR = 1;
  1443  03A6  148C               	bsf	12,1	;volsfr
  1444  03A7                     l1946:
  1445                           
  1446                           ;mainP2.c: 362:     INTCONbits.GIE = 1;
  1447  03A7  178B               	bsf	11,7	;volatile
  1448  03A8                     l204:	
  1449                           ;mainP2.c: 363:     while(EECON1bits.WR);
  1450                           
  1451  03A8  188C               	btfsc	12,1	;volsfr
  1452  03A9  2BAB               	goto	u771
  1453  03AA  2BAC               	goto	u770
  1454  03AB                     u771:
  1455  03AB  2BA8               	goto	l204
  1456  03AC                     u770:
  1457  03AC                     l206:
  1458                           
  1459                           ;mainP2.c: 364:     EECON1bits.WREN = 0;
  1460  03AC  110C               	bcf	12,2	;volsfr
  1461  03AD                     l207:
  1462  03AD  0008               	return
  1463  03AE                     __end_of_guardarposiciones:
  1464                           
  1465                           	psect	text8
  1466  0158                     __ptext8:	
  1467 ;; *************** function _configuraciones *****************
  1468 ;; Defined at:
  1469 ;;		line 185 in file "mainP2.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, status,2, status,0
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1483 ;;      Params:         0       0       0       0       0
  1484 ;;      Locals:         0       0       0       0       0
  1485 ;;      Temps:          0       0       0       0       0
  1486 ;;      Totals:         0       0       0       0       0
  1487 ;;Total ram usage:        0 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    2
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           
  1498                           ;psect for function _configuraciones
  1499  0158                     _configuraciones:
  1500  0158                     l1504:	
  1501                           ;incstack = 0
  1502                           ; Regs used in _configuraciones: [wreg+status,2+status,0]
  1503                           
  1504                           
  1505                           ;mainP2.c: 187:     ANSEL = 0X0F;
  1506  0158  300F               	movlw	15
  1507  0159  1683               	bsf	3,5	;RP0=1, select bank3
  1508  015A  1703               	bsf	3,6	;RP1=1, select bank3
  1509  015B  0088               	movwf	8	;volatile
  1510  015C                     l1506:
  1511                           
  1512                           ;mainP2.c: 188:     ANSELH = 0X00;
  1513  015C  0189               	clrf	9	;volatile
  1514  015D                     l1508:
  1515                           
  1516                           ;mainP2.c: 189:     TRISA = 0X0F;
  1517  015D  300F               	movlw	15
  1518  015E  1683               	bsf	3,5	;RP0=1, select bank1
  1519  015F  1303               	bcf	3,6	;RP1=0, select bank1
  1520  0160  0085               	movwf	5	;volatile
  1521  0161                     l1510:
  1522                           
  1523                           ;mainP2.c: 190:     TRISB = 0X07;
  1524  0161  3007               	movlw	7
  1525  0162  0086               	movwf	6	;volatile
  1526  0163                     l1512:
  1527                           
  1528                           ;mainP2.c: 191:     TRISC = 0X82;
  1529  0163  3082               	movlw	130
  1530  0164  0087               	movwf	7	;volatile
  1531                           
  1532                           ;mainP2.c: 192:     TRISD = 0X00;
  1533  0165  0188               	clrf	8	;volatile
  1534                           
  1535                           ;mainP2.c: 193:     TRISE = 0X00;
  1536  0166  0189               	clrf	9	;volatile
  1537                           
  1538                           ;mainP2.c: 194:     PORTA = 0X00;
  1539  0167  1283               	bcf	3,5	;RP0=0, select bank0
  1540  0168  1303               	bcf	3,6	;RP1=0, select bank0
  1541  0169  0185               	clrf	5	;volatile
  1542                           
  1543                           ;mainP2.c: 195:     PORTB = 0X00;
  1544  016A  0186               	clrf	6	;volatile
  1545                           
  1546                           ;mainP2.c: 196:     PORTC = 0X00;
  1547  016B  0187               	clrf	7	;volatile
  1548                           
  1549                           ;mainP2.c: 197:     PORTD = 0X00;
  1550  016C  0188               	clrf	8	;volatile
  1551                           
  1552                           ;mainP2.c: 198:     PORTE = 0X00;
  1553  016D  0189               	clrf	9	;volatile
  1554                           
  1555                           ;mainP2.c: 199:     posicion = 0;
  1556  016E  01AB               	clrf	_posicion
  1557  016F                     l1514:
  1558                           
  1559                           ;mainP2.c: 201:     OSCCONbits.IRCF = 0b111;
  1560  016F  3070               	movlw	112
  1561  0170  1683               	bsf	3,5	;RP0=1, select bank1
  1562  0171  1303               	bcf	3,6	;RP1=0, select bank1
  1563  0172  048F               	iorwf	15,f	;volatile
  1564  0173                     l1516:
  1565                           
  1566                           ;mainP2.c: 202:     OSCCONbits.SCS = 0b1;
  1567  0173  140F               	bsf	15,0	;volatile
  1568  0174                     l1518:
  1569                           
  1570                           ;mainP2.c: 205:     T1CONbits.T1CKPS = 0B10;
  1571  0174  1283               	bcf	3,5	;RP0=0, select bank0
  1572  0175  1303               	bcf	3,6	;RP1=0, select bank0
  1573  0176  0810               	movf	16,w	;volatile
  1574  0177  39CF               	andlw	-49
  1575  0178  3820               	iorlw	32
  1576  0179  0090               	movwf	16	;volatile
  1577  017A                     l1520:
  1578                           
  1579                           ;mainP2.c: 206:     TMR1H = 0B00111100;
  1580  017A  303C               	movlw	60
  1581  017B  008F               	movwf	15	;volatile
  1582  017C                     l1522:
  1583                           
  1584                           ;mainP2.c: 207:     TMR1L = 0B10101111;
  1585  017C  30AF               	movlw	175
  1586  017D  008E               	movwf	14	;volatile
  1587  017E                     l1524:
  1588                           
  1589                           ;mainP2.c: 208:     T1CONbits.TMR1ON = 0;
  1590  017E  1010               	bcf	16,0	;volatile
  1591  017F                     l1526:
  1592                           
  1593                           ;mainP2.c: 211:     INTCONbits.TMR0IF = 0;
  1594  017F  110B               	bcf	11,2	;volatile
  1595  0180                     l1528:
  1596                           
  1597                           ;mainP2.c: 212:     INTCONbits.TMR0IE = 1;
  1598  0180  168B               	bsf	11,5	;volatile
  1599  0181                     l1530:
  1600                           
  1601                           ;mainP2.c: 213:     PIR1bits.TMR1IF = 0;
  1602  0181  100C               	bcf	12,0	;volatile
  1603  0182                     l1532:
  1604                           
  1605                           ;mainP2.c: 214:     PIE1bits.TMR1IE = 1;
  1606  0182  1683               	bsf	3,5	;RP0=1, select bank1
  1607  0183  1303               	bcf	3,6	;RP1=0, select bank1
  1608  0184  140C               	bsf	12,0	;volatile
  1609  0185                     l1534:
  1610                           
  1611                           ;mainP2.c: 215:     INTCONbits.RBIF = 0;
  1612  0185  100B               	bcf	11,0	;volatile
  1613  0186                     l1536:
  1614                           
  1615                           ;mainP2.c: 216:     INTCONbits.RBIE = 0;
  1616  0186  118B               	bcf	11,3	;volatile
  1617  0187                     l1538:
  1618                           
  1619                           ;mainP2.c: 217:     INTCONbits.PEIE = 1;
  1620  0187  170B               	bsf	11,6	;volatile
  1621  0188                     l1540:
  1622                           
  1623                           ;mainP2.c: 218:     PIE1bits.RCIE = 1;
  1624  0188  168C               	bsf	12,5	;volatile
  1625  0189                     l1542:
  1626                           
  1627                           ;mainP2.c: 219:     INTCONbits.GIE = 1;
  1628  0189  178B               	bsf	11,7	;volatile
  1629  018A                     l1544:
  1630                           
  1631                           ;mainP2.c: 222:     IOCBbits.IOCB0 = 1;
  1632  018A  1416               	bsf	22,0	;volatile
  1633  018B                     l1546:
  1634                           
  1635                           ;mainP2.c: 223:     IOCBbits.IOCB1 = 1;
  1636  018B  1496               	bsf	22,1	;volatile
  1637  018C                     l1548:
  1638                           
  1639                           ;mainP2.c: 224:     IOCBbits.IOCB2 = 1;
  1640  018C  1516               	bsf	22,2	;volatile
  1641  018D                     l1550:
  1642                           
  1643                           ;mainP2.c: 227:     ADCON0bits.ADCS = 0b10;
  1644  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1645  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1646  018F  081F               	movf	31,w	;volatile
  1647  0190  393F               	andlw	-193
  1648  0191  3880               	iorlw	128
  1649  0192  009F               	movwf	31	;volatile
  1650  0193                     l1552:
  1651                           
  1652                           ;mainP2.c: 228:     ADCON0bits.CHS = 0b0000;
  1653  0193  30C3               	movlw	-61
  1654  0194  059F               	andwf	31,f	;volatile
  1655  0195                     l1554:
  1656                           
  1657                           ;mainP2.c: 229:     ADCON0bits.GO = 0b0;
  1658  0195  109F               	bcf	31,1	;volatile
  1659  0196                     l1556:
  1660                           
  1661                           ;mainP2.c: 230:     ADCON0bits.ADON = 0b1;
  1662  0196  141F               	bsf	31,0	;volatile
  1663  0197                     l1558:
  1664                           
  1665                           ;mainP2.c: 231:     ADCON1bits.ADFM = 0b0;
  1666  0197  1683               	bsf	3,5	;RP0=1, select bank1
  1667  0198  1303               	bcf	3,6	;RP1=0, select bank1
  1668  0199  139F               	bcf	31,7	;volatile
  1669  019A                     l1560:
  1670                           
  1671                           ;mainP2.c: 232:     ADCON1bits.VCFG1 = 0b0;
  1672  019A  129F               	bcf	31,5	;volatile
  1673  019B                     l1562:
  1674                           
  1675                           ;mainP2.c: 233:     ADCON1bits.VCFG0 = 0b0;
  1676  019B  121F               	bcf	31,4	;volatile
  1677  019C                     l1564:
  1678                           
  1679                           ;mainP2.c: 236:     PR2 = 249;
  1680  019C  30F9               	movlw	249
  1681  019D  0092               	movwf	18	;volatile
  1682  019E                     l1566:
  1683                           
  1684                           ;mainP2.c: 237:     CCP2CONbits.CCP2M = 0b1111;
  1685  019E  300F               	movlw	15
  1686  019F  1283               	bcf	3,5	;RP0=0, select bank0
  1687  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  1688  01A1  049D               	iorwf	29,f	;volatile
  1689  01A2                     l1568:
  1690                           
  1691                           ;mainP2.c: 238:     CCPR2L = 0x0F;
  1692  01A2  300F               	movlw	15
  1693  01A3  009B               	movwf	27	;volatile
  1694  01A4                     l1570:
  1695                           
  1696                           ;mainP2.c: 239:     PIR1bits.TMR2IF = 0;
  1697  01A4  108C               	bcf	12,1	;volatile
  1698  01A5                     l1572:
  1699                           
  1700                           ;mainP2.c: 240:     T2CONbits.T2CKPS = 0b11;
  1701  01A5  3003               	movlw	3
  1702  01A6  0492               	iorwf	18,f	;volatile
  1703  01A7                     l1574:
  1704                           
  1705                           ;mainP2.c: 241:     T2CONbits.TMR2ON = 1;
  1706  01A7  1512               	bsf	18,2	;volatile
  1707  01A8                     l152:	
  1708                           ;mainP2.c: 243:     while(!PIR1bits.TMR2IF);
  1709                           
  1710  01A8  1C8C               	btfss	12,1	;volatile
  1711  01A9  29AB               	goto	u441
  1712  01AA  29AC               	goto	u440
  1713  01AB                     u441:
  1714  01AB  29A8               	goto	l152
  1715  01AC                     u440:
  1716  01AC                     l1576:
  1717                           
  1718                           ;mainP2.c: 244:     TRISC = 0X80;
  1719  01AC  3080               	movlw	128
  1720  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  1721  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  1722  01AF  0087               	movwf	7	;volatile
  1723                           
  1724                           ;mainP2.c: 247:     SPBRG = 12;
  1725  01B0  300C               	movlw	12
  1726  01B1  0099               	movwf	25	;volatile
  1727  01B2                     l1578:
  1728                           
  1729                           ;mainP2.c: 248:     TXSTAbits.BRGH = 0;
  1730  01B2  1118               	bcf	24,2	;volatile
  1731  01B3                     l1580:
  1732                           
  1733                           ;mainP2.c: 249:     TXSTAbits.TXEN = 1;
  1734  01B3  1698               	bsf	24,5	;volatile
  1735  01B4                     l1582:
  1736                           
  1737                           ;mainP2.c: 250:     RCSTAbits.CREN = 1;
  1738  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1739  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1740  01B6  1618               	bsf	24,4	;volatile
  1741  01B7                     l1584:
  1742                           
  1743                           ;mainP2.c: 251:     TXSTAbits.SYNC = 0;
  1744  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  1745  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  1746  01B9  1218               	bcf	24,4	;volatile
  1747  01BA                     l1586:
  1748                           
  1749                           ;mainP2.c: 252:     RCSTAbits.SPEN = 1;
  1750  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1751  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1752  01BC  1798               	bsf	24,7	;volatile
  1753  01BD                     l1588:
  1754                           
  1755                           ;mainP2.c: 255:     OSCCONbits.SCS = 1;
  1756  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  1757  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  1758  01BF  140F               	bsf	15,0	;volatile
  1759  01C0                     l1590:
  1760                           
  1761                           ;mainP2.c: 256:     OPTION_REGbits.T0CS = 0;
  1762  01C0  1281               	bcf	1,5	;volatile
  1763  01C1                     l1592:
  1764                           
  1765                           ;mainP2.c: 257:     OPTION_REGbits.PSA = 0;
  1766  01C1  1181               	bcf	1,3	;volatile
  1767  01C2                     l1594:
  1768                           
  1769                           ;mainP2.c: 258:     OPTION_REGbits.PS2 = 0;
  1770  01C2  1101               	bcf	1,2	;volatile
  1771  01C3                     l1596:
  1772                           
  1773                           ;mainP2.c: 259:     OPTION_REGbits.PS1 = 1;
  1774  01C3  1481               	bsf	1,1	;volatile
  1775  01C4                     l1598:
  1776                           
  1777                           ;mainP2.c: 260:     OPTION_REGbits.PS0 = 1;
  1778  01C4  1401               	bsf	1,0	;volatile
  1779  01C5                     l1600:
  1780                           
  1781                           ;mainP2.c: 261:     INTCONbits.T0IF = 0;
  1782  01C5  110B               	bcf	11,2	;volatile
  1783                           
  1784                           ;mainP2.c: 262:     TMR0 = 131;
  1785  01C6  3083               	movlw	131
  1786  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1787  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  1788  01C9  0081               	movwf	1	;volatile
  1789  01CA                     l1602:
  1790                           
  1791                           ;mainP2.c: 263:     SERVOS.bit1 = 0;
  1792  01CA  12B2               	bcf	_SERVOS,5
  1793  01CB                     l1604:
  1794                           
  1795                           ;mainP2.c: 264:     SERVOS.modo = 0;
  1796  01CB  1332               	bcf	_SERVOS,6
  1797  01CC                     l155:
  1798  01CC  0008               	return
  1799  01CD                     __end_of_configuraciones:
  1800                           
  1801                           	psect	text9
  1802  0021                     __ptext9:	
  1803 ;; *************** function _AnalogReadServo *****************
  1804 ;; Defined at:
  1805 ;;		line 301 in file "mainP2.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1819 ;;      Params:         0       0       0       0       0
  1820 ;;      Locals:         0       0       0       0       0
  1821 ;;      Temps:          0       2       0       0       0
  1822 ;;      Totals:         0       2       0       0       0
  1823 ;;Total ram usage:        2 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    2
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_main
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function _AnalogReadServo
  1835  0021                     _AnalogReadServo:
  1836  0021                     l2040:	
  1837                           ;incstack = 0
  1838                           ; Regs used in _AnalogReadServo: [wreg-fsr0h+status,2+status,0]
  1839                           
  1840                           
  1841                           ;mainP2.c: 303:     if(!ADCON0bits.GO){
  1842  0021  1283               	bcf	3,5	;RP0=0, select bank0
  1843  0022  1303               	bcf	3,6	;RP1=0, select bank0
  1844  0023  189F               	btfsc	31,1	;volatile
  1845  0024  2826               	goto	u831
  1846  0025  2827               	goto	u830
  1847  0026                     u831:
  1848  0026  28E1               	goto	l195
  1849  0027                     u830:
  1850  0027  28BE               	goto	l2086
  1851  0028                     l174:	
  1852                           ;mainP2.c: 305:             case 0:
  1853                           
  1854                           
  1855                           ;mainP2.c: 306:                  if(!EECON1bits.WR)POT2 = ADRESH;
  1856  0028  1683               	bsf	3,5	;RP0=1, select bank3
  1857  0029  1703               	bsf	3,6	;RP1=1, select bank3
  1858  002A  188C               	btfsc	12,1	;volsfr
  1859  002B  282D               	goto	u841
  1860  002C  282E               	goto	u840
  1861  002D                     u841:
  1862  002D  28E1               	goto	l195
  1863  002E                     u840:
  1864  002E                     l2044:
  1865  002E  1283               	bcf	3,5	;RP0=0, select bank0
  1866  002F  1303               	bcf	3,6	;RP1=0, select bank0
  1867  0030  081E               	movf	30,w	;volatile
  1868  0031  00A0               	movwf	??_AnalogReadServo
  1869  0032  0820               	movf	??_AnalogReadServo,w
  1870  0033  00AF               	movwf	_POT2
  1871  0034  28E1               	goto	l195
  1872  0035                     l2046:
  1873                           
  1874                           ;mainP2.c: 310:                 ADCON0bits.CHS = 2;
  1875  0035  081F               	movf	31,w	;volatile
  1876  0036  39C3               	andlw	-61
  1877  0037  3808               	iorlw	8
  1878  0038  009F               	movwf	31	;volatile
  1879  0039                     l2048:
  1880                           
  1881                           ;mainP2.c: 311:                 if(POT2>=160) POT2 = 160;
  1882  0039  30A0               	movlw	160
  1883  003A  022F               	subwf	_POT2,w
  1884  003B  1C03               	skipc
  1885  003C  283E               	goto	u851
  1886  003D  283F               	goto	u850
  1887  003E                     u851:
  1888  003E  2843               	goto	l178
  1889  003F                     u850:
  1890  003F                     l2050:
  1891  003F  30A0               	movlw	160
  1892  0040  00A0               	movwf	??_AnalogReadServo
  1893  0041  0820               	movf	??_AnalogReadServo,w
  1894  0042  00AF               	movwf	_POT2
  1895  0043                     l178:
  1896                           
  1897                           ;mainP2.c: 312:                 if(POT2<=10) POT2 = 10;
  1898  0043  300B               	movlw	11
  1899  0044  022F               	subwf	_POT2,w
  1900  0045  1803               	skipnc
  1901  0046  2848               	goto	u861
  1902  0047  2849               	goto	u860
  1903  0048                     u861:
  1904  0048  28E1               	goto	l195
  1905  0049                     u860:
  1906  0049                     l2052:
  1907  0049  300A               	movlw	10
  1908  004A  00A0               	movwf	??_AnalogReadServo
  1909  004B  0820               	movf	??_AnalogReadServo,w
  1910  004C  00AF               	movwf	_POT2
  1911  004D  28E1               	goto	l195
  1912  004E                     l180:	
  1913                           ;mainP2.c: 315:             case 3:
  1914                           
  1915                           
  1916                           ;mainP2.c: 316:                 if(!EECON1bits.WR)POT3 = ADRESH;
  1917  004E  1683               	bsf	3,5	;RP0=1, select bank3
  1918  004F  1703               	bsf	3,6	;RP1=1, select bank3
  1919  0050  188C               	btfsc	12,1	;volsfr
  1920  0051  2853               	goto	u871
  1921  0052  2854               	goto	u870
  1922  0053                     u871:
  1923  0053  28E1               	goto	l195
  1924  0054                     u870:
  1925  0054                     l2054:
  1926  0054  1283               	bcf	3,5	;RP0=0, select bank0
  1927  0055  1303               	bcf	3,6	;RP1=0, select bank0
  1928  0056  081E               	movf	30,w	;volatile
  1929  0057  00A0               	movwf	??_AnalogReadServo
  1930  0058  0820               	movf	??_AnalogReadServo,w
  1931  0059  00AE               	movwf	_POT3
  1932  005A  28E1               	goto	l195
  1933  005B                     l2056:
  1934                           
  1935                           ;mainP2.c: 320:                 ADCON0bits.CHS = 3;
  1936  005B  081F               	movf	31,w	;volatile
  1937  005C  39C3               	andlw	-61
  1938  005D  380C               	iorlw	12
  1939  005E  009F               	movwf	31	;volatile
  1940  005F                     l2058:
  1941                           
  1942                           ;mainP2.c: 321:                 if(POT3>=160) POT3 = 160;
  1943  005F  30A0               	movlw	160
  1944  0060  022E               	subwf	_POT3,w
  1945  0061  1C03               	skipc
  1946  0062  2864               	goto	u881
  1947  0063  2865               	goto	u880
  1948  0064                     u881:
  1949  0064  2869               	goto	l183
  1950  0065                     u880:
  1951  0065                     l2060:
  1952  0065  30A0               	movlw	160
  1953  0066  00A0               	movwf	??_AnalogReadServo
  1954  0067  0820               	movf	??_AnalogReadServo,w
  1955  0068  00AE               	movwf	_POT3
  1956  0069                     l183:
  1957                           
  1958                           ;mainP2.c: 322:                 if(POT3<=10) POT3 = 10;
  1959  0069  300B               	movlw	11
  1960  006A  022E               	subwf	_POT3,w
  1961  006B  1803               	skipnc
  1962  006C  286E               	goto	u891
  1963  006D  286F               	goto	u890
  1964  006E                     u891:
  1965  006E  28E1               	goto	l195
  1966  006F                     u890:
  1967  006F                     l2062:
  1968  006F  300A               	movlw	10
  1969  0070  00A0               	movwf	??_AnalogReadServo
  1970  0071  0820               	movf	??_AnalogReadServo,w
  1971  0072  00AE               	movwf	_POT3
  1972  0073  28E1               	goto	l195
  1973  0074                     l185:	
  1974                           ;mainP2.c: 325:             case 6:
  1975                           
  1976                           
  1977                           ;mainP2.c: 326:                 if(!EECON1bits.WR)POT4 = ADRESH;
  1978  0074  1683               	bsf	3,5	;RP0=1, select bank3
  1979  0075  1703               	bsf	3,6	;RP1=1, select bank3
  1980  0076  188C               	btfsc	12,1	;volsfr
  1981  0077  2879               	goto	u901
  1982  0078  287A               	goto	u900
  1983  0079                     u901:
  1984  0079  28E1               	goto	l195
  1985  007A                     u900:
  1986  007A                     l2064:
  1987  007A  1283               	bcf	3,5	;RP0=0, select bank0
  1988  007B  1303               	bcf	3,6	;RP1=0, select bank0
  1989  007C  081E               	movf	30,w	;volatile
  1990  007D  00A0               	movwf	??_AnalogReadServo
  1991  007E  0820               	movf	??_AnalogReadServo,w
  1992  007F  00AD               	movwf	_POT4
  1993  0080  28E1               	goto	l195
  1994  0081                     l2066:
  1995                           
  1996                           ;mainP2.c: 330:                 ADCON0bits.CHS = 0;
  1997  0081  30C3               	movlw	-61
  1998  0082  059F               	andwf	31,f	;volatile
  1999  0083                     l2068:
  2000                           
  2001                           ;mainP2.c: 331:                 if(POT4>=160) POT4 = 160;
  2002  0083  30A0               	movlw	160
  2003  0084  022D               	subwf	_POT4,w
  2004  0085  1C03               	skipc
  2005  0086  2888               	goto	u911
  2006  0087  2889               	goto	u910
  2007  0088                     u911:
  2008  0088  288D               	goto	l188
  2009  0089                     u910:
  2010  0089                     l2070:
  2011  0089  30A0               	movlw	160
  2012  008A  00A0               	movwf	??_AnalogReadServo
  2013  008B  0820               	movf	??_AnalogReadServo,w
  2014  008C  00AD               	movwf	_POT4
  2015  008D                     l188:
  2016                           
  2017                           ;mainP2.c: 332:                 if(POT4<=10) POT4 = 10;
  2018  008D  300B               	movlw	11
  2019  008E  022D               	subwf	_POT4,w
  2020  008F  1803               	skipnc
  2021  0090  2892               	goto	u921
  2022  0091  2893               	goto	u920
  2023  0092                     u921:
  2024  0092  28E1               	goto	l195
  2025  0093                     u920:
  2026  0093                     l2072:
  2027  0093  300A               	movlw	10
  2028  0094  00A0               	movwf	??_AnalogReadServo
  2029  0095  0820               	movf	??_AnalogReadServo,w
  2030  0096  00AD               	movwf	_POT4
  2031  0097  28E1               	goto	l195
  2032  0098                     l190:	
  2033                           ;mainP2.c: 335:             case 9:
  2034                           
  2035                           
  2036                           ;mainP2.c: 336:                 if(!EECON1bits.WR)POT1 = ADRESH;
  2037  0098  1683               	bsf	3,5	;RP0=1, select bank3
  2038  0099  1703               	bsf	3,6	;RP1=1, select bank3
  2039  009A  188C               	btfsc	12,1	;volsfr
  2040  009B  289D               	goto	u931
  2041  009C  289E               	goto	u930
  2042  009D                     u931:
  2043  009D  28E1               	goto	l195
  2044  009E                     u930:
  2045  009E                     l2074:
  2046  009E  1283               	bcf	3,5	;RP0=0, select bank0
  2047  009F  1303               	bcf	3,6	;RP1=0, select bank0
  2048  00A0  081E               	movf	30,w	;volatile
  2049  00A1  00A0               	movwf	??_AnalogReadServo
  2050  00A2  0820               	movf	??_AnalogReadServo,w
  2051  00A3  00B0               	movwf	_POT1
  2052  00A4  28E1               	goto	l195
  2053  00A5                     l2076:
  2054                           
  2055                           ;mainP2.c: 340:                 ADCON0bits.CHS = 1;
  2056  00A5  081F               	movf	31,w	;volatile
  2057  00A6  39C3               	andlw	-61
  2058  00A7  3804               	iorlw	4
  2059  00A8  009F               	movwf	31	;volatile
  2060  00A9                     l2078:
  2061                           
  2062                           ;mainP2.c: 341:                 if(POT1>=160) POT1 = 160;
  2063  00A9  30A0               	movlw	160
  2064  00AA  0230               	subwf	_POT1,w
  2065  00AB  1C03               	skipc
  2066  00AC  28AE               	goto	u941
  2067  00AD  28AF               	goto	u940
  2068  00AE                     u941:
  2069  00AE  28B3               	goto	l193
  2070  00AF                     u940:
  2071  00AF                     l2080:
  2072  00AF  30A0               	movlw	160
  2073  00B0  00A0               	movwf	??_AnalogReadServo
  2074  00B1  0820               	movf	??_AnalogReadServo,w
  2075  00B2  00B0               	movwf	_POT1
  2076  00B3                     l193:
  2077                           
  2078                           ;mainP2.c: 342:                 if(POT1<=10) POT1 = 10;
  2079  00B3  300B               	movlw	11
  2080  00B4  0230               	subwf	_POT1,w
  2081  00B5  1803               	skipnc
  2082  00B6  28B8               	goto	u951
  2083  00B7  28B9               	goto	u950
  2084  00B8                     u951:
  2085  00B8  28E1               	goto	l195
  2086  00B9                     u950:
  2087  00B9                     l2082:
  2088  00B9  300A               	movlw	10
  2089  00BA  00A0               	movwf	??_AnalogReadServo
  2090  00BB  0820               	movf	??_AnalogReadServo,w
  2091  00BC  00B0               	movwf	_POT1
  2092  00BD  28E1               	goto	l195
  2093  00BE                     l2086:
  2094  00BE  0832               	movf	_SERVOS,w
  2095  00BF  391F               	andlw	31
  2096  00C0  00A0               	movwf	??_AnalogReadServo
  2097  00C1  01A1               	clrf	??_AnalogReadServo+1
  2098                           
  2099                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2100                           ; Switch size 1, requested type "simple"
  2101                           ; Number of cases is 1, Range of values is 0 to 0
  2102                           ; switch strategies available:
  2103                           ; Name         Instructions Cycles
  2104                           ; simple_byte            4     3 (average)
  2105                           ; direct_byte           11     8 (fixed)
  2106                           ; jumptable            260     6 (fixed)
  2107                           ;	Chosen strategy is simple_byte
  2108  00C2  0821               	movf	??_AnalogReadServo+1,w
  2109  00C3  3A00               	xorlw	0	; case 0
  2110  00C4  1903               	skipnz
  2111  00C5  28C7               	goto	l2304
  2112  00C6  28E1               	goto	l195
  2113  00C7                     l2304:
  2114                           
  2115                           ; Switch size 1, requested type "simple"
  2116                           ; Number of cases is 8, Range of values is 0 to 10
  2117                           ; switch strategies available:
  2118                           ; Name         Instructions Cycles
  2119                           ; simple_byte           25    13 (average)
  2120                           ; direct_byte           41     8 (fixed)
  2121                           ; jumptable            260     6 (fixed)
  2122                           ;	Chosen strategy is simple_byte
  2123  00C7  0820               	movf	??_AnalogReadServo,w
  2124  00C8  3A00               	xorlw	0	; case 0
  2125  00C9  1903               	skipnz
  2126  00CA  2828               	goto	l174
  2127  00CB  3A01               	xorlw	1	; case 1
  2128  00CC  1903               	skipnz
  2129  00CD  2835               	goto	l2046
  2130  00CE  3A02               	xorlw	2	; case 3
  2131  00CF  1903               	skipnz
  2132  00D0  284E               	goto	l180
  2133  00D1  3A07               	xorlw	7	; case 4
  2134  00D2  1903               	skipnz
  2135  00D3  285B               	goto	l2056
  2136  00D4  3A02               	xorlw	2	; case 6
  2137  00D5  1903               	skipnz
  2138  00D6  2874               	goto	l185
  2139  00D7  3A01               	xorlw	1	; case 7
  2140  00D8  1903               	skipnz
  2141  00D9  2881               	goto	l2066
  2142  00DA  3A0E               	xorlw	14	; case 9
  2143  00DB  1903               	skipnz
  2144  00DC  2898               	goto	l190
  2145  00DD  3A03               	xorlw	3	; case 10
  2146  00DE  1903               	skipnz
  2147  00DF  28A5               	goto	l2076
  2148  00E0  28E1               	goto	l195
  2149  00E1                     l195:
  2150  00E1  0008               	return
  2151  00E2                     __end_of_AnalogReadServo:
  2152                           
  2153                           	psect	text10
  2154  00E2                     __ptext10:	
  2155 ;; *************** function _rutInter *****************
  2156 ;; Defined at:
  2157 ;;		line 86 in file "mainP2.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;		None
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;		None
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2171 ;;      Params:         0       0       0       0       0
  2172 ;;      Locals:         0       0       0       0       0
  2173 ;;      Temps:          4       0       0       0       0
  2174 ;;      Totals:         4       0       0       0       0
  2175 ;;Total ram usage:        4 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    1
  2178 ;; This function calls:
  2179 ;;		_servos
  2180 ;; This function is called by:
  2181 ;;		Interrupt level 1
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           
  2186                           ;psect for function _rutInter
  2187  00E2                     _rutInter:
  2188  00E2                     i1l1688:
  2189                           
  2190                           ;mainP2.c: 88:     if(INTCONbits.TMR0IF) {
  2191  00E2  1D0B               	btfss	11,2	;volatile
  2192  00E3  28E5               	goto	u60_21
  2193  00E4  28E6               	goto	u60_20
  2194  00E5                     u60_21:
  2195  00E5  2906               	goto	i1l119
  2196  00E6                     u60_20:
  2197  00E6                     i1l1690:
  2198                           
  2199                           ;mainP2.c: 89:         SERVOS.bit0++;
  2200  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  2201  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  2202  00E8  0832               	movf	_SERVOS,w
  2203  00E9  391F               	andlw	31
  2204  00EA  00F2               	movwf	??_rutInter
  2205  00EB  0AF2               	incf	??_rutInter,f
  2206  00EC  0832               	movf	_SERVOS,w
  2207  00ED  0672               	xorwf	??_rutInter,w
  2208  00EE  39E0               	andlw	-32
  2209  00EF  0672               	xorwf	??_rutInter,w
  2210  00F0  00B2               	movwf	_SERVOS
  2211  00F1                     i1l1692:
  2212                           
  2213                           ;mainP2.c: 90:         INTCONbits.TMR0IF = 0;
  2214  00F1  110B               	bcf	11,2	;volatile
  2215  00F2                     i1l1694:
  2216                           
  2217                           ;mainP2.c: 91:         servos();
  2218  00F2  120A  118A  22ED  120A  118A  	fcall	_servos
  2219  00F7                     i1l1696:
  2220                           
  2221                           ;mainP2.c: 92:         if(SERVOS.modo && !EECON1bits.WR) ADCON0bits.GO = 1;
  2222  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  2223  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  2224  00F9  1F32               	btfss	_SERVOS,6
  2225  00FA  28FC               	goto	u61_21
  2226  00FB  28FD               	goto	u61_20
  2227  00FC                     u61_21:
  2228  00FC  2906               	goto	i1l119
  2229  00FD                     u61_20:
  2230  00FD                     i1l1698:
  2231  00FD  1683               	bsf	3,5	;RP0=1, select bank3
  2232  00FE  1703               	bsf	3,6	;RP1=1, select bank3
  2233  00FF  188C               	btfsc	12,1	;volsfr
  2234  0100  2902               	goto	u62_21
  2235  0101  2903               	goto	u62_20
  2236  0102                     u62_21:
  2237  0102  2906               	goto	i1l119
  2238  0103                     u62_20:
  2239  0103                     i1l1700:
  2240  0103  1283               	bcf	3,5	;RP0=0, select bank0
  2241  0104  1303               	bcf	3,6	;RP1=0, select bank0
  2242  0105  149F               	bsf	31,1	;volatile
  2243  0106                     i1l119:	
  2244                           ;mainP2.c: 93:     }
  2245                           
  2246                           
  2247                           ;mainP2.c: 95:     if(PIR1bits.TMR1IF){
  2248  0106  1283               	bcf	3,5	;RP0=0, select bank0
  2249  0107  1303               	bcf	3,6	;RP1=0, select bank0
  2250  0108  1C0C               	btfss	12,0	;volatile
  2251  0109  290B               	goto	u63_21
  2252  010A  290C               	goto	u63_20
  2253  010B                     u63_21:
  2254  010B  2916               	goto	i1l1712
  2255  010C                     u63_20:
  2256  010C                     i1l1702:
  2257                           
  2258                           ;mainP2.c: 96:         SERVOS.guardar = 1;
  2259  010C  17B2               	bsf	_SERVOS,7
  2260  010D                     i1l1704:
  2261                           
  2262                           ;mainP2.c: 97:         posicion ++;
  2263  010D  3001               	movlw	1
  2264  010E  00F2               	movwf	??_rutInter
  2265  010F  0872               	movf	??_rutInter,w
  2266  0110  07AB               	addwf	_posicion,f
  2267  0111                     i1l1706:
  2268                           
  2269                           ;mainP2.c: 98:         PIR1bits.TMR1IF = 0;
  2270  0111  100C               	bcf	12,0	;volatile
  2271  0112                     i1l1708:
  2272                           
  2273                           ;mainP2.c: 99:         TMR1H = 0B00111100;
  2274  0112  303C               	movlw	60
  2275  0113  008F               	movwf	15	;volatile
  2276  0114                     i1l1710:
  2277                           
  2278                           ;mainP2.c: 100:         TMR1L = 0B10101111;
  2279  0114  30AF               	movlw	175
  2280  0115  008E               	movwf	14	;volatile
  2281  0116                     i1l1712:
  2282                           
  2283                           ;mainP2.c: 103:     if(INTCONbits.RBIF && PORTBbits.RB0){
  2284  0116  1C0B               	btfss	11,0	;volatile
  2285  0117  2919               	goto	u64_21
  2286  0118  291A               	goto	u64_20
  2287  0119                     u64_21:
  2288  0119  2930               	goto	i1l1722
  2289  011A                     u64_20:
  2290  011A                     i1l1714:
  2291  011A  1C06               	btfss	6,0	;volatile
  2292  011B  291D               	goto	u65_21
  2293  011C  291E               	goto	u65_20
  2294  011D                     u65_21:
  2295  011D  2930               	goto	i1l1722
  2296  011E                     u65_20:
  2297  011E                     i1l1716:
  2298                           
  2299                           ;mainP2.c: 104:         if(!T1CONbits.TMR1ON)SERVOS.modo = ~SERVOS.modo;
  2300  011E  1810               	btfsc	16,0	;volatile
  2301  011F  2921               	goto	u66_21
  2302  0120  2922               	goto	u66_20
  2303  0121                     u66_21:
  2304  0121  292F               	goto	i1l1720
  2305  0122                     u66_20:
  2306  0122                     i1l1718:
  2307  0122  1003               	clrc
  2308  0123  1F32               	btfss	_SERVOS,6
  2309  0124  1403               	setc
  2310  0125  1803               	btfsc	3,0
  2311  0126  2928               	goto	u67_21
  2312  0127  292C               	goto	u67_20
  2313  0128                     u67_21:
  2314  0128  1283               	bcf	3,5	;RP0=0, select bank0
  2315  0129  1303               	bcf	3,6	;RP1=0, select bank0
  2316  012A  1732               	bsf	_SERVOS,6
  2317  012B  292F               	goto	u68_24
  2318  012C                     u67_20:
  2319  012C  1283               	bcf	3,5	;RP0=0, select bank0
  2320  012D  1303               	bcf	3,6	;RP1=0, select bank0
  2321  012E  1332               	bcf	_SERVOS,6
  2322  012F                     u68_24:
  2323  012F                     i1l1720:
  2324                           
  2325                           ;mainP2.c: 106:         INTCONbits.RBIF = 0;
  2326  012F  100B               	bcf	11,0	;volatile
  2327  0130                     i1l1722:
  2328                           
  2329                           ;mainP2.c: 109:     if(INTCONbits.RBIF && PORTBbits.RB1){
  2330  0130  1C0B               	btfss	11,0	;volatile
  2331  0131  2933               	goto	u69_21
  2332  0132  2934               	goto	u69_20
  2333  0133                     u69_21:
  2334  0133  2944               	goto	i1l124
  2335  0134                     u69_20:
  2336  0134                     i1l1724:
  2337  0134  1C86               	btfss	6,1	;volatile
  2338  0135  2937               	goto	u70_21
  2339  0136  2938               	goto	u70_20
  2340  0137                     u70_21:
  2341  0137  2944               	goto	i1l124
  2342  0138                     u70_20:
  2343  0138                     i1l1726:
  2344                           
  2345                           ;mainP2.c: 110:         if(SERVOS.modo){T1CONbits.TMR1ON = 1;
  2346  0138  1F32               	btfss	_SERVOS,6
  2347  0139  293B               	goto	u71_21
  2348  013A  293C               	goto	u71_20
  2349  013B                     u71_21:
  2350  013B  293E               	goto	i1l125
  2351  013C                     u71_20:
  2352  013C                     i1l1728:
  2353  013C  1410               	bsf	16,0	;volatile
  2354                           
  2355                           ;mainP2.c: 111:         PORTEbits.RE0 = 1;}
  2356  013D  1409               	bsf	9,0	;volatile
  2357  013E                     i1l125:
  2358                           
  2359                           ;mainP2.c: 112:         if(SERVOS.modo)SERVOS.guardar = 1;
  2360  013E  1F32               	btfss	_SERVOS,6
  2361  013F  2941               	goto	u72_21
  2362  0140  2942               	goto	u72_20
  2363  0141                     u72_21:
  2364  0141  2943               	goto	i1l126
  2365  0142                     u72_20:
  2366  0142                     i1l1730:
  2367  0142  17B2               	bsf	_SERVOS,7
  2368  0143                     i1l126:
  2369                           
  2370                           ;mainP2.c: 113:         INTCONbits.RBIF = 0;
  2371  0143  100B               	bcf	11,0	;volatile
  2372  0144                     i1l124:	
  2373                           ;mainP2.c: 114:     }
  2374                           
  2375                           
  2376                           ;mainP2.c: 116:     INTCONbits.RBIF = 0;
  2377  0144  100B               	bcf	11,0	;volatile
  2378                           
  2379                           ;mainP2.c: 118:     if(PIR1bits.RCIF){
  2380  0145  1E8C               	btfss	12,5	;volatile
  2381  0146  2948               	goto	u73_21
  2382  0147  2949               	goto	u73_20
  2383  0148                     u73_21:
  2384  0148  294F               	goto	i1l128
  2385  0149                     u73_20:
  2386  0149                     i1l1732:
  2387                           
  2388                           ;mainP2.c: 119:         EXTREC = RCREG;
  2389  0149  081A               	movf	26,w	;volatile
  2390  014A  00F2               	movwf	??_rutInter
  2391  014B  0872               	movf	??_rutInter,w
  2392  014C  00AC               	movwf	_EXTREC
  2393  014D                     i1l1734:
  2394                           
  2395                           ;mainP2.c: 120:         UART.datorecep = 1;
  2396  014D  1431               	bsf	_UART,0
  2397  014E                     i1l1736:
  2398                           
  2399                           ;mainP2.c: 121:         PIR1bits.RCIF = 0;
  2400  014E  128C               	bcf	12,5	;volatile
  2401  014F                     i1l128:
  2402  014F  0875               	movf	??_rutInter+3,w
  2403  0150  008A               	movwf	10
  2404  0151  0874               	movf	??_rutInter+2,w
  2405  0152  0084               	movwf	4
  2406  0153  0E73               	swapf	??_rutInter+1,w
  2407  0154  0083               	movwf	3
  2408  0155  0EFE               	swapf	btemp,f
  2409  0156  0E7E               	swapf	btemp,w
  2410  0157  0009               	retfie
  2411  0158                     __end_of_rutInter:
  2412                           
  2413                           	psect	intentry
  2414  0004                     __pintentry:	
  2415                           ;incstack = 0
  2416                           ; Regs used in _rutInter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2417                           
  2418  0004                     interrupt_function:
  2419  007E                     saved_w	set	btemp
  2420  0004  00FE               	movwf	btemp
  2421  0005  0E03               	swapf	3,w
  2422  0006  00F3               	movwf	??_rutInter+1
  2423  0007  0804               	movf	4,w
  2424  0008  00F4               	movwf	??_rutInter+2
  2425  0009  080A               	movf	10,w
  2426  000A  00F5               	movwf	??_rutInter+3
  2427  000B  120A  118A  28E2   	ljmp	_rutInter
  2428                           
  2429                           	psect	text11
  2430  02ED                     __ptext11:	
  2431 ;; *************** function _servos *****************
  2432 ;; Defined at:
  2433 ;;		line 267 in file "mainP2.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;		None
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;		None
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      void 
  2440 ;; Registers used:
  2441 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2447 ;;      Params:         0       0       0       0       0
  2448 ;;      Locals:         0       0       0       0       0
  2449 ;;      Temps:          2       0       0       0       0
  2450 ;;      Totals:         2       0       0       0       0
  2451 ;;Total ram usage:        2 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; This function calls:
  2454 ;;		Nothing
  2455 ;; This function is called by:
  2456 ;;		_rutInter
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           
  2461                           ;psect for function _servos
  2462  02ED                     _servos:
  2463  02ED                     i1l1460:	
  2464                           ;incstack = 0
  2465                           ; Regs used in _servos: [wreg-fsr0h+status,2+status,0]
  2466                           
  2467                           
  2468                           ;mainP2.c: 269:     if(SERVOS.bit0 == 15) SERVOS.bit0 = 0;
  2469  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2470  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2471  02EF  0832               	movf	_SERVOS,w
  2472  02F0  391F               	andlw	31
  2473  02F1  3A0F               	xorlw	15
  2474  02F2  1D03               	skipz
  2475  02F3  2AF5               	goto	u43_21
  2476  02F4  2AF6               	goto	u43_20
  2477  02F5                     u43_21:
  2478  02F5  2B19               	goto	i1l1498
  2479  02F6                     u43_20:
  2480  02F6                     i1l1462:
  2481  02F6  30E0               	movlw	-32
  2482  02F7  05B2               	andwf	_SERVOS,f
  2483  02F8  2B19               	goto	i1l1498
  2484  02F9                     i1l1464:
  2485                           
  2486                           ;mainP2.c: 273:             TMR0 = POT1; PORTDbits.RD0 = 1;
  2487  02F9  0830               	movf	_POT1,w
  2488  02FA  0081               	movwf	1	;volatile
  2489  02FB                     i1l1466:
  2490  02FB  1408               	bsf	8,0	;volatile
  2491                           
  2492                           ;mainP2.c: 274:             break;
  2493  02FC  2B3C               	goto	i1l169
  2494  02FD                     i1l1468:
  2495                           
  2496                           ;mainP2.c: 276:             TMR0 = 255-POT1; PORTDbits.RD0 = 0;
  2497  02FD  0930               	comf	_POT1,w
  2498  02FE  0081               	movwf	1	;volatile
  2499  02FF                     i1l1470:
  2500  02FF  1008               	bcf	8,0	;volatile
  2501                           
  2502                           ;mainP2.c: 277:             break;
  2503  0300  2B3C               	goto	i1l169
  2504  0301                     i1l1472:
  2505                           
  2506                           ;mainP2.c: 279:             TMR0 = POT2; PORTDbits.RD1 = 1;
  2507  0301  082F               	movf	_POT2,w
  2508  0302  0081               	movwf	1	;volatile
  2509  0303                     i1l1474:
  2510  0303  1488               	bsf	8,1	;volatile
  2511                           
  2512                           ;mainP2.c: 280:             break;
  2513  0304  2B3C               	goto	i1l169
  2514  0305                     i1l1476:
  2515                           
  2516                           ;mainP2.c: 282:              TMR0 = 255-POT2; PORTDbits.RD1 = 0;
  2517  0305  092F               	comf	_POT2,w
  2518  0306  0081               	movwf	1	;volatile
  2519  0307                     i1l1478:
  2520  0307  1088               	bcf	8,1	;volatile
  2521                           
  2522                           ;mainP2.c: 283:             break;
  2523  0308  2B3C               	goto	i1l169
  2524  0309                     i1l1480:
  2525                           
  2526                           ;mainP2.c: 285:             TMR0 = POT3; PORTDbits.RD2 = 1;
  2527  0309  082E               	movf	_POT3,w
  2528  030A  0081               	movwf	1	;volatile
  2529  030B                     i1l1482:
  2530  030B  1508               	bsf	8,2	;volatile
  2531                           
  2532                           ;mainP2.c: 286:             break;
  2533  030C  2B3C               	goto	i1l169
  2534  030D                     i1l1484:
  2535                           
  2536                           ;mainP2.c: 288:             TMR0 = 255-POT3; PORTDbits.RD2 = 0;
  2537  030D  092E               	comf	_POT3,w
  2538  030E  0081               	movwf	1	;volatile
  2539  030F                     i1l1486:
  2540  030F  1108               	bcf	8,2	;volatile
  2541                           
  2542                           ;mainP2.c: 289:             break;
  2543  0310  2B3C               	goto	i1l169
  2544  0311                     i1l1488:
  2545                           
  2546                           ;mainP2.c: 291:             TMR0 = POT4; PORTDbits.RD3 = 1;
  2547  0311  082D               	movf	_POT4,w
  2548  0312  0081               	movwf	1	;volatile
  2549  0313                     i1l1490:
  2550  0313  1588               	bsf	8,3	;volatile
  2551                           
  2552                           ;mainP2.c: 292:             break;
  2553  0314  2B3C               	goto	i1l169
  2554  0315                     i1l1492:
  2555                           
  2556                           ;mainP2.c: 294:             TMR0 = 255-POT4; PORTDbits.RD3 = 0;
  2557  0315  092D               	comf	_POT4,w
  2558  0316  0081               	movwf	1	;volatile
  2559  0317                     i1l1494:
  2560  0317  1188               	bcf	8,3	;volatile
  2561                           
  2562                           ;mainP2.c: 295:             break;
  2563  0318  2B3C               	goto	i1l169
  2564  0319                     i1l1498:
  2565  0319  0832               	movf	_SERVOS,w
  2566  031A  391F               	andlw	31
  2567  031B  00F0               	movwf	??_servos
  2568  031C  01F1               	clrf	??_servos+1
  2569                           
  2570                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2571                           ; Switch size 1, requested type "simple"
  2572                           ; Number of cases is 1, Range of values is 0 to 0
  2573                           ; switch strategies available:
  2574                           ; Name         Instructions Cycles
  2575                           ; simple_byte            4     3 (average)
  2576                           ; direct_byte           11     8 (fixed)
  2577                           ; jumptable            260     6 (fixed)
  2578                           ;	Chosen strategy is simple_byte
  2579  031D  0871               	movf	??_servos+1,w
  2580  031E  3A00               	xorlw	0	; case 0
  2581  031F  1903               	skipnz
  2582  0320  2B22               	goto	i1l2306
  2583  0321  2B3C               	goto	i1l169
  2584  0322                     i1l2306:
  2585                           
  2586                           ; Switch size 1, requested type "simple"
  2587                           ; Number of cases is 8, Range of values is 0 to 10
  2588                           ; switch strategies available:
  2589                           ; Name         Instructions Cycles
  2590                           ; simple_byte           25    13 (average)
  2591                           ; direct_byte           41     8 (fixed)
  2592                           ; jumptable            260     6 (fixed)
  2593                           ;	Chosen strategy is simple_byte
  2594  0322  0870               	movf	??_servos,w
  2595  0323  3A00               	xorlw	0	; case 0
  2596  0324  1903               	skipnz
  2597  0325  2AF9               	goto	i1l1464
  2598  0326  3A01               	xorlw	1	; case 1
  2599  0327  1903               	skipnz
  2600  0328  2AFD               	goto	i1l1468
  2601  0329  3A02               	xorlw	2	; case 3
  2602  032A  1903               	skipnz
  2603  032B  2B01               	goto	i1l1472
  2604  032C  3A07               	xorlw	7	; case 4
  2605  032D  1903               	skipnz
  2606  032E  2B05               	goto	i1l1476
  2607  032F  3A02               	xorlw	2	; case 6
  2608  0330  1903               	skipnz
  2609  0331  2B09               	goto	i1l1480
  2610  0332  3A01               	xorlw	1	; case 7
  2611  0333  1903               	skipnz
  2612  0334  2B0D               	goto	i1l1484
  2613  0335  3A0E               	xorlw	14	; case 9
  2614  0336  1903               	skipnz
  2615  0337  2B11               	goto	i1l1488
  2616  0338  3A03               	xorlw	3	; case 10
  2617  0339  1903               	skipnz
  2618  033A  2B15               	goto	i1l1492
  2619  033B  2B3C               	goto	i1l169
  2620  033C                     i1l169:
  2621  033C  0008               	return
  2622  033D                     __end_of_servos:
  2623  007E                     btemp	set	126	;btemp
  2624  007E                     wtemp0	set	126
  2625                           
  2626                           	psect	config
  2627                           
  2628                           ;Config register CONFIG1 @ 0x2007
  2629                           ;	Oscillator Selection bits
  2630                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2631                           ;	Watchdog Timer Enable bit
  2632                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2633                           ;	Power-up Timer Enable bit
  2634                           ;	PWRTE = OFF, PWRT disabled
  2635                           ;	RE3/MCLR pin function select bit
  2636                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2637                           ;	Code Protection bit
  2638                           ;	CP = OFF, Program memory code protection is disabled
  2639                           ;	Data Code Protection bit
  2640                           ;	CPD = OFF, Data memory code protection is disabled
  2641                           ;	Brown Out Reset Selection bits
  2642                           ;	BOREN = OFF, BOR disabled
  2643                           ;	Internal External Switchover bit
  2644                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2645                           ;	Fail-Safe Clock Monitor Enabled bit
  2646                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2647                           ;	Low Voltage Programming Enable bit
  2648                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2649                           ;	In-Circuit Debugger Mode bit
  2650                           ;	DEBUG = 0x1, unprogrammed default
  2651  2007                     	org	8199
  2652  2007  20F4               	dw	8436
  2653                           
  2654                           ;Config register CONFIG2 @ 0x2008
  2655                           ;	Brown-out Reset Selection bit
  2656                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2657                           ;	Flash Program Memory Self Write Enable bits
  2658                           ;	WRT = OFF, Write protection off
  2659  2008                     	org	8200
  2660  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80     11      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _rutInter in COMMON

    _rutInter->_servos

Critical Paths under _main in BANK0

    _main->_guardar3SEG
    _leer3SEG->_leerSERVOS
    _leerSERVOS->_leerposiciones
    _guardar3SEG->_guardarservos
    _guardarservos->_guardarposiciones

Critical Paths under _rutInter in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rutInter in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutInter in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutInter in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1209
                                              8 BANK0      3     3      0
                    _AnalogReadServo
                    _configuraciones
                        _guardar3SEG
                           _leer3SEG
                          _send1dato
 ---------------------------------------------------------------------------------
 (1) _leer3SEG                                             2     2      0     409
                                              5 BANK0      2     2      0
                         _leerSERVOS
                          _send1dato
 ---------------------------------------------------------------------------------
 (1) _send1dato                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _leerSERVOS                                           4     4      0     378
                                              1 BANK0      4     4      0
                     _leerposiciones
 ---------------------------------------------------------------------------------
 (3) _leerposiciones                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _guardar3SEG                                          2     2      0     769
                                              6 BANK0      2     2      0
                      _guardarservos
 ---------------------------------------------------------------------------------
 (2) _guardarservos                                        4     4      0     769
                                              2 BANK0      4     4      0
                  _guardarposiciones
 ---------------------------------------------------------------------------------
 (3) _guardarposiciones                                    2     1      1     422
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _configuraciones                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AnalogReadServo                                      2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _rutInter                                             4     4      0       0
                                              2 COMMON     4     4      0
                             _servos
 ---------------------------------------------------------------------------------
 (5) _servos                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AnalogReadServo
   _configuraciones
   _guardar3SEG
     _guardarservos
       _guardarposiciones
   _leer3SEG
     _leerSERVOS
       _leerposiciones
     _send1dato
   _send1dato

 _rutInter (ROOT)
   _servos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon May 17 20:13:55 2021

                       l201 03C8                         l204 03A8                         l221 03BC  
                       l206 03AC                         l134 0222                         l207 03AD  
                       l135 01D3                         l152 01A8                         l232 0294  
                       l136 0205                         l145 020F                         l218 02EC  
                       l146 021C                         l138 01D9                         l155 01CC  
                       l243 033E                         l139 0204                         l180 004E  
                       l236 036B                         l190 0098                         l174 0028  
                       l246 0369                         l183 0069                         l239 0390  
                       l193 00B3                         l185 0074                         l178 0043  
                       l195 00E1                         l188 008D                         l198 03C2  
                       _PR2 0092                         u440 01AC                         u441 01AB  
                       u800 0294                         u801 0293                         u900 007A  
                       u901 0079                         u910 0089                         u830 0027  
                       u911 0088                         u831 0026                         u815 034D  
                       u920 0093                         u840 002E                         u921 0092  
                       u841 002D                         u825 0374                         u930 009E  
                       u850 003F                         u770 03AC                         u931 009D  
                       u851 003E                         u771 03AB                         u940 00AF  
                       u860 0049                         u780 03C8                         u941 00AE  
                       u861 0048                         u781 03C7                         u950 00B9  
                       u870 0054                         u790 02EC                         u951 00B8  
                       u871 0053                         u791 02EB                         u880 0065  
                       u960 01D8                         u881 0064                         u961 01D7  
                       u890 006F                         u970 0209                         u891 006E  
                       u971 0208                         u980 0214                         u981 0213  
                       fsr0 0004                 leerSERVOS@n 0024                        l2000 0274  
                      l2002 028A                        l2010 033D                        l2004 028E  
                      l2012 033F                        l2020 035A                        l2100 01E1  
                      l2030 0371                        l2014 0343                        l2040 0021  
                      l2016 034A                        l2104 01E8                        l2112 01F1  
                      l2050 003F                        l2034 0381                        l2026 036A  
                      l2114 0209                        l2106 01EA                        l2122 0222  
                      l2060 0065                        l2052 0049                        l2044 002E  
                      l2300 038B                        l2028 036C                        l2116 0214  
                      l2070 0089                        l2062 006F                        l2054 0054  
                      l2046 0035                        l1510 0161                        l2302 02D2  
                      l2118 0219                        l2304 00C7                        l2080 00AF  
                      l2072 0093                        l2064 007A                        l2056 005B  
                      l2048 0039                        l1600 01C5                        l1520 017A  
                      l1512 0163                        l1504 0158                        l2082 00B9  
                      l2074 009E                        l2066 0081                        l2058 005F  
                      l1602 01CA                        l1530 0181                        l1522 017C  
                      l1514 016F                        l1506 015C                        l2076 00A5  
                      l2068 0083                        l1604 01CB                        l1540 0188  
                      l1532 0182                        l1524 017E                        l1516 0173  
                      l1508 015D                        l2092 01CD                        l2078 00A9  
                      l2086 00BE                        l1550 018D                        l1542 0189  
                      l1534 0185                        l1526 017F                        l1518 0174  
                      l1560 019A                        l1552 0193                        l1544 018A  
                      l1536 0186                        l1528 0180                        l2096 01DB  
                      l1570 01A4                        l1562 019B                        l1554 0195  
                      l1546 018B                        l1538 0187                        l2098 01DF  
                      l1580 01B3                        l1572 01A5                        l1564 019C  
                      l1556 0196                        l1548 018C                        l2292 01F9  
                      l1590 01C0                        l1582 01B4                        l1574 01A7  
                      l1566 019E                        l1558 0197                        l2294 0230  
                      l1592 01C1                        l1584 01B7                        l1576 01AC  
                      l1568 01A2                        l2296 0364                        l1594 01C2  
                      l1586 01BA                        l1578 01B2                        l2298 027C  
                      l1596 01C3                        l1588 01BD                        l1940 039E  
                      l1598 01C4                        l1942 03A1                        l1950 03B5  
                      l1944 03A6                        l1952 03B8                        l1946 03A7  
                      l1938 0394                        l1970 02BE                        l1964 029A  
                      l1948 03B1                        l1956 03C0                        l1966 02A6  
                      l1974 02CA                        l1958 0298                        l1990 0240  
                      l1968 02B2                        l1976 02E0                        l1992 024D  
                      l1984 023E                        l1978 02E6                        l1994 025A  
                      l1996 0267                        _POT1 0030                        _POT2 002F  
                      _POT3 002E                        _POT4 002D                        _UART 0031  
                      _TMR0 0001                        _main 01CD                        btemp 007E  
          ?_configuraciones 0070                        start 000E                ?_guardar3SEG 0070  
                     ?_main 0070                       _EEADR 010D                       _EEDAT 010C  
                     _ANSEL 0188                       i1l124 0144                       i1l125 013E  
                     i1l126 0143                       i1l119 0106                       i1l128 014F  
                     i1l169 033C                       _RCREG 001A                       _TMR1H 000F  
                     _TMR1L 000E                       _SPBRG 0099                       u43_20 02F6  
                     u43_21 02F5                       _PORTA 0005                       _PORTB 0006  
                     _PORTC 0007                       _PORTD 0008                       _PORTE 0009  
                     u60_20 00E6                       u60_21 00E5                       u61_20 00FD  
                     u61_21 00FC                       u70_20 0138                       u62_20 0103  
                     u70_21 0137                       u62_21 0102                       u71_20 013C  
                     u63_20 010C                       u71_21 013B                       u63_21 010B  
                     u72_20 0142                       u64_20 011A                       u72_21 0141  
                     u64_21 0119                       u73_20 0149                       u65_20 011E  
                     u73_21 0148                       u65_21 011D                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                       u66_20 0122                       u66_21 0121  
                     u67_20 012C                       u67_21 0128                       u68_24 012F  
                     u69_20 0134                       u69_21 0133                       _TXREG 0019  
             send1dato@dato 0020                       pclath 000A                       status 0003  
                     wtemp0 007E             __initialization 0011                __end_of_main 023B  
                    ??_main 0028                      _ADRESH 001E                      _CCPR2L 001B  
                    _EECON2 018D      __size_of_guardarservos 0058                      _ANSELH 0189  
                    i1l2306 0322                      i1l1460 02ED                      i1l1700 0103  
                    i1l1470 02FF                      i1l1462 02F6                      i1l1710 0114  
                    i1l1702 010C                      i1l1480 0309                      i1l1472 0301  
                    i1l1464 02F9                      i1l1720 012F                      i1l1704 010D  
                    i1l1712 0116                      i1l1490 0313                      i1l1482 030B  
                    i1l1474 0303                      i1l1466 02FB                      i1l1730 0142  
                    i1l1714 011A                      i1l1722 0130                      i1l1706 0111  
                    i1l1492 0315                      i1l1484 030D                      i1l1476 0305  
                    i1l1468 02FD                      i1l1732 0149                      i1l1724 0134  
                    i1l1716 011E                      i1l1708 0112                      i1l1494 0317  
                    i1l1486 030F                      i1l1478 0307                      i1l1734 014D  
                    i1l1726 0138                      i1l1718 0122                      i1l1488 0311  
                    i1l1736 014E                      i1l1728 013C                      i1l1498 0319  
                    i1l1690 00E6                      i1l1692 00F1                      i1l1694 00F2  
                    i1l1696 00F7                      i1l1688 00E2                      i1l1698 00FD  
                    _EXTREC 002C                      _SERVOS 0032            __end_of_leer3SEG 036A  
                    _servos 02ED     __size_of_leerposiciones 000F                      saved_w 007E  
          __end_of_rutInter 0158  guardarposiciones@direccion 0020     __end_of__initialization 001D  
            __pcstackCOMMON 0070               _guardarservos 0295        __size_of_guardar3SEG 0027  
            _OPTION_REGbits 0081    __size_of_AnalogReadServo 00C1                  __pbssBANK0 002B  
        __size_of_send1dato 000C                  __pmaintext 01CD              ?_guardarservos 0070  
                __pintentry 0004                     ?_servos 0070                  _leerSERVOS 023B  
                 ?_leer3SEG 0070           _guardarposiciones 0391          ?_guardarposiciones 0020  
       ??_guardarposiciones 0076    __size_of_configuraciones 0075                   ?_rutInter 0070  
                   __ptext1 033D                     __ptext2 03BD                     __ptext3 023B  
                   __ptext4 03AE                     __ptext5 036A                     __ptext6 0295  
                   __ptext7 0391                     __ptext8 0158                     __ptext9 0021  
           __size_of_servos 0050                   _T1CONbits 0010              _leerposiciones 03AE  
                 _T2CONbits 0012           __end_of_send1dato 03C9   __end_of_guardarposiciones 03AE  
                ??_leer3SEG 0025        end_of_initialization 001D           ??_AnalogReadServo 0020  
           ??_guardarservos 0022                   _RCSTAbits 0018                   _SERVINDIC 0077  
                ??_rutInter 0072      __end_of_leerposiciones 03BD                   _PORTBbits 0006  
                 _PORTDbits 0008                   _PORTEbits 0009                 ?_leerSERVOS 0070  
               _CCP2CONbits 001D                   _TXSTAbits 0098           leerSERVOS@desfase 0023  
           ?_leerposiciones 0070              __end_of_servos 033D           ??_configuraciones 0076  
       start_initialization 0011  __size_of_guardarposiciones 001D        guardarservos@desfase 0024  
             ??_guardar3SEG 0026         __size_of_leerSERVOS 005A                    ??_servos 0070  
               __pbssCOMMON 0076                   ___latbits 0002                   _datEEPROM 0076  
             __pcstackBANK0 0020              guardarservos@n 0025           __size_of_leer3SEG 002D  
         __size_of_rutInter 0076         __end_of_guardar3SEG 0391             _AnalogReadServo 0021  
                 _send1dato 03BD           interrupt_function 0004                    _IOCBbits 0096  
                  _PIE1bits 008C                    _PIR1bits 000C                  _ADCON0bits 001F  
                _ADCON1bits 009F     leerposiciones@direccion 0020                ??_leerSERVOS 0021  
                ?_send1dato 0070                  _EECON1bits 018C            ??_leerposiciones 0076  
     __end_of_guardarservos 02ED             _configuraciones 0158                 _guardar3SEG 036A  
        __end_of_leerSERVOS 0295     __end_of_AnalogReadServo 00E2                    __ptext10 00E2  
                  __ptext11 02ED                    _leer3SEG 033D               __size_of_main 006E  
                  _posicion 002B    guardarposiciones@guardar 0021                    _rutInter 00E2  
                _INTCONbits 000B                    intlevel1 0000                 ??_send1dato 0076  
   __end_of_configuraciones 01CD                  _OSCCONbits 008F            ?_AnalogReadServo 0070  
