

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri May 14 10:42:57 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0019                     _TXREG	set	25
   215  001E                     _ADRESH	set	30
   216  0008                     _PORTDbits	set	8
   217  0001                     _TMR0	set	1
   218  0018                     _RCSTAbits	set	24
   219  0009                     _PORTE	set	9
   220  0008                     _PORTD	set	8
   221  0007                     _PORTC	set	7
   222  0006                     _PORTB	set	6
   223  0005                     _PORTA	set	5
   224  001A                     _RCREG	set	26
   225  0009                     _PORTEbits	set	9
   226  0010                     _T1CONbits	set	16
   227  0006                     _PORTBbits	set	6
   228  000E                     _TMR1L	set	14
   229  000F                     _TMR1H	set	15
   230  000C                     _PIR1bits	set	12
   231  001F                     _ADCON0bits	set	31
   232  000B                     _INTCONbits	set	11
   233  0081                     _OPTION_REGbits	set	129
   234  0098                     _TXSTAbits	set	152
   235  0099                     _SPBRG	set	153
   236  009F                     _ADCON1bits	set	159
   237  0096                     _IOCBbits	set	150
   238  008C                     _PIE1bits	set	140
   239  008F                     _OSCCONbits	set	143
   240  0089                     _TRISE	set	137
   241  0088                     _TRISD	set	136
   242  0087                     _TRISC	set	135
   243  0086                     _TRISB	set	134
   244  0085                     _TRISA	set	133
   245  010C                     _EEDAT	set	268
   246  010D                     _EEADR	set	269
   247  018D                     _EECON2	set	397
   248  018C                     _EECON1bits	set	396
   249  0189                     _ANSELH	set	393
   250  0188                     _ANSEL	set	392
   251                           
   252                           	psect	cinit
   253  0011                     start_initialization:	
   254                           ; #config settings
   255                           
   256  0011                     __initialization:
   257                           
   258                           ; Clear objects allocated to COMMON
   259  0011  01F6               	clrf	__pbssCOMMON& (0+127)
   260  0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   261  0013  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   262                           
   263                           ; Clear objects allocated to BANK0
   264  0014  1283               	bcf	3,5	;RP0=0, select bank0
   265  0015  1303               	bcf	3,6	;RP1=0, select bank0
   266  0016  01AB               	clrf	__pbssBANK0& (0+127)
   267  0017  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   268  0018  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   269  0019  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   270  001A  01AF               	clrf	(__pbssBANK0+4)& (0+127)
   271  001B  01B0               	clrf	(__pbssBANK0+5)& (0+127)
   272  001C  01B1               	clrf	(__pbssBANK0+6)& (0+127)
   273  001D                     end_of_initialization:	
   274                           ;End of C runtime variable initialization code
   275                           
   276  001D                     __end_of__initialization:
   277  001D  0183               	clrf	3
   278  001E  120A  118A  2A97   	ljmp	_main	;jump to C main() function
   279                           
   280                           	psect	bssCOMMON
   281  0076                     __pbssCOMMON:
   282  0076                     _datEEPROM:
   283  0076                     	ds	1
   284  0077                     _SERVINDIC:
   285  0077                     	ds	1
   286  0078                     _EXTREC:
   287  0078                     	ds	1
   288                           
   289                           	psect	bssBANK0
   290  002B                     __pbssBANK0:
   291  002B                     _posicion:
   292  002B                     	ds	1
   293  002C                     _POT4:
   294  002C                     	ds	1
   295  002D                     _POT3:
   296  002D                     	ds	1
   297  002E                     _POT2:
   298  002E                     	ds	1
   299  002F                     _POT1:
   300  002F                     	ds	1
   301  0030                     _UART:
   302  0030                     	ds	1
   303  0031                     _SERVOS:
   304  0031                     	ds	1
   305                           
   306                           	psect	cstackCOMMON
   307  0070                     __pcstackCOMMON:
   308  0070                     ?_servos:
   309  0070                     ??_servos:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ?_configuraciones:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_leer3SEG:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ?_AnalogReadServo:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_guardar3SEG:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ?_rutInter:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ?_main:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_guardarservos:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_leerposiciones:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_leerSERVOS:	
   337                           ; 1 bytes @ 0x0
   338                           
   339                           
   340                           ; 1 bytes @ 0x0
   341  0070                     	ds	2
   342  0072                     ??_rutInter:
   343                           
   344                           ; 1 bytes @ 0x2
   345  0072                     	ds	4
   346                           
   347                           	psect	cstackBANK0
   348  0020                     __pcstackBANK0:
   349  0020                     ??_configuraciones:
   350  0020                     ??_AnalogReadServo:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0020                     ?_guardarposiciones:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0020                     ??_leerposiciones:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0020                     guardarposiciones@direccion:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0020                     leerposiciones@direccion:	
   363                           ; 1 bytes @ 0x0
   364                           
   365                           
   366                           ; 1 bytes @ 0x0
   367  0020                     	ds	1
   368  0021                     ??_guardarposiciones:
   369  0021                     ??_leerSERVOS:	
   370                           ; 1 bytes @ 0x1
   371                           
   372  0021                     guardarposiciones@guardar:	
   373                           ; 1 bytes @ 0x1
   374                           
   375                           
   376                           ; 1 bytes @ 0x1
   377  0021                     	ds	1
   378  0022                     ??_guardarservos:
   379                           
   380                           ; 1 bytes @ 0x2
   381  0022                     	ds	1
   382  0023                     leerSERVOS@desfase:
   383                           
   384                           ; 1 bytes @ 0x3
   385  0023                     	ds	1
   386  0024                     guardarservos@desfase:
   387  0024                     leerSERVOS@n:	
   388                           ; 1 bytes @ 0x4
   389                           
   390                           
   391                           ; 1 bytes @ 0x4
   392  0024                     	ds	1
   393  0025                     ??_leer3SEG:
   394  0025                     guardarservos@n:	
   395                           ; 1 bytes @ 0x5
   396                           
   397                           
   398                           ; 1 bytes @ 0x5
   399  0025                     	ds	1
   400  0026                     ??_guardar3SEG:
   401                           
   402                           ; 1 bytes @ 0x6
   403  0026                     	ds	2
   404  0028                     ??_main:
   405                           
   406                           ; 1 bytes @ 0x8
   407  0028                     	ds	3
   408                           
   409                           	psect	maintext
   410  0297                     __pmaintext:	
   411 ;;
   412 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   413 ;;
   414 ;; *************** function _main *****************
   415 ;; Defined at:
   416 ;;		line 129 in file "mainP2.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   425 ;; Tracked objects:
   426 ;;		On entry : B00/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   430 ;;      Params:         0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0
   432 ;;      Temps:          0       3       0       0       0
   433 ;;      Totals:         0       3       0       0       0
   434 ;;Total ram usage:        3 bytes
   435 ;; Hardware stack levels required when called:    5
   436 ;; This function calls:
   437 ;;		_AnalogReadServo
   438 ;;		_configuraciones
   439 ;;		_guardar3SEG
   440 ;;		_leer3SEG
   441 ;; This function is called by:
   442 ;;		Startup code after reset
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           
   447                           ;psect for function _main
   448  0297                     _main:
   449  0297                     l2045:	
   450                           ;incstack = 0
   451                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   452                           
   453                           
   454                           ;mainP2.c: 130:     configuraciones();
   455  0297  120A  118A  2134  120A  118A  	fcall	_configuraciones
   456  029C  2AC2               	goto	l2063
   457  029D                     l123:	
   458                           ;mainP2.c: 134:             case 0:
   459                           
   460                           
   461                           ;mainP2.c: 135:                 PORTBbits.RB7 = 0;
   462  029D  1386               	bcf	6,7	;volatile
   463                           
   464                           ;mainP2.c: 137:                 if(T1CONbits.TMR1ON){
   465  029E  1C10               	btfss	16,0	;volatile
   466  029F  2AA1               	goto	u781
   467  02A0  2AA2               	goto	u780
   468  02A1                     u781:
   469  02A1  2AC2               	goto	l122
   470  02A2                     u780:
   471  02A2                     l2047:
   472                           
   473                           ;mainP2.c: 138:                     leer3SEG();
   474  02A2  120A  118A  22DB  120A  118A  	fcall	_leer3SEG
   475  02A7  2AC2               	goto	l2063
   476  02A8                     l126:	
   477                           ;mainP2.c: 142:             case 1:
   478                           
   479                           
   480                           ;mainP2.c: 143:                 if(!SERVOS.guardar)AnalogReadServo();
   481  02A8  1BB1               	btfsc	_SERVOS,7
   482  02A9  2AAB               	goto	u791
   483  02AA  2AAC               	goto	u790
   484  02AB                     u791:
   485  02AB  2AB1               	goto	l2051
   486  02AC                     u790:
   487  02AC                     l2049:
   488  02AC  120A  118A  2021  120A  118A  	fcall	_AnalogReadServo
   489  02B1                     l2051:
   490                           
   491                           ;mainP2.c: 144:                 PORTBbits.RB7 = 1;
   492  02B1  1283               	bcf	3,5	;RP0=0, select bank0
   493  02B2  1303               	bcf	3,6	;RP1=0, select bank0
   494  02B3  1786               	bsf	6,7	;volatile
   495  02B4                     l2053:
   496                           
   497                           ;mainP2.c: 145:                 UART.indicador = 0;
   498  02B4  1030               	bcf	_UART,0
   499  02B5                     l2055:
   500                           
   501                           ;mainP2.c: 147:                 if(SERVOS.guardar){
   502  02B5  1FB1               	btfss	_SERVOS,7
   503  02B6  2AB8               	goto	u801
   504  02B7  2AB9               	goto	u800
   505  02B8                     u801:
   506  02B8  2AC2               	goto	l122
   507  02B9                     u800:
   508  02B9                     l2057:
   509                           
   510                           ;mainP2.c: 148:                     guardar3SEG();
   511  02B9  120A  118A  2302  120A  118A  	fcall	_guardar3SEG
   512  02BE                     l2059:
   513                           
   514                           ;mainP2.c: 149:                     SERVOS.guardar = 0;
   515  02BE  1283               	bcf	3,5	;RP0=0, select bank0
   516  02BF  1303               	bcf	3,6	;RP1=0, select bank0
   517  02C0  13B1               	bcf	_SERVOS,7
   518  02C1  2AC2               	goto	l2063
   519  02C2                     l122:
   520  02C2                     l2063:
   521  02C2  1283               	bcf	3,5	;RP0=0, select bank0
   522  02C3  1303               	bcf	3,6	;RP1=0, select bank0
   523  02C4  0E31               	swapf	_SERVOS,w
   524  02C5  00A8               	movwf	??_main
   525  02C6  0CA8               	rrf	??_main,f
   526  02C7  0C28               	rrf	??_main,w
   527  02C8  3901               	andlw	1
   528  02C9  00A9               	movwf	??_main+1
   529  02CA  01AA               	clrf	??_main+2
   530                           
   531                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   532                           ; Switch size 1, requested type "simple"
   533                           ; Number of cases is 1, Range of values is 0 to 0
   534                           ; switch strategies available:
   535                           ; Name         Instructions Cycles
   536                           ; simple_byte            4     3 (average)
   537                           ; direct_byte           11     8 (fixed)
   538                           ; jumptable            260     6 (fixed)
   539                           ;	Chosen strategy is simple_byte
   540  02CB  082A               	movf	??_main+2,w
   541  02CC  3A00               	xorlw	0	; case 0
   542  02CD  1903               	skipnz
   543  02CE  2AD0               	goto	l2209
   544  02CF  2AC2               	goto	l2063
   545  02D0                     l2209:
   546                           
   547                           ; Switch size 1, requested type "simple"
   548                           ; Number of cases is 2, Range of values is 0 to 1
   549                           ; switch strategies available:
   550                           ; Name         Instructions Cycles
   551                           ; simple_byte            7     4 (average)
   552                           ; direct_byte           14     8 (fixed)
   553                           ; jumptable            260     6 (fixed)
   554                           ;	Chosen strategy is simple_byte
   555  02D0  0829               	movf	??_main+1,w
   556  02D1  3A00               	xorlw	0	; case 0
   557  02D2  1903               	skipnz
   558  02D3  2A9D               	goto	l123
   559  02D4  3A01               	xorlw	1	; case 1
   560  02D5  1903               	skipnz
   561  02D6  2AA8               	goto	l126
   562  02D7  2AC2               	goto	l2063
   563  02D8  120A  118A  280E   	ljmp	start
   564  02DB                     __end_of_main:
   565                           
   566                           	psect	text1
   567  02DB                     __ptext1:	
   568 ;; *************** function _leer3SEG *****************
   569 ;; Defined at:
   570 ;;		line 384 in file "mainP2.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;		None
   573 ;; Auto vars:     Size  Location     Type
   574 ;;		None
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      void 
   577 ;; Registers used:
   578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   584 ;;      Params:         0       0       0       0       0
   585 ;;      Locals:         0       0       0       0       0
   586 ;;      Temps:          0       2       0       0       0
   587 ;;      Totals:         0       2       0       0       0
   588 ;;Total ram usage:        2 bytes
   589 ;; Hardware stack levels used:    1
   590 ;; Hardware stack levels required when called:    4
   591 ;; This function calls:
   592 ;;		_leerSERVOS
   593 ;; This function is called by:
   594 ;;		_main
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598                           
   599                           ;psect for function _leer3SEG
   600  02DB                     _leer3SEG:
   601  02DB                     l1965:	
   602                           ;incstack = 0
   603                           ; Regs used in _leer3SEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   604                           
   605                           
   606                           ;mainP2.c: 385:     switch(posicion){
   607  02DB  2AF2               	goto	l1973
   608  02DC                     l218:	
   609                           ;mainP2.c: 386:         case 31:
   610                           
   611                           
   612                           ;mainP2.c: 387:             T1CONbits.TMR1ON = 0;
   613  02DC  1010               	bcf	16,0	;volatile
   614  02DD                     l1967:
   615                           
   616                           ;mainP2.c: 388:             TMR1H = 0;
   617  02DD  018F               	clrf	15	;volatile
   618                           
   619                           ;mainP2.c: 389:             TMR1L = 0;
   620  02DE  018E               	clrf	14	;volatile
   621                           
   622                           ;mainP2.c: 390:             posicion = 0;
   623  02DF  01AB               	clrf	_posicion
   624                           
   625                           ;mainP2.c: 391:             PORTE = 0;
   626  02E0  0189               	clrf	9	;volatile
   627                           
   628                           ;mainP2.c: 392:             break;
   629  02E1  2B01               	goto	l221
   630  02E2                     l1969:
   631                           
   632                           ;mainP2.c: 394:             leerSERVOS(4*posicion);
   633  02E2  082B               	movf	_posicion,w
   634  02E3  00A5               	movwf	??_leer3SEG
   635  02E4  3001               	movlw	1
   636  02E5                     u675:
   637  02E5  1003               	clrc
   638  02E6  0DA5               	rlf	??_leer3SEG,f
   639  02E7  3EFF               	addlw	-1
   640  02E8  1D03               	skipz
   641  02E9  2AE5               	goto	u675
   642  02EA  1003               	clrc
   643  02EB  0D25               	rlf	??_leer3SEG,w
   644  02EC  120A  118A  2195  120A  118A  	fcall	_leerSERVOS
   645                           
   646                           ;mainP2.c: 395:             break;
   647  02F1  2B01               	goto	l221
   648  02F2                     l1973:
   649  02F2  1283               	bcf	3,5	;RP0=0, select bank0
   650  02F3  1303               	bcf	3,6	;RP1=0, select bank0
   651  02F4  082B               	movf	_posicion,w
   652  02F5  00A5               	movwf	??_leer3SEG
   653  02F6  01A6               	clrf	??_leer3SEG+1
   654                           
   655                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   656                           ; Switch size 1, requested type "simple"
   657                           ; Number of cases is 1, Range of values is 0 to 0
   658                           ; switch strategies available:
   659                           ; Name         Instructions Cycles
   660                           ; simple_byte            4     3 (average)
   661                           ; direct_byte           11     8 (fixed)
   662                           ; jumptable            260     6 (fixed)
   663                           ;	Chosen strategy is simple_byte
   664  02F7  0826               	movf	??_leer3SEG+1,w
   665  02F8  3A00               	xorlw	0	; case 0
   666  02F9  1903               	skipnz
   667  02FA  2AFC               	goto	l2211
   668  02FB  2AE2               	goto	l1969
   669  02FC                     l2211:
   670                           
   671                           ; Switch size 1, requested type "simple"
   672                           ; Number of cases is 1, Range of values is 31 to 31
   673                           ; switch strategies available:
   674                           ; Name         Instructions Cycles
   675                           ; simple_byte            4     3 (average)
   676                           ; direct_byte           14    11 (fixed)
   677                           ; jumptable            263     9 (fixed)
   678                           ;	Chosen strategy is simple_byte
   679  02FC  0825               	movf	??_leer3SEG,w
   680  02FD  3A1F               	xorlw	31	; case 31
   681  02FE  1903               	skipnz
   682  02FF  2ADC               	goto	l218
   683  0300  2AE2               	goto	l1969
   684  0301                     l221:
   685  0301  0008               	return
   686  0302                     __end_of_leer3SEG:
   687                           
   688                           	psect	text2
   689  0195                     __ptext2:	
   690 ;; *************** function _leerSERVOS *****************
   691 ;; Defined at:
   692 ;;		line 354 in file "mainP2.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;  desfase         1    wreg     unsigned char 
   695 ;; Auto vars:     Size  Location     Type
   696 ;;  desfase         1    3[BANK0 ] unsigned char 
   697 ;;  n               1    4[BANK0 ] unsigned char 
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   707 ;;      Params:         0       0       0       0       0
   708 ;;      Locals:         0       2       0       0       0
   709 ;;      Temps:          0       2       0       0       0
   710 ;;      Totals:         0       4       0       0       0
   711 ;;Total ram usage:        4 bytes
   712 ;; Hardware stack levels used:    1
   713 ;; Hardware stack levels required when called:    3
   714 ;; This function calls:
   715 ;;		_leerposiciones
   716 ;; This function is called by:
   717 ;;		_leer3SEG
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           
   722                           ;psect for function _leerSERVOS
   723  0195                     _leerSERVOS:
   724                           
   725                           ;incstack = 0
   726                           ; Regs used in _leerSERVOS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   727                           ;leerSERVOS@desfase stored from wreg
   728  0195  1283               	bcf	3,5	;RP0=0, select bank0
   729  0196  1303               	bcf	3,6	;RP1=0, select bank0
   730  0197  00A3               	movwf	leerSERVOS@desfase
   731  0198                     l1847:
   732                           
   733                           ;mainP2.c: 355:     for(uint8_t n=0;n<=3; n++){
   734  0198  01A4               	clrf	leerSERVOS@n
   735  0199  29CE               	goto	l1863
   736  019A                     l1853:
   737  019A  0823               	movf	leerSERVOS@desfase,w
   738  019B  0724               	addwf	leerSERVOS@n,w
   739  019C  120A  118A  2346  120A  118A  	fcall	_leerposiciones
   740  01A1  1283               	bcf	3,5	;RP0=0, select bank0
   741  01A2  1303               	bcf	3,6	;RP1=0, select bank0
   742  01A3  00A1               	movwf	??_leerSERVOS
   743  01A4  0821               	movf	??_leerSERVOS,w
   744  01A5  00AF               	movwf	_POT1
   745                           
   746                           ;mainP2.c: 358:                 break;
   747  01A6  29E4               	goto	l1865
   748  01A7                     l1855:
   749  01A7  0823               	movf	leerSERVOS@desfase,w
   750  01A8  0724               	addwf	leerSERVOS@n,w
   751  01A9  120A  118A  2346  120A  118A  	fcall	_leerposiciones
   752  01AE  1283               	bcf	3,5	;RP0=0, select bank0
   753  01AF  1303               	bcf	3,6	;RP1=0, select bank0
   754  01B0  00A1               	movwf	??_leerSERVOS
   755  01B1  0821               	movf	??_leerSERVOS,w
   756  01B2  00AE               	movwf	_POT2
   757                           
   758                           ;mainP2.c: 360:                 break;
   759  01B3  29E4               	goto	l1865
   760  01B4                     l1857:
   761  01B4  0823               	movf	leerSERVOS@desfase,w
   762  01B5  0724               	addwf	leerSERVOS@n,w
   763  01B6  120A  118A  2346  120A  118A  	fcall	_leerposiciones
   764  01BB  1283               	bcf	3,5	;RP0=0, select bank0
   765  01BC  1303               	bcf	3,6	;RP1=0, select bank0
   766  01BD  00A1               	movwf	??_leerSERVOS
   767  01BE  0821               	movf	??_leerSERVOS,w
   768  01BF  00AD               	movwf	_POT3
   769                           
   770                           ;mainP2.c: 362:                 break;
   771  01C0  29E4               	goto	l1865
   772  01C1                     l1859:
   773  01C1  0823               	movf	leerSERVOS@desfase,w
   774  01C2  0724               	addwf	leerSERVOS@n,w
   775  01C3  120A  118A  2346  120A  118A  	fcall	_leerposiciones
   776  01C8  1283               	bcf	3,5	;RP0=0, select bank0
   777  01C9  1303               	bcf	3,6	;RP1=0, select bank0
   778  01CA  00A1               	movwf	??_leerSERVOS
   779  01CB  0821               	movf	??_leerSERVOS,w
   780  01CC  00AC               	movwf	_POT4
   781                           
   782                           ;mainP2.c: 364:                 break;
   783  01CD  29E4               	goto	l1865
   784  01CE                     l1863:
   785  01CE  0824               	movf	leerSERVOS@n,w
   786  01CF  00A1               	movwf	??_leerSERVOS
   787  01D0  01A2               	clrf	??_leerSERVOS+1
   788                           
   789                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   790                           ; Switch size 1, requested type "simple"
   791                           ; Number of cases is 1, Range of values is 0 to 0
   792                           ; switch strategies available:
   793                           ; Name         Instructions Cycles
   794                           ; simple_byte            4     3 (average)
   795                           ; direct_byte           11     8 (fixed)
   796                           ; jumptable            260     6 (fixed)
   797                           ;	Chosen strategy is simple_byte
   798  01D1  0822               	movf	??_leerSERVOS+1,w
   799  01D2  3A00               	xorlw	0	; case 0
   800  01D3  1903               	skipnz
   801  01D4  29D6               	goto	l2213
   802  01D5  29E4               	goto	l1865
   803  01D6                     l2213:
   804                           
   805                           ; Switch size 1, requested type "simple"
   806                           ; Number of cases is 4, Range of values is 0 to 3
   807                           ; switch strategies available:
   808                           ; Name         Instructions Cycles
   809                           ; simple_byte           13     7 (average)
   810                           ; direct_byte           20     8 (fixed)
   811                           ; jumptable            260     6 (fixed)
   812                           ;	Chosen strategy is simple_byte
   813  01D6  0821               	movf	??_leerSERVOS,w
   814  01D7  3A00               	xorlw	0	; case 0
   815  01D8  1903               	skipnz
   816  01D9  299A               	goto	l1853
   817  01DA  3A01               	xorlw	1	; case 1
   818  01DB  1903               	skipnz
   819  01DC  29A7               	goto	l1855
   820  01DD  3A03               	xorlw	3	; case 2
   821  01DE  1903               	skipnz
   822  01DF  29B4               	goto	l1857
   823  01E0  3A01               	xorlw	1	; case 3
   824  01E1  1903               	skipnz
   825  01E2  29C1               	goto	l1859
   826  01E3  29E4               	goto	l1865
   827  01E4                     l1865:
   828                           
   829                           ;mainP2.c: 366:     }
   830  01E4  3001               	movlw	1
   831  01E5  00A1               	movwf	??_leerSERVOS
   832  01E6  0821               	movf	??_leerSERVOS,w
   833  01E7  07A4               	addwf	leerSERVOS@n,f
   834  01E8                     l1867:
   835  01E8  3004               	movlw	4
   836  01E9  0224               	subwf	leerSERVOS@n,w
   837  01EA  1C03               	skipc
   838  01EB  29ED               	goto	u661
   839  01EC  29EE               	goto	u660
   840  01ED                     u661:
   841  01ED  29CE               	goto	l1863
   842  01EE                     u660:
   843  01EE                     l207:
   844  01EE  0008               	return
   845  01EF                     __end_of_leerSERVOS:
   846                           
   847                           	psect	text3
   848  0346                     __ptext3:	
   849 ;; *************** function _leerposiciones *****************
   850 ;; Defined at:
   851 ;;		line 347 in file "mainP2.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;  direccion       1    wreg     unsigned char 
   854 ;; Auto vars:     Size  Location     Type
   855 ;;  direccion       1    0[BANK0 ] unsigned char 
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      unsigned char 
   858 ;; Registers used:
   859 ;;		wreg
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   865 ;;      Params:         0       0       0       0       0
   866 ;;      Locals:         0       1       0       0       0
   867 ;;      Temps:          0       0       0       0       0
   868 ;;      Totals:         0       1       0       0       0
   869 ;;Total ram usage:        1 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; Hardware stack levels required when called:    2
   872 ;; This function calls:
   873 ;;		Nothing
   874 ;; This function is called by:
   875 ;;		_leerSERVOS
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           
   880                           ;psect for function _leerposiciones
   881  0346                     _leerposiciones:
   882                           
   883                           ;incstack = 0
   884                           ; Regs used in _leerposiciones: [wreg]
   885                           ;leerposiciones@direccion stored from wreg
   886  0346  1283               	bcf	3,5	;RP0=0, select bank0
   887  0347  1303               	bcf	3,6	;RP1=0, select bank0
   888  0348  00A0               	movwf	leerposiciones@direccion
   889  0349                     l1813:
   890                           
   891                           ;mainP2.c: 348:     EEADR = direccion;
   892  0349  0820               	movf	leerposiciones@direccion,w
   893  034A  1283               	bcf	3,5	;RP0=0, select bank2
   894  034B  1703               	bsf	3,6	;RP1=1, select bank2
   895  034C  008D               	movwf	13	;volatile
   896  034D                     l1815:
   897                           
   898                           ;mainP2.c: 349:     EECON1bits.EEPGD = 0;
   899  034D  1683               	bsf	3,5	;RP0=1, select bank3
   900  034E  1703               	bsf	3,6	;RP1=1, select bank3
   901  034F  138C               	bcf	12,7	;volsfr
   902  0350                     l1817:
   903                           
   904                           ;mainP2.c: 350:     EECON1bits.RD = 1;
   905  0350  140C               	bsf	12,0	;volsfr
   906                           
   907                           ;mainP2.c: 351:     return EEDAT;
   908  0351  1283               	bcf	3,5	;RP0=0, select bank2
   909  0352  1703               	bsf	3,6	;RP1=1, select bank2
   910  0353  080C               	movf	12,w	;volatile
   911  0354                     l196:
   912  0354  0008               	return
   913  0355                     __end_of_leerposiciones:
   914                           
   915                           	psect	text4
   916  0302                     __ptext4:	
   917 ;; *************** function _guardar3SEG *****************
   918 ;; Defined at:
   919 ;;		line 369 in file "mainP2.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   933 ;;      Params:         0       0       0       0       0
   934 ;;      Locals:         0       0       0       0       0
   935 ;;      Temps:          0       2       0       0       0
   936 ;;      Totals:         0       2       0       0       0
   937 ;;Total ram usage:        2 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    4
   940 ;; This function calls:
   941 ;;		_guardarservos
   942 ;; This function is called by:
   943 ;;		_main
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           
   948                           ;psect for function _guardar3SEG
   949  0302                     _guardar3SEG:
   950  0302                     l2031:	
   951                           ;incstack = 0
   952                           ; Regs used in _guardar3SEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   953                           
   954                           
   955                           ;mainP2.c: 370:     switch(posicion){
   956  0302  2B19               	goto	l2039
   957  0303                     l211:	
   958                           ;mainP2.c: 371:         case 31:
   959                           
   960                           
   961                           ;mainP2.c: 372:             T1CONbits.TMR1ON = 0;
   962  0303  1010               	bcf	16,0	;volatile
   963  0304                     l2033:
   964                           
   965                           ;mainP2.c: 373:             TMR1H = 0;
   966  0304  018F               	clrf	15	;volatile
   967                           
   968                           ;mainP2.c: 374:             TMR1L = 0;
   969  0305  018E               	clrf	14	;volatile
   970                           
   971                           ;mainP2.c: 375:             posicion = 0;
   972  0306  01AB               	clrf	_posicion
   973                           
   974                           ;mainP2.c: 376:             PORTE = 0;
   975  0307  0189               	clrf	9	;volatile
   976                           
   977                           ;mainP2.c: 377:             break;
   978  0308  2B28               	goto	l214
   979  0309                     l2035:
   980                           
   981                           ;mainP2.c: 379:             guardarservos(4*posicion);
   982  0309  082B               	movf	_posicion,w
   983  030A  00A6               	movwf	??_guardar3SEG
   984  030B  3001               	movlw	1
   985  030C                     u775:
   986  030C  1003               	clrc
   987  030D  0DA6               	rlf	??_guardar3SEG,f
   988  030E  3EFF               	addlw	-1
   989  030F  1D03               	skipz
   990  0310  2B0C               	goto	u775
   991  0311  1003               	clrc
   992  0312  0D26               	rlf	??_guardar3SEG,w
   993  0313  120A  118A  21EF  120A  118A  	fcall	_guardarservos
   994                           
   995                           ;mainP2.c: 380:             break;
   996  0318  2B28               	goto	l214
   997  0319                     l2039:
   998  0319  1283               	bcf	3,5	;RP0=0, select bank0
   999  031A  1303               	bcf	3,6	;RP1=0, select bank0
  1000  031B  082B               	movf	_posicion,w
  1001  031C  00A6               	movwf	??_guardar3SEG
  1002  031D  01A7               	clrf	??_guardar3SEG+1
  1003                           
  1004                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1005                           ; Switch size 1, requested type "simple"
  1006                           ; Number of cases is 1, Range of values is 0 to 0
  1007                           ; switch strategies available:
  1008                           ; Name         Instructions Cycles
  1009                           ; simple_byte            4     3 (average)
  1010                           ; direct_byte           11     8 (fixed)
  1011                           ; jumptable            260     6 (fixed)
  1012                           ;	Chosen strategy is simple_byte
  1013  031E  0827               	movf	??_guardar3SEG+1,w
  1014  031F  3A00               	xorlw	0	; case 0
  1015  0320  1903               	skipnz
  1016  0321  2B23               	goto	l2215
  1017  0322  2B09               	goto	l2035
  1018  0323                     l2215:
  1019                           
  1020                           ; Switch size 1, requested type "simple"
  1021                           ; Number of cases is 1, Range of values is 31 to 31
  1022                           ; switch strategies available:
  1023                           ; Name         Instructions Cycles
  1024                           ; simple_byte            4     3 (average)
  1025                           ; direct_byte           14    11 (fixed)
  1026                           ; jumptable            263     9 (fixed)
  1027                           ;	Chosen strategy is simple_byte
  1028  0323  0826               	movf	??_guardar3SEG,w
  1029  0324  3A1F               	xorlw	31	; case 31
  1030  0325  1903               	skipnz
  1031  0326  2B03               	goto	l211
  1032  0327  2B09               	goto	l2035
  1033  0328                     l214:
  1034  0328  0008               	return
  1035  0329                     __end_of_guardar3SEG:
  1036                           
  1037                           	psect	text5
  1038  01EF                     __ptext5:	
  1039 ;; *************** function _guardarservos *****************
  1040 ;; Defined at:
  1041 ;;		line 332 in file "mainP2.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  desfase         1    wreg     unsigned char 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  desfase         1    4[BANK0 ] unsigned char 
  1046 ;;  n               1    5[BANK0 ] unsigned char 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1056 ;;      Params:         0       0       0       0       0
  1057 ;;      Locals:         0       2       0       0       0
  1058 ;;      Temps:          0       2       0       0       0
  1059 ;;      Totals:         0       4       0       0       0
  1060 ;;Total ram usage:        4 bytes
  1061 ;; Hardware stack levels used:    1
  1062 ;; Hardware stack levels required when called:    3
  1063 ;; This function calls:
  1064 ;;		_guardarposiciones
  1065 ;; This function is called by:
  1066 ;;		_guardar3SEG
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           
  1071                           ;psect for function _guardarservos
  1072  01EF                     _guardarservos:
  1073                           
  1074                           ;incstack = 0
  1075                           ; Regs used in _guardarservos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1076                           ;guardarservos@desfase stored from wreg
  1077  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1078  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1079  01F1  00A4               	movwf	guardarservos@desfase
  1080  01F2                     l1821:
  1081                           
  1082                           ;mainP2.c: 333:     for(uint8_t n=0;n<=3;n++){
  1083  01F2  01A5               	clrf	guardarservos@n
  1084  01F3  2A24               	goto	l1837
  1085  01F4                     l1827:
  1086  01F4  0824               	movf	guardarservos@desfase,w
  1087  01F5  0725               	addwf	guardarservos@n,w
  1088  01F6  00A2               	movwf	??_guardarservos
  1089  01F7  0822               	movf	??_guardarservos,w
  1090  01F8  00A0               	movwf	guardarposiciones@direccion
  1091  01F9  082F               	movf	_POT1,w
  1092  01FA  120A  118A  2329  120A  118A  	fcall	_guardarposiciones
  1093                           
  1094                           ;mainP2.c: 336:                 break;
  1095  01FF  2A3A               	goto	l1839
  1096  0200                     l1829:
  1097  0200  0824               	movf	guardarservos@desfase,w
  1098  0201  0725               	addwf	guardarservos@n,w
  1099  0202  00A2               	movwf	??_guardarservos
  1100  0203  0822               	movf	??_guardarservos,w
  1101  0204  00A0               	movwf	guardarposiciones@direccion
  1102  0205  082E               	movf	_POT2,w
  1103  0206  120A  118A  2329  120A  118A  	fcall	_guardarposiciones
  1104                           
  1105                           ;mainP2.c: 338:                 break;
  1106  020B  2A3A               	goto	l1839
  1107  020C                     l1831:
  1108  020C  0824               	movf	guardarservos@desfase,w
  1109  020D  0725               	addwf	guardarservos@n,w
  1110  020E  00A2               	movwf	??_guardarservos
  1111  020F  0822               	movf	??_guardarservos,w
  1112  0210  00A0               	movwf	guardarposiciones@direccion
  1113  0211  082D               	movf	_POT3,w
  1114  0212  120A  118A  2329  120A  118A  	fcall	_guardarposiciones
  1115                           
  1116                           ;mainP2.c: 340:                 break;
  1117  0217  2A3A               	goto	l1839
  1118  0218                     l1833:
  1119  0218  0824               	movf	guardarservos@desfase,w
  1120  0219  0725               	addwf	guardarservos@n,w
  1121  021A  00A2               	movwf	??_guardarservos
  1122  021B  0822               	movf	??_guardarservos,w
  1123  021C  00A0               	movwf	guardarposiciones@direccion
  1124  021D  082C               	movf	_POT4,w
  1125  021E  120A  118A  2329  120A  118A  	fcall	_guardarposiciones
  1126                           
  1127                           ;mainP2.c: 342:                 break;
  1128  0223  2A3A               	goto	l1839
  1129  0224                     l1837:
  1130  0224  0825               	movf	guardarservos@n,w
  1131  0225  00A2               	movwf	??_guardarservos
  1132  0226  01A3               	clrf	??_guardarservos+1
  1133                           
  1134                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1135                           ; Switch size 1, requested type "simple"
  1136                           ; Number of cases is 1, Range of values is 0 to 0
  1137                           ; switch strategies available:
  1138                           ; Name         Instructions Cycles
  1139                           ; simple_byte            4     3 (average)
  1140                           ; direct_byte           11     8 (fixed)
  1141                           ; jumptable            260     6 (fixed)
  1142                           ;	Chosen strategy is simple_byte
  1143  0227  0823               	movf	??_guardarservos+1,w
  1144  0228  3A00               	xorlw	0	; case 0
  1145  0229  1903               	skipnz
  1146  022A  2A2C               	goto	l2217
  1147  022B  2A3A               	goto	l1839
  1148  022C                     l2217:
  1149                           
  1150                           ; Switch size 1, requested type "simple"
  1151                           ; Number of cases is 4, Range of values is 0 to 3
  1152                           ; switch strategies available:
  1153                           ; Name         Instructions Cycles
  1154                           ; simple_byte           13     7 (average)
  1155                           ; direct_byte           20     8 (fixed)
  1156                           ; jumptable            260     6 (fixed)
  1157                           ;	Chosen strategy is simple_byte
  1158  022C  0822               	movf	??_guardarservos,w
  1159  022D  3A00               	xorlw	0	; case 0
  1160  022E  1903               	skipnz
  1161  022F  29F4               	goto	l1827
  1162  0230  3A01               	xorlw	1	; case 1
  1163  0231  1903               	skipnz
  1164  0232  2A00               	goto	l1829
  1165  0233  3A03               	xorlw	3	; case 2
  1166  0234  1903               	skipnz
  1167  0235  2A0C               	goto	l1831
  1168  0236  3A01               	xorlw	1	; case 3
  1169  0237  1903               	skipnz
  1170  0238  2A18               	goto	l1833
  1171  0239  2A3A               	goto	l1839
  1172  023A                     l1839:
  1173                           
  1174                           ;mainP2.c: 344:     }
  1175  023A  3001               	movlw	1
  1176  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1177  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1178  023D  00A2               	movwf	??_guardarservos
  1179  023E  0822               	movf	??_guardarservos,w
  1180  023F  07A5               	addwf	guardarservos@n,f
  1181  0240                     l1841:
  1182  0240  3004               	movlw	4
  1183  0241  0225               	subwf	guardarservos@n,w
  1184  0242  1C03               	skipc
  1185  0243  2A45               	goto	u651
  1186  0244  2A46               	goto	u650
  1187  0245                     u651:
  1188  0245  2A24               	goto	l1837
  1189  0246                     u650:
  1190  0246                     l193:
  1191  0246  0008               	return
  1192  0247                     __end_of_guardarservos:
  1193                           
  1194                           	psect	text6
  1195  0329                     __ptext6:	
  1196 ;; *************** function _guardarposiciones *****************
  1197 ;; Defined at:
  1198 ;;		line 319 in file "mainP2.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;  guardar         1    wreg     unsigned char 
  1201 ;;  direccion       1    0[BANK0 ] unsigned char 
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;  guardar         1    1[BANK0 ] unsigned char 
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1213 ;;      Params:         0       1       0       0       0
  1214 ;;      Locals:         0       1       0       0       0
  1215 ;;      Temps:          0       0       0       0       0
  1216 ;;      Totals:         0       2       0       0       0
  1217 ;;Total ram usage:        2 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; Hardware stack levels required when called:    2
  1220 ;; This function calls:
  1221 ;;		Nothing
  1222 ;; This function is called by:
  1223 ;;		_guardarservos
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           
  1228                           ;psect for function _guardarposiciones
  1229  0329                     _guardarposiciones:
  1230                           
  1231                           ;incstack = 0
  1232                           ; Regs used in _guardarposiciones: [wreg]
  1233                           ;guardarposiciones@guardar stored from wreg
  1234  0329  1283               	bcf	3,5	;RP0=0, select bank0
  1235  032A  1303               	bcf	3,6	;RP1=0, select bank0
  1236  032B  00A1               	movwf	guardarposiciones@guardar
  1237  032C                     l1803:
  1238                           
  1239                           ;mainP2.c: 320:     EEADR = direccion;
  1240  032C  0820               	movf	guardarposiciones@direccion,w
  1241  032D  1283               	bcf	3,5	;RP0=0, select bank2
  1242  032E  1703               	bsf	3,6	;RP1=1, select bank2
  1243  032F  008D               	movwf	13	;volatile
  1244                           
  1245                           ;mainP2.c: 321:     EEDAT = guardar;
  1246  0330  1283               	bcf	3,5	;RP0=0, select bank0
  1247  0331  1303               	bcf	3,6	;RP1=0, select bank0
  1248  0332  0821               	movf	guardarposiciones@guardar,w
  1249  0333  1283               	bcf	3,5	;RP0=0, select bank2
  1250  0334  1703               	bsf	3,6	;RP1=1, select bank2
  1251  0335  008C               	movwf	12	;volatile
  1252  0336                     l1805:
  1253                           
  1254                           ;mainP2.c: 322:     EECON1bits.WREN = 1;
  1255  0336  1683               	bsf	3,5	;RP0=1, select bank3
  1256  0337  1703               	bsf	3,6	;RP1=1, select bank3
  1257  0338  150C               	bsf	12,2	;volsfr
  1258  0339                     l1807:
  1259                           
  1260                           ;mainP2.c: 323:     INTCONbits.GIE = 0;
  1261  0339  138B               	bcf	11,7	;volatile
  1262                           
  1263                           ;mainP2.c: 324:     EECON2 = 0X55;
  1264  033A  3055               	movlw	85
  1265  033B  008D               	movwf	13	;volsfr
  1266                           
  1267                           ;mainP2.c: 325:     EECON2 = 0XAA;
  1268  033C  30AA               	movlw	170
  1269  033D  008D               	movwf	13	;volsfr
  1270  033E                     l1809:
  1271                           
  1272                           ;mainP2.c: 326:     EECON1bits.WR = 1;
  1273  033E  148C               	bsf	12,1	;volsfr
  1274  033F                     l1811:
  1275                           
  1276                           ;mainP2.c: 327:     INTCONbits.GIE = 1;
  1277  033F  178B               	bsf	11,7	;volatile
  1278  0340                     l179:	
  1279                           ;mainP2.c: 328:     while(EECON1bits.WR);
  1280                           
  1281  0340  188C               	btfsc	12,1	;volsfr
  1282  0341  2B43               	goto	u641
  1283  0342  2B44               	goto	u640
  1284  0343                     u641:
  1285  0343  2B40               	goto	l179
  1286  0344                     u640:
  1287  0344                     l181:
  1288                           
  1289                           ;mainP2.c: 329:     EECON1bits.WREN = 0;
  1290  0344  110C               	bcf	12,2	;volsfr
  1291  0345                     l182:
  1292  0345  0008               	return
  1293  0346                     __end_of_guardarposiciones:
  1294                           
  1295                           	psect	text7
  1296  0134                     __ptext7:	
  1297 ;; *************** function _configuraciones *****************
  1298 ;; Defined at:
  1299 ;;		line 161 in file "mainP2.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;		None
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;		None
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  1    wreg      void 
  1306 ;; Registers used:
  1307 ;;		wreg, status,2, status,0
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1313 ;;      Params:         0       0       0       0       0
  1314 ;;      Locals:         0       0       0       0       0
  1315 ;;      Temps:          0       0       0       0       0
  1316 ;;      Totals:         0       0       0       0       0
  1317 ;;Total ram usage:        0 bytes
  1318 ;; Hardware stack levels used:    1
  1319 ;; Hardware stack levels required when called:    2
  1320 ;; This function calls:
  1321 ;;		Nothing
  1322 ;; This function is called by:
  1323 ;;		_main
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           
  1328                           ;psect for function _configuraciones
  1329  0134                     _configuraciones:
  1330  0134                     l1873:	
  1331                           ;incstack = 0
  1332                           ; Regs used in _configuraciones: [wreg+status,2+status,0]
  1333                           
  1334                           
  1335                           ;mainP2.c: 163:     ANSEL = 0X0F;
  1336  0134  300F               	movlw	15
  1337  0135  1683               	bsf	3,5	;RP0=1, select bank3
  1338  0136  1703               	bsf	3,6	;RP1=1, select bank3
  1339  0137  0088               	movwf	8	;volatile
  1340  0138                     l1875:
  1341                           
  1342                           ;mainP2.c: 164:     ANSELH = 0X00;
  1343  0138  0189               	clrf	9	;volatile
  1344  0139                     l1877:
  1345                           
  1346                           ;mainP2.c: 165:     TRISA = 0X0F;
  1347  0139  300F               	movlw	15
  1348  013A  1683               	bsf	3,5	;RP0=1, select bank1
  1349  013B  1303               	bcf	3,6	;RP1=0, select bank1
  1350  013C  0085               	movwf	5	;volatile
  1351  013D                     l1879:
  1352                           
  1353                           ;mainP2.c: 166:     TRISB = 0X07;
  1354  013D  3007               	movlw	7
  1355  013E  0086               	movwf	6	;volatile
  1356  013F                     l1881:
  1357                           
  1358                           ;mainP2.c: 167:     TRISC = 0X80;
  1359  013F  3080               	movlw	128
  1360  0140  0087               	movwf	7	;volatile
  1361                           
  1362                           ;mainP2.c: 168:     TRISD = 0X00;
  1363  0141  0188               	clrf	8	;volatile
  1364                           
  1365                           ;mainP2.c: 169:     TRISE = 0X00;
  1366  0142  0189               	clrf	9	;volatile
  1367                           
  1368                           ;mainP2.c: 170:     PORTA = 0X00;
  1369  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1370  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1371  0145  0185               	clrf	5	;volatile
  1372                           
  1373                           ;mainP2.c: 171:     PORTB = 0X00;
  1374  0146  0186               	clrf	6	;volatile
  1375                           
  1376                           ;mainP2.c: 172:     PORTC = 0X00;
  1377  0147  0187               	clrf	7	;volatile
  1378                           
  1379                           ;mainP2.c: 173:     PORTD = 0X00;
  1380  0148  0188               	clrf	8	;volatile
  1381                           
  1382                           ;mainP2.c: 174:     PORTE = 0X00;
  1383  0149  0189               	clrf	9	;volatile
  1384                           
  1385                           ;mainP2.c: 175:     posicion = 0;
  1386  014A  01AB               	clrf	_posicion
  1387  014B                     l1883:
  1388                           
  1389                           ;mainP2.c: 177:     OSCCONbits.IRCF = 0b111;
  1390  014B  3070               	movlw	112
  1391  014C  1683               	bsf	3,5	;RP0=1, select bank1
  1392  014D  1303               	bcf	3,6	;RP1=0, select bank1
  1393  014E  048F               	iorwf	15,f	;volatile
  1394  014F                     l1885:
  1395                           
  1396                           ;mainP2.c: 178:     OSCCONbits.SCS = 0b1;
  1397  014F  140F               	bsf	15,0	;volatile
  1398  0150                     l1887:
  1399                           
  1400                           ;mainP2.c: 181:     T1CONbits.T1CKPS = 0B10;
  1401  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1402  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1403  0152  0810               	movf	16,w	;volatile
  1404  0153  39CF               	andlw	-49
  1405  0154  3820               	iorlw	32
  1406  0155  0090               	movwf	16	;volatile
  1407  0156                     l1889:
  1408                           
  1409                           ;mainP2.c: 182:     TMR1H = 0B00111100;
  1410  0156  303C               	movlw	60
  1411  0157  008F               	movwf	15	;volatile
  1412  0158                     l1891:
  1413                           
  1414                           ;mainP2.c: 183:     TMR1L = 0B10101111;
  1415  0158  30AF               	movlw	175
  1416  0159  008E               	movwf	14	;volatile
  1417  015A                     l1893:
  1418                           
  1419                           ;mainP2.c: 184:     T1CONbits.TMR1ON = 0;
  1420  015A  1010               	bcf	16,0	;volatile
  1421  015B                     l1895:
  1422                           
  1423                           ;mainP2.c: 187:     INTCONbits.TMR0IF = 0;
  1424  015B  110B               	bcf	11,2	;volatile
  1425  015C                     l1897:
  1426                           
  1427                           ;mainP2.c: 188:     INTCONbits.TMR0IE = 1;
  1428  015C  168B               	bsf	11,5	;volatile
  1429  015D                     l1899:
  1430                           
  1431                           ;mainP2.c: 189:     PIR1bits.TMR1IF = 0;
  1432  015D  100C               	bcf	12,0	;volatile
  1433  015E                     l1901:
  1434                           
  1435                           ;mainP2.c: 190:     PIE1bits.TMR1IE = 1;
  1436  015E  1683               	bsf	3,5	;RP0=1, select bank1
  1437  015F  1303               	bcf	3,6	;RP1=0, select bank1
  1438  0160  140C               	bsf	12,0	;volatile
  1439  0161                     l1903:
  1440                           
  1441                           ;mainP2.c: 191:     INTCONbits.RBIF = 0;
  1442  0161  100B               	bcf	11,0	;volatile
  1443  0162                     l1905:
  1444                           
  1445                           ;mainP2.c: 192:     INTCONbits.RBIE = 0;
  1446  0162  118B               	bcf	11,3	;volatile
  1447  0163                     l1907:
  1448                           
  1449                           ;mainP2.c: 193:     INTCONbits.PEIE = 1;
  1450  0163  170B               	bsf	11,6	;volatile
  1451  0164                     l1909:
  1452                           
  1453                           ;mainP2.c: 194:     PIE1bits.RCIE = 1;
  1454  0164  168C               	bsf	12,5	;volatile
  1455  0165                     l1911:
  1456                           
  1457                           ;mainP2.c: 195:     INTCONbits.GIE = 1;
  1458  0165  178B               	bsf	11,7	;volatile
  1459  0166                     l1913:
  1460                           
  1461                           ;mainP2.c: 198:     IOCBbits.IOCB0 = 1;
  1462  0166  1416               	bsf	22,0	;volatile
  1463  0167                     l1915:
  1464                           
  1465                           ;mainP2.c: 199:     IOCBbits.IOCB1 = 1;
  1466  0167  1496               	bsf	22,1	;volatile
  1467  0168                     l1917:
  1468                           
  1469                           ;mainP2.c: 200:     IOCBbits.IOCB2 = 1;
  1470  0168  1516               	bsf	22,2	;volatile
  1471  0169                     l1919:
  1472                           
  1473                           ;mainP2.c: 203:     ADCON0bits.ADCS = 0b10;
  1474  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1475  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1476  016B  081F               	movf	31,w	;volatile
  1477  016C  393F               	andlw	-193
  1478  016D  3880               	iorlw	128
  1479  016E  009F               	movwf	31	;volatile
  1480  016F                     l1921:
  1481                           
  1482                           ;mainP2.c: 204:     ADCON0bits.CHS = 0b0000;
  1483  016F  30C3               	movlw	-61
  1484  0170  059F               	andwf	31,f	;volatile
  1485  0171                     l1923:
  1486                           
  1487                           ;mainP2.c: 205:     ADCON0bits.GO = 0b0;
  1488  0171  109F               	bcf	31,1	;volatile
  1489  0172                     l1925:
  1490                           
  1491                           ;mainP2.c: 206:     ADCON0bits.ADON = 0b1;
  1492  0172  141F               	bsf	31,0	;volatile
  1493  0173                     l1927:
  1494                           
  1495                           ;mainP2.c: 207:     ADCON1bits.ADFM = 0b0;
  1496  0173  1683               	bsf	3,5	;RP0=1, select bank1
  1497  0174  1303               	bcf	3,6	;RP1=0, select bank1
  1498  0175  139F               	bcf	31,7	;volatile
  1499  0176                     l1929:
  1500                           
  1501                           ;mainP2.c: 208:     ADCON1bits.VCFG1 = 0b0;
  1502  0176  129F               	bcf	31,5	;volatile
  1503  0177                     l1931:
  1504                           
  1505                           ;mainP2.c: 209:     ADCON1bits.VCFG0 = 0b0;
  1506  0177  121F               	bcf	31,4	;volatile
  1507  0178                     l1933:
  1508                           
  1509                           ;mainP2.c: 212:     SPBRG = 12;
  1510  0178  300C               	movlw	12
  1511  0179  0099               	movwf	25	;volatile
  1512  017A                     l1935:
  1513                           
  1514                           ;mainP2.c: 213:     TXSTAbits.BRGH = 0;
  1515  017A  1118               	bcf	24,2	;volatile
  1516  017B                     l1937:
  1517                           
  1518                           ;mainP2.c: 214:     TXSTAbits.TXEN = 1;
  1519  017B  1698               	bsf	24,5	;volatile
  1520  017C                     l1939:
  1521                           
  1522                           ;mainP2.c: 215:     RCSTAbits.CREN = 1;
  1523  017C  1283               	bcf	3,5	;RP0=0, select bank0
  1524  017D  1303               	bcf	3,6	;RP1=0, select bank0
  1525  017E  1618               	bsf	24,4	;volatile
  1526  017F                     l1941:
  1527                           
  1528                           ;mainP2.c: 216:     TXSTAbits.SYNC = 0;
  1529  017F  1683               	bsf	3,5	;RP0=1, select bank1
  1530  0180  1303               	bcf	3,6	;RP1=0, select bank1
  1531  0181  1218               	bcf	24,4	;volatile
  1532  0182                     l1943:
  1533                           
  1534                           ;mainP2.c: 217:     RCSTAbits.SPEN = 1;
  1535  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1536  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1537  0184  1798               	bsf	24,7	;volatile
  1538  0185                     l1945:
  1539                           
  1540                           ;mainP2.c: 220:     OSCCONbits.SCS = 1;
  1541  0185  1683               	bsf	3,5	;RP0=1, select bank1
  1542  0186  1303               	bcf	3,6	;RP1=0, select bank1
  1543  0187  140F               	bsf	15,0	;volatile
  1544  0188                     l1947:
  1545                           
  1546                           ;mainP2.c: 221:     OPTION_REGbits.T0CS = 0;
  1547  0188  1281               	bcf	1,5	;volatile
  1548  0189                     l1949:
  1549                           
  1550                           ;mainP2.c: 222:     OPTION_REGbits.PSA = 0;
  1551  0189  1181               	bcf	1,3	;volatile
  1552  018A                     l1951:
  1553                           
  1554                           ;mainP2.c: 223:     OPTION_REGbits.PS2 = 0;
  1555  018A  1101               	bcf	1,2	;volatile
  1556  018B                     l1953:
  1557                           
  1558                           ;mainP2.c: 224:     OPTION_REGbits.PS1 = 1;
  1559  018B  1481               	bsf	1,1	;volatile
  1560  018C                     l1955:
  1561                           
  1562                           ;mainP2.c: 225:     OPTION_REGbits.PS0 = 1;
  1563  018C  1401               	bsf	1,0	;volatile
  1564  018D                     l1957:
  1565                           
  1566                           ;mainP2.c: 226:     INTCONbits.T0IF = 0;
  1567  018D  110B               	bcf	11,2	;volatile
  1568  018E                     l1959:
  1569                           
  1570                           ;mainP2.c: 227:     TMR0 = 131;
  1571  018E  3083               	movlw	131
  1572  018F  1283               	bcf	3,5	;RP0=0, select bank0
  1573  0190  1303               	bcf	3,6	;RP1=0, select bank0
  1574  0191  0081               	movwf	1	;volatile
  1575  0192                     l1961:
  1576                           
  1577                           ;mainP2.c: 228:     SERVOS.bit1 = 0;
  1578  0192  12B1               	bcf	_SERVOS,5
  1579  0193                     l1963:
  1580                           
  1581                           ;mainP2.c: 229:     SERVOS.modo = 0;
  1582  0193  1331               	bcf	_SERVOS,6
  1583  0194                     l134:
  1584  0194  0008               	return
  1585  0195                     __end_of_configuraciones:
  1586                           
  1587                           	psect	text8
  1588  0021                     __ptext8:	
  1589 ;; *************** function _AnalogReadServo *****************
  1590 ;; Defined at:
  1591 ;;		line 266 in file "mainP2.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;		None
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;		None
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      void 
  1598 ;; Registers used:
  1599 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1605 ;;      Params:         0       0       0       0       0
  1606 ;;      Locals:         0       0       0       0       0
  1607 ;;      Temps:          0       2       0       0       0
  1608 ;;      Totals:         0       2       0       0       0
  1609 ;;Total ram usage:        2 bytes
  1610 ;; Hardware stack levels used:    1
  1611 ;; Hardware stack levels required when called:    2
  1612 ;; This function calls:
  1613 ;;		Nothing
  1614 ;; This function is called by:
  1615 ;;		_main
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           
  1620                           ;psect for function _AnalogReadServo
  1621  0021                     _AnalogReadServo:
  1622  0021                     l1979:	
  1623                           ;incstack = 0
  1624                           ; Regs used in _AnalogReadServo: [wreg-fsr0h+status,2+status,0]
  1625                           
  1626                           
  1627                           ;mainP2.c: 268:     if(!ADCON0bits.GO){
  1628  0021  1283               	bcf	3,5	;RP0=0, select bank0
  1629  0022  1303               	bcf	3,6	;RP1=0, select bank0
  1630  0023  189F               	btfsc	31,1	;volatile
  1631  0024  2826               	goto	u681
  1632  0025  2827               	goto	u680
  1633  0026                     u681:
  1634  0026  28C1               	goto	l170
  1635  0027                     u680:
  1636  0027  289E               	goto	l2025
  1637  0028                     l1983:
  1638                           
  1639                           ;mainP2.c: 271:                  POT2 = ADRESH;
  1640  0028  081E               	movf	30,w	;volatile
  1641  0029  00A0               	movwf	??_AnalogReadServo
  1642  002A  0820               	movf	??_AnalogReadServo,w
  1643  002B  00AE               	movwf	_POT2
  1644                           
  1645                           ;mainP2.c: 272:             break;
  1646  002C  28C1               	goto	l170
  1647  002D                     l1985:
  1648                           
  1649                           ;mainP2.c: 275:                 ADCON0bits.CHS = 2;
  1650  002D  081F               	movf	31,w	;volatile
  1651  002E  39C3               	andlw	-61
  1652  002F  3808               	iorlw	8
  1653  0030  009F               	movwf	31	;volatile
  1654  0031                     l1987:
  1655                           
  1656                           ;mainP2.c: 276:                 if(POT2>=160) POT2 = 160;
  1657  0031  30A0               	movlw	160
  1658  0032  022E               	subwf	_POT2,w
  1659  0033  1C03               	skipc
  1660  0034  2836               	goto	u691
  1661  0035  2837               	goto	u690
  1662  0036                     u691:
  1663  0036  283B               	goto	l156
  1664  0037                     u690:
  1665  0037                     l1989:
  1666  0037  30A0               	movlw	160
  1667  0038  00A0               	movwf	??_AnalogReadServo
  1668  0039  0820               	movf	??_AnalogReadServo,w
  1669  003A  00AE               	movwf	_POT2
  1670  003B                     l156:
  1671                           
  1672                           ;mainP2.c: 277:                 if(POT2<=10) POT2 = 10;
  1673  003B  300B               	movlw	11
  1674  003C  022E               	subwf	_POT2,w
  1675  003D  1803               	skipnc
  1676  003E  2840               	goto	u701
  1677  003F  2841               	goto	u700
  1678  0040                     u701:
  1679  0040  28C1               	goto	l170
  1680  0041                     u700:
  1681  0041                     l1991:
  1682  0041  300A               	movlw	10
  1683  0042  00A0               	movwf	??_AnalogReadServo
  1684  0043  0820               	movf	??_AnalogReadServo,w
  1685  0044  00AE               	movwf	_POT2
  1686  0045  28C1               	goto	l170
  1687  0046                     l1993:
  1688                           
  1689                           ;mainP2.c: 281:                 POT3 = ADRESH;
  1690  0046  081E               	movf	30,w	;volatile
  1691  0047  00A0               	movwf	??_AnalogReadServo
  1692  0048  0820               	movf	??_AnalogReadServo,w
  1693  0049  00AD               	movwf	_POT3
  1694                           
  1695                           ;mainP2.c: 282:             break;
  1696  004A  28C1               	goto	l170
  1697  004B                     l1995:
  1698                           
  1699                           ;mainP2.c: 285:                 ADCON0bits.CHS = 3;
  1700  004B  081F               	movf	31,w	;volatile
  1701  004C  39C3               	andlw	-61
  1702  004D  380C               	iorlw	12
  1703  004E  009F               	movwf	31	;volatile
  1704  004F                     l1997:
  1705                           
  1706                           ;mainP2.c: 286:                 if(POT3>=160) POT3 = 160;
  1707  004F  30A0               	movlw	160
  1708  0050  022D               	subwf	_POT3,w
  1709  0051  1C03               	skipc
  1710  0052  2854               	goto	u711
  1711  0053  2855               	goto	u710
  1712  0054                     u711:
  1713  0054  2859               	goto	l160
  1714  0055                     u710:
  1715  0055                     l1999:
  1716  0055  30A0               	movlw	160
  1717  0056  00A0               	movwf	??_AnalogReadServo
  1718  0057  0820               	movf	??_AnalogReadServo,w
  1719  0058  00AD               	movwf	_POT3
  1720  0059                     l160:
  1721                           
  1722                           ;mainP2.c: 287:                 if(POT3<=10) POT3 = 10;
  1723  0059  300B               	movlw	11
  1724  005A  022D               	subwf	_POT3,w
  1725  005B  1803               	skipnc
  1726  005C  285E               	goto	u721
  1727  005D  285F               	goto	u720
  1728  005E                     u721:
  1729  005E  28C1               	goto	l170
  1730  005F                     u720:
  1731  005F                     l2001:
  1732  005F  300A               	movlw	10
  1733  0060  00A0               	movwf	??_AnalogReadServo
  1734  0061  0820               	movf	??_AnalogReadServo,w
  1735  0062  00AD               	movwf	_POT3
  1736  0063  28C1               	goto	l170
  1737  0064                     l2003:
  1738                           
  1739                           ;mainP2.c: 291:                 POT4 = ADRESH;
  1740  0064  081E               	movf	30,w	;volatile
  1741  0065  00A0               	movwf	??_AnalogReadServo
  1742  0066  0820               	movf	??_AnalogReadServo,w
  1743  0067  00AC               	movwf	_POT4
  1744                           
  1745                           ;mainP2.c: 292:             break;
  1746  0068  28C1               	goto	l170
  1747  0069                     l2005:
  1748                           
  1749                           ;mainP2.c: 295:                 ADCON0bits.CHS = 0;
  1750  0069  30C3               	movlw	-61
  1751  006A  059F               	andwf	31,f	;volatile
  1752  006B                     l2007:
  1753                           
  1754                           ;mainP2.c: 296:                 if(POT4>=160) POT4 = 160;
  1755  006B  30A0               	movlw	160
  1756  006C  022C               	subwf	_POT4,w
  1757  006D  1C03               	skipc
  1758  006E  2870               	goto	u731
  1759  006F  2871               	goto	u730
  1760  0070                     u731:
  1761  0070  2875               	goto	l164
  1762  0071                     u730:
  1763  0071                     l2009:
  1764  0071  30A0               	movlw	160
  1765  0072  00A0               	movwf	??_AnalogReadServo
  1766  0073  0820               	movf	??_AnalogReadServo,w
  1767  0074  00AC               	movwf	_POT4
  1768  0075                     l164:
  1769                           
  1770                           ;mainP2.c: 297:                 if(POT4<=10) POT4 = 10;
  1771  0075  300B               	movlw	11
  1772  0076  022C               	subwf	_POT4,w
  1773  0077  1803               	skipnc
  1774  0078  287A               	goto	u741
  1775  0079  287B               	goto	u740
  1776  007A                     u741:
  1777  007A  28C1               	goto	l170
  1778  007B                     u740:
  1779  007B                     l2011:
  1780  007B  300A               	movlw	10
  1781  007C  00A0               	movwf	??_AnalogReadServo
  1782  007D  0820               	movf	??_AnalogReadServo,w
  1783  007E  00AC               	movwf	_POT4
  1784  007F  28C1               	goto	l170
  1785  0080                     l2013:
  1786                           
  1787                           ;mainP2.c: 301:                 POT1 = ADRESH;
  1788  0080  081E               	movf	30,w	;volatile
  1789  0081  00A0               	movwf	??_AnalogReadServo
  1790  0082  0820               	movf	??_AnalogReadServo,w
  1791  0083  00AF               	movwf	_POT1
  1792                           
  1793                           ;mainP2.c: 302:             break;
  1794  0084  28C1               	goto	l170
  1795  0085                     l2015:
  1796                           
  1797                           ;mainP2.c: 305:                 ADCON0bits.CHS = 1;
  1798  0085  081F               	movf	31,w	;volatile
  1799  0086  39C3               	andlw	-61
  1800  0087  3804               	iorlw	4
  1801  0088  009F               	movwf	31	;volatile
  1802  0089                     l2017:
  1803                           
  1804                           ;mainP2.c: 306:                 if(POT1>=160) POT1 = 160;
  1805  0089  30A0               	movlw	160
  1806  008A  022F               	subwf	_POT1,w
  1807  008B  1C03               	skipc
  1808  008C  288E               	goto	u751
  1809  008D  288F               	goto	u750
  1810  008E                     u751:
  1811  008E  2893               	goto	l168
  1812  008F                     u750:
  1813  008F                     l2019:
  1814  008F  30A0               	movlw	160
  1815  0090  00A0               	movwf	??_AnalogReadServo
  1816  0091  0820               	movf	??_AnalogReadServo,w
  1817  0092  00AF               	movwf	_POT1
  1818  0093                     l168:
  1819                           
  1820                           ;mainP2.c: 307:                 if(POT1<=10) POT1 = 10;
  1821  0093  300B               	movlw	11
  1822  0094  022F               	subwf	_POT1,w
  1823  0095  1803               	skipnc
  1824  0096  2898               	goto	u761
  1825  0097  2899               	goto	u760
  1826  0098                     u761:
  1827  0098  28C1               	goto	l170
  1828  0099                     u760:
  1829  0099                     l2021:
  1830  0099  300A               	movlw	10
  1831  009A  00A0               	movwf	??_AnalogReadServo
  1832  009B  0820               	movf	??_AnalogReadServo,w
  1833  009C  00AF               	movwf	_POT1
  1834  009D  28C1               	goto	l170
  1835  009E                     l2025:
  1836  009E  0831               	movf	_SERVOS,w
  1837  009F  391F               	andlw	31
  1838  00A0  00A0               	movwf	??_AnalogReadServo
  1839  00A1  01A1               	clrf	??_AnalogReadServo+1
  1840                           
  1841                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1842                           ; Switch size 1, requested type "simple"
  1843                           ; Number of cases is 1, Range of values is 0 to 0
  1844                           ; switch strategies available:
  1845                           ; Name         Instructions Cycles
  1846                           ; simple_byte            4     3 (average)
  1847                           ; direct_byte           11     8 (fixed)
  1848                           ; jumptable            260     6 (fixed)
  1849                           ;	Chosen strategy is simple_byte
  1850  00A2  0821               	movf	??_AnalogReadServo+1,w
  1851  00A3  3A00               	xorlw	0	; case 0
  1852  00A4  1903               	skipnz
  1853  00A5  28A7               	goto	l2219
  1854  00A6  28C1               	goto	l170
  1855  00A7                     l2219:
  1856                           
  1857                           ; Switch size 1, requested type "simple"
  1858                           ; Number of cases is 8, Range of values is 0 to 10
  1859                           ; switch strategies available:
  1860                           ; Name         Instructions Cycles
  1861                           ; simple_byte           25    13 (average)
  1862                           ; direct_byte           41     8 (fixed)
  1863                           ; jumptable            260     6 (fixed)
  1864                           ;	Chosen strategy is simple_byte
  1865  00A7  0820               	movf	??_AnalogReadServo,w
  1866  00A8  3A00               	xorlw	0	; case 0
  1867  00A9  1903               	skipnz
  1868  00AA  2828               	goto	l1983
  1869  00AB  3A01               	xorlw	1	; case 1
  1870  00AC  1903               	skipnz
  1871  00AD  282D               	goto	l1985
  1872  00AE  3A02               	xorlw	2	; case 3
  1873  00AF  1903               	skipnz
  1874  00B0  2846               	goto	l1993
  1875  00B1  3A07               	xorlw	7	; case 4
  1876  00B2  1903               	skipnz
  1877  00B3  284B               	goto	l1995
  1878  00B4  3A02               	xorlw	2	; case 6
  1879  00B5  1903               	skipnz
  1880  00B6  2864               	goto	l2003
  1881  00B7  3A01               	xorlw	1	; case 7
  1882  00B8  1903               	skipnz
  1883  00B9  2869               	goto	l2005
  1884  00BA  3A0E               	xorlw	14	; case 9
  1885  00BB  1903               	skipnz
  1886  00BC  2880               	goto	l2013
  1887  00BD  3A03               	xorlw	3	; case 10
  1888  00BE  1903               	skipnz
  1889  00BF  2885               	goto	l2015
  1890  00C0  28C1               	goto	l170
  1891  00C1                     l170:
  1892  00C1  0008               	return
  1893  00C2                     __end_of_AnalogReadServo:
  1894                           
  1895                           	psect	text9
  1896  00C2                     __ptext9:	
  1897 ;; *************** function _rutInter *****************
  1898 ;; Defined at:
  1899 ;;		line 86 in file "mainP2.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;		None
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      void 
  1906 ;; Registers used:
  1907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1913 ;;      Params:         0       0       0       0       0
  1914 ;;      Locals:         0       0       0       0       0
  1915 ;;      Temps:          4       0       0       0       0
  1916 ;;      Totals:         4       0       0       0       0
  1917 ;;Total ram usage:        4 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:    1
  1920 ;; This function calls:
  1921 ;;		_servos
  1922 ;; This function is called by:
  1923 ;;		Interrupt level 1
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           
  1928                           ;psect for function _rutInter
  1929  00C2                     _rutInter:
  1930  00C2                     i1l1595:
  1931                           
  1932                           ;mainP2.c: 88:     if(INTCONbits.TMR0IF) {
  1933  00C2  1D0B               	btfss	11,2	;volatile
  1934  00C3  28C5               	goto	u48_21
  1935  00C4  28C6               	goto	u48_20
  1936  00C5                     u48_21:
  1937  00C5  28DE               	goto	i1l109
  1938  00C6                     u48_20:
  1939  00C6                     i1l1597:
  1940                           
  1941                           ;mainP2.c: 89:         SERVOS.bit0++;
  1942  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1943  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1944  00C8  0831               	movf	_SERVOS,w
  1945  00C9  391F               	andlw	31
  1946  00CA  00F2               	movwf	??_rutInter
  1947  00CB  0AF2               	incf	??_rutInter,f
  1948  00CC  0831               	movf	_SERVOS,w
  1949  00CD  0672               	xorwf	??_rutInter,w
  1950  00CE  39E0               	andlw	-32
  1951  00CF  0672               	xorwf	??_rutInter,w
  1952  00D0  00B1               	movwf	_SERVOS
  1953  00D1                     i1l1599:
  1954                           
  1955                           ;mainP2.c: 90:         INTCONbits.TMR0IF = 0;
  1956  00D1  110B               	bcf	11,2	;volatile
  1957  00D2                     i1l1601:
  1958                           
  1959                           ;mainP2.c: 91:         servos();
  1960  00D2  120A  118A  2247  120A  118A  	fcall	_servos
  1961  00D7                     i1l1603:
  1962                           
  1963                           ;mainP2.c: 92:         if(SERVOS.modo) ADCON0bits.GO = 1;
  1964  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1965  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1966  00D9  1F31               	btfss	_SERVOS,6
  1967  00DA  28DC               	goto	u49_21
  1968  00DB  28DD               	goto	u49_20
  1969  00DC                     u49_21:
  1970  00DC  28DE               	goto	i1l109
  1971  00DD                     u49_20:
  1972  00DD                     i1l1605:
  1973  00DD  149F               	bsf	31,1	;volatile
  1974  00DE                     i1l109:	
  1975                           ;mainP2.c: 93:     }
  1976                           
  1977                           
  1978                           ;mainP2.c: 95:     if(PIR1bits.TMR1IF){
  1979  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1980  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1981  00E0  1C0C               	btfss	12,0	;volatile
  1982  00E1  28E3               	goto	u50_21
  1983  00E2  28E4               	goto	u50_20
  1984  00E3                     u50_21:
  1985  00E3  28EE               	goto	i1l1617
  1986  00E4                     u50_20:
  1987  00E4                     i1l1607:
  1988                           
  1989                           ;mainP2.c: 96:         SERVOS.guardar = 1;
  1990  00E4  17B1               	bsf	_SERVOS,7
  1991  00E5                     i1l1609:
  1992                           
  1993                           ;mainP2.c: 97:         posicion ++;
  1994  00E5  3001               	movlw	1
  1995  00E6  00F2               	movwf	??_rutInter
  1996  00E7  0872               	movf	??_rutInter,w
  1997  00E8  07AB               	addwf	_posicion,f
  1998  00E9                     i1l1611:
  1999                           
  2000                           ;mainP2.c: 98:         PIR1bits.TMR1IF = 0;
  2001  00E9  100C               	bcf	12,0	;volatile
  2002  00EA                     i1l1613:
  2003                           
  2004                           ;mainP2.c: 99:         TMR1H = 0B00111100;
  2005  00EA  303C               	movlw	60
  2006  00EB  008F               	movwf	15	;volatile
  2007  00EC                     i1l1615:
  2008                           
  2009                           ;mainP2.c: 100:         TMR1L = 0B10101111;
  2010  00EC  30AF               	movlw	175
  2011  00ED  008E               	movwf	14	;volatile
  2012  00EE                     i1l1617:
  2013                           
  2014                           ;mainP2.c: 103:     if(INTCONbits.RBIF && PORTBbits.RB0){
  2015  00EE  1C0B               	btfss	11,0	;volatile
  2016  00EF  28F1               	goto	u51_21
  2017  00F0  28F2               	goto	u51_20
  2018  00F1                     u51_21:
  2019  00F1  2904               	goto	i1l1625
  2020  00F2                     u51_20:
  2021  00F2                     i1l1619:
  2022  00F2  1C06               	btfss	6,0	;volatile
  2023  00F3  28F5               	goto	u52_21
  2024  00F4  28F6               	goto	u52_20
  2025  00F5                     u52_21:
  2026  00F5  2904               	goto	i1l1625
  2027  00F6                     u52_20:
  2028  00F6                     i1l1621:
  2029                           
  2030                           ;mainP2.c: 104:         SERVOS.modo = ~SERVOS.modo;
  2031  00F6  1003               	clrc
  2032  00F7  1F31               	btfss	_SERVOS,6
  2033  00F8  1403               	setc
  2034  00F9  1803               	btfsc	3,0
  2035  00FA  28FC               	goto	u53_21
  2036  00FB  2900               	goto	u53_20
  2037  00FC                     u53_21:
  2038  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  2039  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  2040  00FE  1731               	bsf	_SERVOS,6
  2041  00FF  2903               	goto	u54_24
  2042  0100                     u53_20:
  2043  0100  1283               	bcf	3,5	;RP0=0, select bank0
  2044  0101  1303               	bcf	3,6	;RP1=0, select bank0
  2045  0102  1331               	bcf	_SERVOS,6
  2046  0103                     u54_24:
  2047  0103                     i1l1623:
  2048                           
  2049                           ;mainP2.c: 105:         INTCONbits.RBIF = 0;
  2050  0103  100B               	bcf	11,0	;volatile
  2051  0104                     i1l1625:
  2052                           
  2053                           ;mainP2.c: 108:     if(INTCONbits.RBIF && PORTBbits.RB1){
  2054  0104  1C0B               	btfss	11,0	;volatile
  2055  0105  2907               	goto	u55_21
  2056  0106  2908               	goto	u55_20
  2057  0107                     u55_21:
  2058  0107  2914               	goto	i1l113
  2059  0108                     u55_20:
  2060  0108                     i1l1627:
  2061  0108  1C86               	btfss	6,1	;volatile
  2062  0109  290B               	goto	u56_21
  2063  010A  290C               	goto	u56_20
  2064  010B                     u56_21:
  2065  010B  2914               	goto	i1l113
  2066  010C                     u56_20:
  2067  010C                     i1l1629:
  2068                           
  2069                           ;mainP2.c: 109:         T1CONbits.TMR1ON = 1;
  2070  010C  1410               	bsf	16,0	;volatile
  2071                           
  2072                           ;mainP2.c: 110:         PORTEbits.RE0 = 1;
  2073  010D  1409               	bsf	9,0	;volatile
  2074                           
  2075                           ;mainP2.c: 111:         if(SERVOS.modo)SERVOS.guardar = 1;
  2076  010E  1F31               	btfss	_SERVOS,6
  2077  010F  2911               	goto	u57_21
  2078  0110  2912               	goto	u57_20
  2079  0111                     u57_21:
  2080  0111  2913               	goto	i1l114
  2081  0112                     u57_20:
  2082  0112                     i1l1631:
  2083  0112  17B1               	bsf	_SERVOS,7
  2084  0113                     i1l114:
  2085                           
  2086                           ;mainP2.c: 112:         INTCONbits.RBIF = 0;
  2087  0113  100B               	bcf	11,0	;volatile
  2088  0114                     i1l113:	
  2089                           ;mainP2.c: 113:     }
  2090                           
  2091                           
  2092                           ;mainP2.c: 115:     INTCONbits.RBIF = 0;
  2093  0114  100B               	bcf	11,0	;volatile
  2094                           
  2095                           ;mainP2.c: 117:     if(PIR1bits.RCIF){
  2096  0115  1E8C               	btfss	12,5	;volatile
  2097  0116  2918               	goto	u58_21
  2098  0117  2919               	goto	u58_20
  2099  0118                     u58_21:
  2100  0118  292B               	goto	i1l116
  2101  0119                     u58_20:
  2102  0119                     i1l1633:
  2103                           
  2104                           ;mainP2.c: 118:         EXTREC = RCREG;
  2105  0119  081A               	movf	26,w	;volatile
  2106  011A  00F2               	movwf	??_rutInter
  2107  011B  0872               	movf	??_rutInter,w
  2108  011C  00F8               	movwf	_EXTREC
  2109  011D                     i1l1635:
  2110                           
  2111                           ;mainP2.c: 119:         UART.indicador = ~UART.indicador;
  2112  011D  1003               	clrc
  2113  011E  1C30               	btfss	_UART,0
  2114  011F  1403               	setc
  2115  0120  1803               	btfsc	3,0
  2116  0121  2923               	goto	u59_21
  2117  0122  2927               	goto	u59_20
  2118  0123                     u59_21:
  2119  0123  1283               	bcf	3,5	;RP0=0, select bank0
  2120  0124  1303               	bcf	3,6	;RP1=0, select bank0
  2121  0125  1430               	bsf	_UART,0
  2122  0126  292A               	goto	u60_24
  2123  0127                     u59_20:
  2124  0127  1283               	bcf	3,5	;RP0=0, select bank0
  2125  0128  1303               	bcf	3,6	;RP1=0, select bank0
  2126  0129  1030               	bcf	_UART,0
  2127  012A                     u60_24:
  2128  012A                     i1l1637:
  2129                           
  2130                           ;mainP2.c: 120:         UART.datorecep = 1;
  2131  012A  14B0               	bsf	_UART,1
  2132  012B                     i1l116:
  2133  012B  0875               	movf	??_rutInter+3,w
  2134  012C  008A               	movwf	10
  2135  012D  0874               	movf	??_rutInter+2,w
  2136  012E  0084               	movwf	4
  2137  012F  0E73               	swapf	??_rutInter+1,w
  2138  0130  0083               	movwf	3
  2139  0131  0EFE               	swapf	btemp,f
  2140  0132  0E7E               	swapf	btemp,w
  2141  0133  0009               	retfie
  2142  0134                     __end_of_rutInter:
  2143                           
  2144                           	psect	intentry
  2145  0004                     __pintentry:	
  2146                           ;incstack = 0
  2147                           ; Regs used in _rutInter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2148                           
  2149  0004                     interrupt_function:
  2150  007E                     saved_w	set	btemp
  2151  0004  00FE               	movwf	btemp
  2152  0005  0E03               	swapf	3,w
  2153  0006  00F3               	movwf	??_rutInter+1
  2154  0007  0804               	movf	4,w
  2155  0008  00F4               	movwf	??_rutInter+2
  2156  0009  080A               	movf	10,w
  2157  000A  00F5               	movwf	??_rutInter+3
  2158  000B  120A  118A  28C2   	ljmp	_rutInter
  2159                           
  2160                           	psect	text10
  2161  0247                     __ptext10:	
  2162 ;; *************** function _servos *****************
  2163 ;; Defined at:
  2164 ;;		line 232 in file "mainP2.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;		None
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;		None
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  1    wreg      void 
  2171 ;; Registers used:
  2172 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2178 ;;      Params:         0       0       0       0       0
  2179 ;;      Locals:         0       0       0       0       0
  2180 ;;      Temps:          2       0       0       0       0
  2181 ;;      Totals:         2       0       0       0       0
  2182 ;;Total ram usage:        2 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; This function calls:
  2185 ;;		Nothing
  2186 ;; This function is called by:
  2187 ;;		_rutInter
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           
  2192                           ;psect for function _servos
  2193  0247                     _servos:
  2194  0247                     i1l1379:	
  2195                           ;incstack = 0
  2196                           ; Regs used in _servos: [wreg-fsr0h+status,2+status,0]
  2197                           
  2198                           
  2199                           ;mainP2.c: 234:             if(SERVOS.bit0 == 18) SERVOS.bit0 = 0;
  2200  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2201  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2202  0249  0831               	movf	_SERVOS,w
  2203  024A  391F               	andlw	31
  2204  024B  3A12               	xorlw	18
  2205  024C  1D03               	skipz
  2206  024D  2A4F               	goto	u36_21
  2207  024E  2A50               	goto	u36_20
  2208  024F                     u36_21:
  2209  024F  2A73               	goto	i1l1417
  2210  0250                     u36_20:
  2211  0250                     i1l1381:
  2212  0250  30E0               	movlw	-32
  2213  0251  05B1               	andwf	_SERVOS,f
  2214  0252  2A73               	goto	i1l1417
  2215  0253                     i1l1383:
  2216                           
  2217                           ;mainP2.c: 238:                     TMR0 = POT1; PORTDbits.RD0 = 1;
  2218  0253  082F               	movf	_POT1,w
  2219  0254  0081               	movwf	1	;volatile
  2220  0255                     i1l1385:
  2221  0255  1408               	bsf	8,0	;volatile
  2222                           
  2223                           ;mainP2.c: 239:                     break;
  2224  0256  2A96               	goto	i1l148
  2225  0257                     i1l1387:
  2226                           
  2227                           ;mainP2.c: 241:                     TMR0 = 255-POT1; PORTDbits.RD0 = 0;
  2228  0257  092F               	comf	_POT1,w
  2229  0258  0081               	movwf	1	;volatile
  2230  0259                     i1l1389:
  2231  0259  1008               	bcf	8,0	;volatile
  2232                           
  2233                           ;mainP2.c: 242:                     break;
  2234  025A  2A96               	goto	i1l148
  2235  025B                     i1l1391:
  2236                           
  2237                           ;mainP2.c: 244:                     TMR0 = POT2; PORTDbits.RD1 = 1;
  2238  025B  082E               	movf	_POT2,w
  2239  025C  0081               	movwf	1	;volatile
  2240  025D                     i1l1393:
  2241  025D  1488               	bsf	8,1	;volatile
  2242                           
  2243                           ;mainP2.c: 245:                     break;
  2244  025E  2A96               	goto	i1l148
  2245  025F                     i1l1395:
  2246                           
  2247                           ;mainP2.c: 247:                      TMR0 = 255-POT2; PORTDbits.RD1 = 0;
  2248  025F  092E               	comf	_POT2,w
  2249  0260  0081               	movwf	1	;volatile
  2250  0261                     i1l1397:
  2251  0261  1088               	bcf	8,1	;volatile
  2252                           
  2253                           ;mainP2.c: 248:                     break;
  2254  0262  2A96               	goto	i1l148
  2255  0263                     i1l1399:
  2256                           
  2257                           ;mainP2.c: 250:                     TMR0 = POT3; PORTDbits.RD2 = 1;
  2258  0263  082D               	movf	_POT3,w
  2259  0264  0081               	movwf	1	;volatile
  2260  0265                     i1l1401:
  2261  0265  1508               	bsf	8,2	;volatile
  2262                           
  2263                           ;mainP2.c: 251:                     break;
  2264  0266  2A96               	goto	i1l148
  2265  0267                     i1l1403:
  2266                           
  2267                           ;mainP2.c: 253:                     TMR0 = 255-POT3; PORTDbits.RD2 = 0;
  2268  0267  092D               	comf	_POT3,w
  2269  0268  0081               	movwf	1	;volatile
  2270  0269                     i1l1405:
  2271  0269  1108               	bcf	8,2	;volatile
  2272                           
  2273                           ;mainP2.c: 254:                     break;
  2274  026A  2A96               	goto	i1l148
  2275  026B                     i1l1407:
  2276                           
  2277                           ;mainP2.c: 256:                     TMR0 = POT4; PORTDbits.RD3 = 1;
  2278  026B  082C               	movf	_POT4,w
  2279  026C  0081               	movwf	1	;volatile
  2280  026D                     i1l1409:
  2281  026D  1588               	bsf	8,3	;volatile
  2282                           
  2283                           ;mainP2.c: 257:                     break;
  2284  026E  2A96               	goto	i1l148
  2285  026F                     i1l1411:
  2286                           
  2287                           ;mainP2.c: 259:                     TMR0 = 255-POT4; PORTDbits.RD3 = 0;
  2288  026F  092C               	comf	_POT4,w
  2289  0270  0081               	movwf	1	;volatile
  2290  0271                     i1l1413:
  2291  0271  1188               	bcf	8,3	;volatile
  2292                           
  2293                           ;mainP2.c: 260:                     break;
  2294  0272  2A96               	goto	i1l148
  2295  0273                     i1l1417:
  2296  0273  0831               	movf	_SERVOS,w
  2297  0274  391F               	andlw	31
  2298  0275  00F0               	movwf	??_servos
  2299  0276  01F1               	clrf	??_servos+1
  2300                           
  2301                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2302                           ; Switch size 1, requested type "simple"
  2303                           ; Number of cases is 1, Range of values is 0 to 0
  2304                           ; switch strategies available:
  2305                           ; Name         Instructions Cycles
  2306                           ; simple_byte            4     3 (average)
  2307                           ; direct_byte           11     8 (fixed)
  2308                           ; jumptable            260     6 (fixed)
  2309                           ;	Chosen strategy is simple_byte
  2310  0277  0871               	movf	??_servos+1,w
  2311  0278  3A00               	xorlw	0	; case 0
  2312  0279  1903               	skipnz
  2313  027A  2A7C               	goto	i1l2221
  2314  027B  2A96               	goto	i1l148
  2315  027C                     i1l2221:
  2316                           
  2317                           ; Switch size 1, requested type "simple"
  2318                           ; Number of cases is 8, Range of values is 0 to 10
  2319                           ; switch strategies available:
  2320                           ; Name         Instructions Cycles
  2321                           ; simple_byte           25    13 (average)
  2322                           ; direct_byte           41     8 (fixed)
  2323                           ; jumptable            260     6 (fixed)
  2324                           ;	Chosen strategy is simple_byte
  2325  027C  0870               	movf	??_servos,w
  2326  027D  3A00               	xorlw	0	; case 0
  2327  027E  1903               	skipnz
  2328  027F  2A53               	goto	i1l1383
  2329  0280  3A01               	xorlw	1	; case 1
  2330  0281  1903               	skipnz
  2331  0282  2A57               	goto	i1l1387
  2332  0283  3A02               	xorlw	2	; case 3
  2333  0284  1903               	skipnz
  2334  0285  2A5B               	goto	i1l1391
  2335  0286  3A07               	xorlw	7	; case 4
  2336  0287  1903               	skipnz
  2337  0288  2A5F               	goto	i1l1395
  2338  0289  3A02               	xorlw	2	; case 6
  2339  028A  1903               	skipnz
  2340  028B  2A63               	goto	i1l1399
  2341  028C  3A01               	xorlw	1	; case 7
  2342  028D  1903               	skipnz
  2343  028E  2A67               	goto	i1l1403
  2344  028F  3A0E               	xorlw	14	; case 9
  2345  0290  1903               	skipnz
  2346  0291  2A6B               	goto	i1l1407
  2347  0292  3A03               	xorlw	3	; case 10
  2348  0293  1903               	skipnz
  2349  0294  2A6F               	goto	i1l1411
  2350  0295  2A96               	goto	i1l148
  2351  0296                     i1l148:
  2352  0296  0008               	return
  2353  0297                     __end_of_servos:
  2354  007E                     btemp	set	126	;btemp
  2355  007E                     wtemp0	set	126
  2356                           
  2357                           	psect	config
  2358                           
  2359                           ;Config register CONFIG1 @ 0x2007
  2360                           ;	Oscillator Selection bits
  2361                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2362                           ;	Watchdog Timer Enable bit
  2363                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2364                           ;	Power-up Timer Enable bit
  2365                           ;	PWRTE = OFF, PWRT disabled
  2366                           ;	RE3/MCLR pin function select bit
  2367                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2368                           ;	Code Protection bit
  2369                           ;	CP = OFF, Program memory code protection is disabled
  2370                           ;	Data Code Protection bit
  2371                           ;	CPD = OFF, Data memory code protection is disabled
  2372                           ;	Brown Out Reset Selection bits
  2373                           ;	BOREN = OFF, BOR disabled
  2374                           ;	Internal External Switchover bit
  2375                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2376                           ;	Fail-Safe Clock Monitor Enabled bit
  2377                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2378                           ;	Low Voltage Programming Enable bit
  2379                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2380                           ;	In-Circuit Debugger Mode bit
  2381                           ;	DEBUG = 0x1, unprogrammed default
  2382  2007                     	org	8199
  2383  2007  20F4               	dw	8436
  2384                           
  2385                           ;Config register CONFIG2 @ 0x2008
  2386                           ;	Brown-out Reset Selection bit
  2387                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2388                           ;	Flash Program Memory Self Write Enable bits
  2389                           ;	WRT = OFF, Write protection off
  2390  2008                     	org	8200
  2391  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80     11      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _rutInter in COMMON

    _rutInter->_servos

Critical Paths under _main in BANK0

    _main->_guardar3SEG
    _leer3SEG->_leerSERVOS
    _leerSERVOS->_leerposiciones
    _guardar3SEG->_guardarservos
    _guardarservos->_guardarposiciones

Critical Paths under _rutInter in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rutInter in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutInter in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutInter in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1147
                                              8 BANK0      3     3      0
                    _AnalogReadServo
                    _configuraciones
                        _guardar3SEG
                           _leer3SEG
 ---------------------------------------------------------------------------------
 (1) _leer3SEG                                             2     2      0     378
                                              5 BANK0      2     2      0
                         _leerSERVOS
 ---------------------------------------------------------------------------------
 (2) _leerSERVOS                                           4     4      0     378
                                              1 BANK0      4     4      0
                     _leerposiciones
 ---------------------------------------------------------------------------------
 (3) _leerposiciones                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _guardar3SEG                                          2     2      0     769
                                              6 BANK0      2     2      0
                      _guardarservos
 ---------------------------------------------------------------------------------
 (2) _guardarservos                                        4     4      0     769
                                              2 BANK0      4     4      0
                  _guardarposiciones
 ---------------------------------------------------------------------------------
 (3) _guardarposiciones                                    2     1      1     422
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _configuraciones                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AnalogReadServo                                      2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _rutInter                                             4     4      0       0
                                              2 COMMON     4     4      0
                             _servos
 ---------------------------------------------------------------------------------
 (5) _servos                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AnalogReadServo
   _configuraciones
   _guardar3SEG
     _guardarservos
       _guardarposiciones
   _leer3SEG
     _leerSERVOS
       _leerposiciones

 _rutInter (ROOT)
   _servos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      12       5       22.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri May 14 10:42:57 2021

                       l122 02C2                         l211 0303                         l123 029D  
                       l221 0301                         l134 0194                         l214 0328  
                       l126 02A8                         l207 01EE                         l160 0059  
                       l170 00C1                         l218 02DC                         l164 0075  
                       l156 003B                         l181 0344                         l182 0345  
                       l168 0093                         l193 0246                         l179 0340  
                       l196 0354                         u700 0041                         u701 0040  
                       u710 0055                         u711 0054                         u720 005F  
                       u640 0344                         u800 02B9                         u721 005E  
                       u641 0343                         u801 02B8                         u730 0071  
                       u650 0246                         u731 0070                         u651 0245  
                       u740 007B                         u660 01EE                         u741 007A  
                       u661 01ED                         u750 008F                         u751 008E  
                       u760 0099                         u680 0027                         u761 0098  
                       u681 0026                         u690 0037                         u691 0036  
                       u675 02E5                         u780 02A2                         u781 02A1  
                       u790 02AC                         u775 030C                         u791 02AB  
                       fsr0 0004                 leerSERVOS@n 0024                        l2001 005F  
                      l2011 007B                        l2003 0064                        l2021 0099  
                      l2013 0080                        l2005 0069                        l2015 0085  
                      l2007 006B                        l2031 0302                        l2017 0089  
                      l2009 0071                        l2025 009E                        l2033 0304  
                      l2019 008F                        l2035 0309                        l2211 02FC  
                      l2051 02B1                        l2213 01D6                        l2053 02B4  
                      l2045 0297                        l2215 0323                        l2039 0319  
                      l2055 02B5                        l2047 02A2                        l2063 02C2  
                      l2217 022C                        l2209 02D0                        l2057 02B9  
                      l2049 02AC                        l2219 00A7                        l2059 02BE  
                      l1811 033F                        l1803 032C                        l1901 015E  
                      l1805 0336                        l1821 01F2                        l1813 0349  
                      l1911 0165                        l1903 0161                        l1807 0339  
                      l1831 020C                        l1815 034D                        l1921 016F  
                      l1913 0166                        l1905 0162                        l1809 033E  
                      l1841 0240                        l1833 0218                        l1817 0350  
                      l1931 0177                        l1923 0171                        l1915 0167  
                      l1907 0163                        l1827 01F4                        l1941 017F  
                      l1933 0178                        l1925 0172                        l1917 0168  
                      l1909 0164                        l1829 0200                        l1837 0224  
                      l1853 019A                        l1951 018A                        l1943 0182  
                      l1935 017A                        l1927 0173                        l1919 0169  
                      l1839 023A                        l1855 01A7                        l1863 01CE  
                      l1847 0198                        l1961 0192                        l1953 018B  
                      l1945 0185                        l1937 017B                        l1929 0176  
                      l1881 013F                        l1873 0134                        l1857 01B4  
                      l1865 01E4                        l1963 0193                        l1955 018C  
                      l1947 0188                        l1939 017C                        l1891 0158  
                      l1883 014B                        l1875 0138                        l1867 01E8  
                      l1859 01C1                        l1957 018D                        l1949 0189  
                      l1893 015A                        l1885 014F                        l1877 0139  
                      l1973 02F2                        l1965 02DB                        l1991 0041  
                      l1983 0028                        l1959 018E                        l1895 015B  
                      l1887 0150                        l1879 013D                        l1967 02DD  
                      l1993 0046                        l1985 002D                        l1897 015C  
                      l1889 0156                        l1969 02E2                        l1995 004B  
                      l1987 0031                        l1979 0021                        l1899 015D  
                      l1997 004F                        l1989 0037                        l1999 0055  
                      _POT1 002F                        _POT2 002E                        _POT3 002D  
                      _POT4 002C                        _UART 0030                        _TMR0 0001  
                      _main 0297                        btemp 007E            ?_configuraciones 0070  
                      start 000E                ?_guardar3SEG 0070                       ?_main 0070  
                     _EEADR 010D                       _EEDAT 010C                       _ANSEL 0188  
                     i1l113 0114                       i1l114 0113                       i1l116 012B  
                     i1l109 00DE                       i1l148 0296                       _RCREG 001A  
                     _TMR1H 000F                       _TMR1L 000E                       u50_20 00E4  
                     u50_21 00E3                       _SPBRG 0099                       u51_20 00F2  
                     u51_21 00F1                       _PORTA 0005                       _PORTB 0006  
                     _PORTC 0007                       _PORTD 0008                       _PORTE 0009  
                     u36_20 0250                       u52_20 00F6                       u36_21 024F  
                     u52_21 00F5                       u60_24 012A                       u53_20 0100  
                     u53_21 00FC                       u54_24 0103                       u55_20 0108  
                     u55_21 0107                       u56_20 010C                       u48_20 00C6  
                     u56_21 010B                       u48_21 00C5                       u57_20 0112  
                     u49_20 00DD                       u57_21 0111                       u49_21 00DC  
                     _TRISA 0085                       _TRISB 0086                       _TRISC 0087  
                     _TRISD 0088                       _TRISE 0089                       u58_20 0119  
                     u58_21 0118                       u59_20 0127                       u59_21 0123  
                     _TXREG 0019                       pclath 000A                       status 0003  
                     wtemp0 007E             __initialization 0011                __end_of_main 02DB  
                    ??_main 0028                      _ADRESH 001E                      _EECON2 018D  
    __size_of_guardarservos 0058                      _ANSELH 0189                      i1l1401 0265  
                    i1l1411 026F                      i1l1403 0267                      i1l2221 027C  
                    i1l1413 0271                      i1l1405 0269                      i1l1407 026B  
                    i1l1409 026D                      i1l1417 0273                      i1l1601 00D2  
                    i1l1611 00E9                      i1l1603 00D7                      i1l1381 0250  
                    i1l1621 00F6                      i1l1613 00EA                      i1l1605 00DD  
                    i1l1391 025B                      i1l1383 0253                      i1l1631 0112  
                    i1l1623 0103                      i1l1615 00EC                      i1l1607 00E4  
                    i1l1393 025D                      i1l1385 0255                      i1l1633 0119  
                    i1l1625 0104                      i1l1609 00E5                      i1l1617 00EE  
                    i1l1395 025F                      i1l1387 0257                      i1l1379 0247  
                    i1l1635 011D                      i1l1627 0108                      i1l1619 00F2  
                    i1l1397 0261                      i1l1389 0259                      i1l1637 012A  
                    i1l1629 010C                      i1l1399 0263                      i1l1595 00C2  
                    i1l1597 00C6                      i1l1599 00D1                      _EXTREC 0078  
                    _SERVOS 0031            __end_of_leer3SEG 0302                      _servos 0247  
   __size_of_leerposiciones 000F                      saved_w 007E            __end_of_rutInter 0134  
guardarposiciones@direccion 0020     __end_of__initialization 001D              __pcstackCOMMON 0070  
             _guardarservos 01EF        __size_of_guardar3SEG 0027              _OPTION_REGbits 0081  
  __size_of_AnalogReadServo 00A1                  __pbssBANK0 002B                  __pmaintext 0297  
            ?_guardarservos 0070                  __pintentry 0004                     ?_servos 0070  
                _leerSERVOS 0195                   ?_leer3SEG 0070           _guardarposiciones 0329  
        ?_guardarposiciones 0020         ??_guardarposiciones 0021    __size_of_configuraciones 0061  
                 ?_rutInter 0070                     __ptext1 02DB                     __ptext2 0195  
                   __ptext3 0346                     __ptext4 0302                     __ptext5 01EF  
                   __ptext6 0329                     __ptext7 0134                     __ptext8 0021  
                   __ptext9 00C2             __size_of_servos 0050                   _T1CONbits 0010  
            _leerposiciones 0346   __end_of_guardarposiciones 0346                  ??_leer3SEG 0025  
      end_of_initialization 001D           ??_AnalogReadServo 0020             ??_guardarservos 0022  
                 _RCSTAbits 0018                   _SERVINDIC 0077                  ??_rutInter 0072  
    __end_of_leerposiciones 0355                   _PORTBbits 0006                   _PORTDbits 0008  
                 _PORTEbits 0009                 ?_leerSERVOS 0070                   _TXSTAbits 0098  
         leerSERVOS@desfase 0023             ?_leerposiciones 0070              __end_of_servos 0297  
         ??_configuraciones 0020         start_initialization 0011  __size_of_guardarposiciones 001D  
      guardarservos@desfase 0024               ??_guardar3SEG 0026         __size_of_leerSERVOS 005A  
                  ??_servos 0070                 __pbssCOMMON 0076                   ___latbits 0002  
                 _datEEPROM 0076               __pcstackBANK0 0020              guardarservos@n 0025  
         __size_of_leer3SEG 0027           __size_of_rutInter 0072         __end_of_guardar3SEG 0329  
           _AnalogReadServo 0021           interrupt_function 0004                    _IOCBbits 0096  
                  _PIE1bits 008C                    _PIR1bits 000C                  _ADCON0bits 001F  
                _ADCON1bits 009F     leerposiciones@direccion 0020                ??_leerSERVOS 0021  
                _EECON1bits 018C            ??_leerposiciones 0020       __end_of_guardarservos 0247  
           _configuraciones 0134                 _guardar3SEG 0302          __end_of_leerSERVOS 01EF  
   __end_of_AnalogReadServo 00C2                    __ptext10 0247                    _leer3SEG 02DB  
             __size_of_main 0044                    _posicion 002B    guardarposiciones@guardar 0021  
                  _rutInter 00C2                  _INTCONbits 000B                    intlevel1 0000  
   __end_of_configuraciones 0195                  _OSCCONbits 008F            ?_AnalogReadServo 0070  
