

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu May 13 19:48:51 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0019                     _TXREG	set	25
   215  001E                     _ADRESH	set	30
   216  0008                     _PORTDbits	set	8
   217  0001                     _TMR0	set	1
   218  0018                     _RCSTAbits	set	24
   219  0009                     _PORTE	set	9
   220  0008                     _PORTD	set	8
   221  0007                     _PORTC	set	7
   222  0006                     _PORTB	set	6
   223  0005                     _PORTA	set	5
   224  001A                     _RCREG	set	26
   225  0009                     _PORTEbits	set	9
   226  0010                     _T1CONbits	set	16
   227  0006                     _PORTBbits	set	6
   228  000E                     _TMR1L	set	14
   229  000F                     _TMR1H	set	15
   230  000C                     _PIR1bits	set	12
   231  001F                     _ADCON0bits	set	31
   232  000B                     _INTCONbits	set	11
   233  0081                     _OPTION_REGbits	set	129
   234  0098                     _TXSTAbits	set	152
   235  0099                     _SPBRG	set	153
   236  009F                     _ADCON1bits	set	159
   237  0096                     _IOCBbits	set	150
   238  008C                     _PIE1bits	set	140
   239  008F                     _OSCCONbits	set	143
   240  0089                     _TRISE	set	137
   241  0088                     _TRISD	set	136
   242  0087                     _TRISC	set	135
   243  0086                     _TRISB	set	134
   244  0085                     _TRISA	set	133
   245  010C                     _EEDAT	set	268
   246  010D                     _EEADR	set	269
   247  018D                     _EECON2	set	397
   248  018C                     _EECON1bits	set	396
   249  0189                     _ANSELH	set	393
   250  0188                     _ANSEL	set	392
   251                           
   252                           	psect	cinit
   253  0011                     start_initialization:	
   254                           ; #config settings
   255                           
   256  0011                     __initialization:
   257                           
   258                           ; Clear objects allocated to COMMON
   259  0011  01F6               	clrf	__pbssCOMMON& (0+127)
   260  0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   261  0013  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   262                           
   263                           ; Clear objects allocated to BANK0
   264  0014  1283               	bcf	3,5	;RP0=0, select bank0
   265  0015  1303               	bcf	3,6	;RP1=0, select bank0
   266  0016  01AB               	clrf	__pbssBANK0& (0+127)
   267  0017  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   268  0018  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   269  0019  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   270  001A  01AF               	clrf	(__pbssBANK0+4)& (0+127)
   271  001B  01B0               	clrf	(__pbssBANK0+5)& (0+127)
   272  001C  01B1               	clrf	(__pbssBANK0+6)& (0+127)
   273  001D  01B2               	clrf	(__pbssBANK0+7)& (0+127)
   274  001E                     end_of_initialization:	
   275                           ;End of C runtime variable initialization code
   276                           
   277  001E                     __end_of__initialization:
   278  001E  0183               	clrf	3
   279  001F  120A  118A  2A85   	ljmp	_main	;jump to C main() function
   280                           
   281                           	psect	bssCOMMON
   282  0076                     __pbssCOMMON:
   283  0076                     _addEEPROM:
   284  0076                     	ds	1
   285  0077                     _SERVINDIC:
   286  0077                     	ds	1
   287  0078                     _EXTREC:
   288  0078                     	ds	1
   289                           
   290                           	psect	bssBANK0
   291  002B                     __pbssBANK0:
   292  002B                     _posicion:
   293  002B                     	ds	1
   294  002C                     _datEEPROM:
   295  002C                     	ds	1
   296  002D                     _POT4:
   297  002D                     	ds	1
   298  002E                     _POT3:
   299  002E                     	ds	1
   300  002F                     _POT2:
   301  002F                     	ds	1
   302  0030                     _POT1:
   303  0030                     	ds	1
   304  0031                     _UART:
   305  0031                     	ds	1
   306  0032                     _SERVOS:
   307  0032                     	ds	1
   308                           
   309                           	psect	cstackCOMMON
   310  0070                     __pcstackCOMMON:
   311  0070                     ?_servos:
   312  0070                     ??_servos:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_configuraciones:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ?_leer3SEG:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_AnalogReadServo:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ?_guardar3SEG:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ?_rutInter:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_main:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_guardarservos:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_leerposiciones:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?_leerSERVOS:	
   340                           ; 1 bytes @ 0x0
   341                           
   342                           
   343                           ; 1 bytes @ 0x0
   344  0070                     	ds	2
   345  0072                     ??_rutInter:
   346                           
   347                           ; 1 bytes @ 0x2
   348  0072                     	ds	4
   349                           
   350                           	psect	cstackBANK0
   351  0020                     __pcstackBANK0:
   352  0020                     ??_configuraciones:
   353  0020                     ??_AnalogReadServo:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0020                     ?_guardarposiciones:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0020                     ??_leerposiciones:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0020                     guardarposiciones@direccion:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0020                     leerposiciones@direccion:	
   366                           ; 1 bytes @ 0x0
   367                           
   368                           
   369                           ; 1 bytes @ 0x0
   370  0020                     	ds	1
   371  0021                     ??_guardarposiciones:
   372  0021                     ??_leerSERVOS:	
   373                           ; 1 bytes @ 0x1
   374                           
   375  0021                     guardarposiciones@guardar:	
   376                           ; 1 bytes @ 0x1
   377                           
   378                           
   379                           ; 1 bytes @ 0x1
   380  0021                     	ds	1
   381  0022                     ??_guardarservos:
   382                           
   383                           ; 1 bytes @ 0x2
   384  0022                     	ds	1
   385  0023                     leerSERVOS@desfase:
   386                           
   387                           ; 1 bytes @ 0x3
   388  0023                     	ds	1
   389  0024                     guardarservos@desfase:
   390  0024                     leerSERVOS@n:	
   391                           ; 1 bytes @ 0x4
   392                           
   393                           
   394                           ; 1 bytes @ 0x4
   395  0024                     	ds	1
   396  0025                     ??_leer3SEG:
   397  0025                     guardarservos@n:	
   398                           ; 1 bytes @ 0x5
   399                           
   400                           
   401                           ; 1 bytes @ 0x5
   402  0025                     	ds	1
   403  0026                     ??_guardar3SEG:
   404                           
   405                           ; 1 bytes @ 0x6
   406  0026                     	ds	2
   407  0028                     ??_main:
   408                           
   409                           ; 1 bytes @ 0x8
   410  0028                     	ds	3
   411                           
   412                           	psect	maintext
   413  0285                     __pmaintext:	
   414 ;;
   415 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   416 ;;
   417 ;; *************** function _main *****************
   418 ;; Defined at:
   419 ;;		line 129 in file "mainP2.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;		None
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   428 ;; Tracked objects:
   429 ;;		On entry : B00/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   433 ;;      Params:         0       0       0       0       0
   434 ;;      Locals:         0       0       0       0       0
   435 ;;      Temps:          0       3       0       0       0
   436 ;;      Totals:         0       3       0       0       0
   437 ;;Total ram usage:        3 bytes
   438 ;; Hardware stack levels required when called:    5
   439 ;; This function calls:
   440 ;;		_AnalogReadServo
   441 ;;		_configuraciones
   442 ;;		_guardar3SEG
   443 ;;		_leer3SEG
   444 ;; This function is called by:
   445 ;;		Startup code after reset
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           
   450                           ;psect for function _main
   451  0285                     _main:
   452  0285                     l2052:	
   453                           ;incstack = 0
   454                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   455                           
   456                           
   457                           ;mainP2.c: 130:     configuraciones();
   458  0285  120A  118A  2135  120A  118A  	fcall	_configuraciones
   459  028A  2AAC               	goto	l2070
   460  028B                     l125:	
   461                           ;mainP2.c: 134:             case 0:
   462                           
   463                           
   464                           ;mainP2.c: 135:                 PORTBbits.RB7 = 0;
   465  028B  1386               	bcf	6,7	;volatile
   466                           
   467                           ;mainP2.c: 137:                 if(T1CONbits.TMR1ON){
   468  028C  1C10               	btfss	16,0	;volatile
   469  028D  2A8F               	goto	u761
   470  028E  2A90               	goto	u760
   471  028F                     u761:
   472  028F  2AAC               	goto	l124
   473  0290                     u760:
   474  0290                     l2054:
   475                           
   476                           ;mainP2.c: 138:                     leer3SEG();
   477  0290  120A  118A  22C5  120A  118A  	fcall	_leer3SEG
   478  0295  2AAC               	goto	l2070
   479  0296                     l2056:
   480                           
   481                           ;mainP2.c: 143:                 AnalogReadServo();
   482  0296  120A  118A  2022  120A  118A  	fcall	_AnalogReadServo
   483  029B                     l2058:
   484                           
   485                           ;mainP2.c: 144:                 PORTBbits.RB7 = 1;
   486  029B  1283               	bcf	3,5	;RP0=0, select bank0
   487  029C  1303               	bcf	3,6	;RP1=0, select bank0
   488  029D  1786               	bsf	6,7	;volatile
   489  029E                     l2060:
   490                           
   491                           ;mainP2.c: 145:                 UART.indicador = 0;
   492  029E  1031               	bcf	_UART,0
   493  029F                     l2062:
   494                           
   495                           ;mainP2.c: 147:                 if(SERVOS.guardar){
   496  029F  1FB2               	btfss	_SERVOS,7
   497  02A0  2AA2               	goto	u771
   498  02A1  2AA3               	goto	u770
   499  02A2                     u771:
   500  02A2  2AAC               	goto	l124
   501  02A3                     u770:
   502  02A3                     l2064:
   503                           
   504                           ;mainP2.c: 148:                     guardar3SEG();
   505  02A3  120A  118A  22EA  120A  118A  	fcall	_guardar3SEG
   506  02A8                     l2066:
   507                           
   508                           ;mainP2.c: 149:                     SERVOS.guardar = 0;
   509  02A8  1283               	bcf	3,5	;RP0=0, select bank0
   510  02A9  1303               	bcf	3,6	;RP1=0, select bank0
   511  02AA  13B2               	bcf	_SERVOS,7
   512  02AB  2AAC               	goto	l2070
   513  02AC                     l124:
   514  02AC                     l2070:
   515  02AC  1283               	bcf	3,5	;RP0=0, select bank0
   516  02AD  1303               	bcf	3,6	;RP1=0, select bank0
   517  02AE  0E32               	swapf	_SERVOS,w
   518  02AF  00A8               	movwf	??_main
   519  02B0  0CA8               	rrf	??_main,f
   520  02B1  0C28               	rrf	??_main,w
   521  02B2  3901               	andlw	1
   522  02B3  00A9               	movwf	??_main+1
   523  02B4  01AA               	clrf	??_main+2
   524                           
   525                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   526                           ; Switch size 1, requested type "simple"
   527                           ; Number of cases is 1, Range of values is 0 to 0
   528                           ; switch strategies available:
   529                           ; Name         Instructions Cycles
   530                           ; simple_byte            4     3 (average)
   531                           ; direct_byte           11     8 (fixed)
   532                           ; jumptable            260     6 (fixed)
   533                           ;	Chosen strategy is simple_byte
   534  02B5  082A               	movf	??_main+2,w
   535  02B6  3A00               	xorlw	0	; case 0
   536  02B7  1903               	skipnz
   537  02B8  2ABA               	goto	l2216
   538  02B9  2AAC               	goto	l2070
   539  02BA                     l2216:
   540                           
   541                           ; Switch size 1, requested type "simple"
   542                           ; Number of cases is 2, Range of values is 0 to 1
   543                           ; switch strategies available:
   544                           ; Name         Instructions Cycles
   545                           ; simple_byte            7     4 (average)
   546                           ; direct_byte           14     8 (fixed)
   547                           ; jumptable            260     6 (fixed)
   548                           ;	Chosen strategy is simple_byte
   549  02BA  0829               	movf	??_main+1,w
   550  02BB  3A00               	xorlw	0	; case 0
   551  02BC  1903               	skipnz
   552  02BD  2A8B               	goto	l125
   553  02BE  3A01               	xorlw	1	; case 1
   554  02BF  1903               	skipnz
   555  02C0  2A96               	goto	l2056
   556  02C1  2AAC               	goto	l2070
   557  02C2  120A  118A  280E   	ljmp	start
   558  02C5                     __end_of_main:
   559                           
   560                           	psect	text1
   561  02C5                     __ptext1:	
   562 ;; *************** function _leer3SEG *****************
   563 ;; Defined at:
   564 ;;		line 428 in file "mainP2.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;		None
   567 ;; Auto vars:     Size  Location     Type
   568 ;;		None
   569 ;; Return value:  Size  Location     Type
   570 ;;                  1    wreg      void 
   571 ;; Registers used:
   572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   578 ;;      Params:         0       0       0       0       0
   579 ;;      Locals:         0       0       0       0       0
   580 ;;      Temps:          0       2       0       0       0
   581 ;;      Totals:         0       2       0       0       0
   582 ;;Total ram usage:        2 bytes
   583 ;; Hardware stack levels used:    1
   584 ;; Hardware stack levels required when called:    4
   585 ;; This function calls:
   586 ;;		_leerSERVOS
   587 ;; This function is called by:
   588 ;;		_main
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           
   593                           ;psect for function _leer3SEG
   594  02C5                     _leer3SEG:
   595  02C5                     l1972:	
   596                           ;incstack = 0
   597                           ; Regs used in _leer3SEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   598                           
   599                           
   600                           ;mainP2.c: 429:     switch(posicion){
   601  02C5  2ADA               	goto	l1980
   602  02C6                     l219:	
   603                           ;mainP2.c: 456:         case 13:
   604                           
   605                           
   606                           ;mainP2.c: 457:             T1CONbits.TMR1ON = 0;
   607  02C6  1010               	bcf	16,0	;volatile
   608  02C7                     l1974:
   609                           
   610                           ;mainP2.c: 458:             posicion = 0;
   611  02C7  01AB               	clrf	_posicion
   612                           
   613                           ;mainP2.c: 459:             PORTE = 0;
   614  02C8  0189               	clrf	9	;volatile
   615                           
   616                           ;mainP2.c: 460:             break;
   617  02C9  2AE9               	goto	l222
   618  02CA                     l1976:
   619                           
   620                           ;mainP2.c: 462:             leerSERVOS(4*posicion);
   621  02CA  082B               	movf	_posicion,w
   622  02CB  00A5               	movwf	??_leer3SEG
   623  02CC  3001               	movlw	1
   624  02CD                     u655:
   625  02CD  1003               	clrc
   626  02CE  0DA5               	rlf	??_leer3SEG,f
   627  02CF  3EFF               	addlw	-1
   628  02D0  1D03               	skipz
   629  02D1  2ACD               	goto	u655
   630  02D2  1003               	clrc
   631  02D3  0D25               	rlf	??_leer3SEG,w
   632  02D4  120A  118A  2194  120A  118A  	fcall	_leerSERVOS
   633                           
   634                           ;mainP2.c: 463:             break;
   635  02D9  2AE9               	goto	l222
   636  02DA                     l1980:
   637  02DA  1283               	bcf	3,5	;RP0=0, select bank0
   638  02DB  1303               	bcf	3,6	;RP1=0, select bank0
   639  02DC  082B               	movf	_posicion,w
   640  02DD  00A5               	movwf	??_leer3SEG
   641  02DE  01A6               	clrf	??_leer3SEG+1
   642                           
   643                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   644                           ; Switch size 1, requested type "simple"
   645                           ; Number of cases is 1, Range of values is 0 to 0
   646                           ; switch strategies available:
   647                           ; Name         Instructions Cycles
   648                           ; simple_byte            4     3 (average)
   649                           ; direct_byte           11     8 (fixed)
   650                           ; jumptable            260     6 (fixed)
   651                           ;	Chosen strategy is simple_byte
   652  02DF  0826               	movf	??_leer3SEG+1,w
   653  02E0  3A00               	xorlw	0	; case 0
   654  02E1  1903               	skipnz
   655  02E2  2AE4               	goto	l2218
   656  02E3  2ACA               	goto	l1976
   657  02E4                     l2218:
   658                           
   659                           ; Switch size 1, requested type "simple"
   660                           ; Number of cases is 1, Range of values is 13 to 13
   661                           ; switch strategies available:
   662                           ; Name         Instructions Cycles
   663                           ; simple_byte            4     3 (average)
   664                           ; direct_byte           14    11 (fixed)
   665                           ; jumptable            263     9 (fixed)
   666                           ;	Chosen strategy is simple_byte
   667  02E4  0825               	movf	??_leer3SEG,w
   668  02E5  3A0D               	xorlw	13	; case 13
   669  02E6  1903               	skipnz
   670  02E7  2AC6               	goto	l219
   671  02E8  2ACA               	goto	l1976
   672  02E9                     l222:
   673  02E9  0008               	return
   674  02EA                     __end_of_leer3SEG:
   675                           
   676                           	psect	text2
   677  0194                     __ptext2:	
   678 ;; *************** function _leerSERVOS *****************
   679 ;; Defined at:
   680 ;;		line 360 in file "mainP2.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;  desfase         1    wreg     unsigned char 
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  desfase         1    3[BANK0 ] unsigned char 
   685 ;;  n               1    4[BANK0 ] unsigned char 
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   695 ;;      Params:         0       0       0       0       0
   696 ;;      Locals:         0       2       0       0       0
   697 ;;      Temps:          0       2       0       0       0
   698 ;;      Totals:         0       4       0       0       0
   699 ;;Total ram usage:        4 bytes
   700 ;; Hardware stack levels used:    1
   701 ;; Hardware stack levels required when called:    3
   702 ;; This function calls:
   703 ;;		_leerposiciones
   704 ;; This function is called by:
   705 ;;		_leer3SEG
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           
   710                           ;psect for function _leerSERVOS
   711  0194                     _leerSERVOS:
   712                           
   713                           ;incstack = 0
   714                           ; Regs used in _leerSERVOS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   715                           ;leerSERVOS@desfase stored from wreg
   716  0194  1283               	bcf	3,5	;RP0=0, select bank0
   717  0195  1303               	bcf	3,6	;RP1=0, select bank0
   718  0196  00A3               	movwf	leerSERVOS@desfase
   719  0197                     l1854:
   720                           
   721                           ;mainP2.c: 361:     for(uint8_t n=0;n<=3; n++){
   722  0197  01A4               	clrf	leerSERVOS@n
   723  0198  29CD               	goto	l1870
   724  0199                     l1860:
   725  0199  0823               	movf	leerSERVOS@desfase,w
   726  019A  0724               	addwf	leerSERVOS@n,w
   727  019B  120A  118A  232C  120A  118A  	fcall	_leerposiciones
   728  01A0  1283               	bcf	3,5	;RP0=0, select bank0
   729  01A1  1303               	bcf	3,6	;RP1=0, select bank0
   730  01A2  00A1               	movwf	??_leerSERVOS
   731  01A3  0821               	movf	??_leerSERVOS,w
   732  01A4  00B0               	movwf	_POT1
   733                           
   734                           ;mainP2.c: 365:                 break;
   735  01A5  29E3               	goto	l1872
   736  01A6                     l1862:
   737  01A6  0823               	movf	leerSERVOS@desfase,w
   738  01A7  0724               	addwf	leerSERVOS@n,w
   739  01A8  120A  118A  232C  120A  118A  	fcall	_leerposiciones
   740  01AD  1283               	bcf	3,5	;RP0=0, select bank0
   741  01AE  1303               	bcf	3,6	;RP1=0, select bank0
   742  01AF  00A1               	movwf	??_leerSERVOS
   743  01B0  0821               	movf	??_leerSERVOS,w
   744  01B1  00AF               	movwf	_POT2
   745                           
   746                           ;mainP2.c: 367:                 break;
   747  01B2  29E3               	goto	l1872
   748  01B3                     l1864:
   749  01B3  0823               	movf	leerSERVOS@desfase,w
   750  01B4  0724               	addwf	leerSERVOS@n,w
   751  01B5  120A  118A  232C  120A  118A  	fcall	_leerposiciones
   752  01BA  1283               	bcf	3,5	;RP0=0, select bank0
   753  01BB  1303               	bcf	3,6	;RP1=0, select bank0
   754  01BC  00A1               	movwf	??_leerSERVOS
   755  01BD  0821               	movf	??_leerSERVOS,w
   756  01BE  00AE               	movwf	_POT3
   757                           
   758                           ;mainP2.c: 369:                 break;
   759  01BF  29E3               	goto	l1872
   760  01C0                     l1866:
   761  01C0  0823               	movf	leerSERVOS@desfase,w
   762  01C1  0724               	addwf	leerSERVOS@n,w
   763  01C2  120A  118A  232C  120A  118A  	fcall	_leerposiciones
   764  01C7  1283               	bcf	3,5	;RP0=0, select bank0
   765  01C8  1303               	bcf	3,6	;RP1=0, select bank0
   766  01C9  00A1               	movwf	??_leerSERVOS
   767  01CA  0821               	movf	??_leerSERVOS,w
   768  01CB  00AD               	movwf	_POT4
   769                           
   770                           ;mainP2.c: 371:                 break;
   771  01CC  29E3               	goto	l1872
   772  01CD                     l1870:
   773  01CD  0824               	movf	leerSERVOS@n,w
   774  01CE  00A1               	movwf	??_leerSERVOS
   775  01CF  01A2               	clrf	??_leerSERVOS+1
   776                           
   777                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   778                           ; Switch size 1, requested type "simple"
   779                           ; Number of cases is 1, Range of values is 0 to 0
   780                           ; switch strategies available:
   781                           ; Name         Instructions Cycles
   782                           ; simple_byte            4     3 (average)
   783                           ; direct_byte           11     8 (fixed)
   784                           ; jumptable            260     6 (fixed)
   785                           ;	Chosen strategy is simple_byte
   786  01D0  0822               	movf	??_leerSERVOS+1,w
   787  01D1  3A00               	xorlw	0	; case 0
   788  01D2  1903               	skipnz
   789  01D3  29D5               	goto	l2220
   790  01D4  29E3               	goto	l1872
   791  01D5                     l2220:
   792                           
   793                           ; Switch size 1, requested type "simple"
   794                           ; Number of cases is 4, Range of values is 0 to 3
   795                           ; switch strategies available:
   796                           ; Name         Instructions Cycles
   797                           ; simple_byte           13     7 (average)
   798                           ; direct_byte           20     8 (fixed)
   799                           ; jumptable            260     6 (fixed)
   800                           ;	Chosen strategy is simple_byte
   801  01D5  0821               	movf	??_leerSERVOS,w
   802  01D6  3A00               	xorlw	0	; case 0
   803  01D7  1903               	skipnz
   804  01D8  2999               	goto	l1860
   805  01D9  3A01               	xorlw	1	; case 1
   806  01DA  1903               	skipnz
   807  01DB  29A6               	goto	l1862
   808  01DC  3A03               	xorlw	3	; case 2
   809  01DD  1903               	skipnz
   810  01DE  29B3               	goto	l1864
   811  01DF  3A01               	xorlw	1	; case 3
   812  01E0  1903               	skipnz
   813  01E1  29C0               	goto	l1866
   814  01E2  29E3               	goto	l1872
   815  01E3                     l1872:
   816                           
   817                           ;mainP2.c: 373:     }
   818  01E3  3001               	movlw	1
   819  01E4  00A1               	movwf	??_leerSERVOS
   820  01E5  0821               	movf	??_leerSERVOS,w
   821  01E6  07A4               	addwf	leerSERVOS@n,f
   822  01E7                     l1874:
   823  01E7  3004               	movlw	4
   824  01E8  0224               	subwf	leerSERVOS@n,w
   825  01E9  1C03               	skipc
   826  01EA  29EC               	goto	u641
   827  01EB  29ED               	goto	u640
   828  01EC                     u641:
   829  01EC  29CD               	goto	l1870
   830  01ED                     u640:
   831  01ED                     l208:
   832  01ED  0008               	return
   833  01EE                     __end_of_leerSERVOS:
   834                           
   835                           	psect	text3
   836  032C                     __ptext3:	
   837 ;; *************** function _leerposiciones *****************
   838 ;; Defined at:
   839 ;;		line 353 in file "mainP2.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;  direccion       1    wreg     unsigned char 
   842 ;; Auto vars:     Size  Location     Type
   843 ;;  direccion       1    0[BANK0 ] unsigned char 
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      unsigned char 
   846 ;; Registers used:
   847 ;;		wreg
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   853 ;;      Params:         0       0       0       0       0
   854 ;;      Locals:         0       1       0       0       0
   855 ;;      Temps:          0       0       0       0       0
   856 ;;      Totals:         0       1       0       0       0
   857 ;;Total ram usage:        1 bytes
   858 ;; Hardware stack levels used:    1
   859 ;; Hardware stack levels required when called:    2
   860 ;; This function calls:
   861 ;;		Nothing
   862 ;; This function is called by:
   863 ;;		_leerSERVOS
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           
   868                           ;psect for function _leerposiciones
   869  032C                     _leerposiciones:
   870                           
   871                           ;incstack = 0
   872                           ; Regs used in _leerposiciones: [wreg]
   873                           ;leerposiciones@direccion stored from wreg
   874  032C  1283               	bcf	3,5	;RP0=0, select bank0
   875  032D  1303               	bcf	3,6	;RP1=0, select bank0
   876  032E  00A0               	movwf	leerposiciones@direccion
   877  032F                     l1818:
   878                           
   879                           ;mainP2.c: 354:     EEADR = direccion;
   880  032F  0820               	movf	leerposiciones@direccion,w
   881  0330  1283               	bcf	3,5	;RP0=0, select bank2
   882  0331  1703               	bsf	3,6	;RP1=1, select bank2
   883  0332  008D               	movwf	13	;volatile
   884  0333                     l1820:
   885                           
   886                           ;mainP2.c: 355:     EECON1bits.EEPGD = 0;
   887  0333  1683               	bsf	3,5	;RP0=1, select bank3
   888  0334  1703               	bsf	3,6	;RP1=1, select bank3
   889  0335  138C               	bcf	12,7	;volsfr
   890  0336                     l1822:
   891                           
   892                           ;mainP2.c: 356:     EECON1bits.RD = 1;
   893  0336  140C               	bsf	12,0	;volsfr
   894                           
   895                           ;mainP2.c: 357:     return EEDAT;
   896  0337  1283               	bcf	3,5	;RP0=0, select bank2
   897  0338  1703               	bsf	3,6	;RP1=1, select bank2
   898  0339  080C               	movf	12,w	;volatile
   899  033A                     l197:
   900  033A  0008               	return
   901  033B                     __end_of_leerposiciones:
   902                           
   903                           	psect	text4
   904  02EA                     __ptext4:	
   905 ;; *************** function _guardar3SEG *****************
   906 ;; Defined at:
   907 ;;		line 376 in file "mainP2.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;		None
   910 ;; Auto vars:     Size  Location     Type
   911 ;;		None
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      void 
   914 ;; Registers used:
   915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   921 ;;      Params:         0       0       0       0       0
   922 ;;      Locals:         0       0       0       0       0
   923 ;;      Temps:          0       2       0       0       0
   924 ;;      Totals:         0       2       0       0       0
   925 ;;Total ram usage:        2 bytes
   926 ;; Hardware stack levels used:    1
   927 ;; Hardware stack levels required when called:    4
   928 ;; This function calls:
   929 ;;		_guardarservos
   930 ;; This function is called by:
   931 ;;		_main
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           
   936                           ;psect for function _guardar3SEG
   937  02EA                     _guardar3SEG:
   938  02EA                     l2038:	
   939                           ;incstack = 0
   940                           ; Regs used in _guardar3SEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   941                           
   942                           
   943                           ;mainP2.c: 377:     switch(posicion){
   944  02EA  2AFF               	goto	l2046
   945  02EB                     l212:	
   946                           ;mainP2.c: 417:         case 13:
   947                           
   948                           
   949                           ;mainP2.c: 418:             T1CONbits.TMR1ON = 0;
   950  02EB  1010               	bcf	16,0	;volatile
   951  02EC                     l2040:
   952                           
   953                           ;mainP2.c: 419:             posicion = 0;
   954  02EC  01AB               	clrf	_posicion
   955                           
   956                           ;mainP2.c: 420:             PORTE = 0;
   957  02ED  0189               	clrf	9	;volatile
   958                           
   959                           ;mainP2.c: 421:             break;
   960  02EE  2B0E               	goto	l215
   961  02EF                     l2042:
   962                           
   963                           ;mainP2.c: 423:             guardarservos(4*posicion);
   964  02EF  082B               	movf	_posicion,w
   965  02F0  00A6               	movwf	??_guardar3SEG
   966  02F1  3001               	movlw	1
   967  02F2                     u755:
   968  02F2  1003               	clrc
   969  02F3  0DA6               	rlf	??_guardar3SEG,f
   970  02F4  3EFF               	addlw	-1
   971  02F5  1D03               	skipz
   972  02F6  2AF2               	goto	u755
   973  02F7  1003               	clrc
   974  02F8  0D26               	rlf	??_guardar3SEG,w
   975  02F9  120A  118A  223E  120A  118A  	fcall	_guardarservos
   976                           
   977                           ;mainP2.c: 424:             break;
   978  02FE  2B0E               	goto	l215
   979  02FF                     l2046:
   980  02FF  1283               	bcf	3,5	;RP0=0, select bank0
   981  0300  1303               	bcf	3,6	;RP1=0, select bank0
   982  0301  082B               	movf	_posicion,w
   983  0302  00A6               	movwf	??_guardar3SEG
   984  0303  01A7               	clrf	??_guardar3SEG+1
   985                           
   986                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   987                           ; Switch size 1, requested type "simple"
   988                           ; Number of cases is 1, Range of values is 0 to 0
   989                           ; switch strategies available:
   990                           ; Name         Instructions Cycles
   991                           ; simple_byte            4     3 (average)
   992                           ; direct_byte           11     8 (fixed)
   993                           ; jumptable            260     6 (fixed)
   994                           ;	Chosen strategy is simple_byte
   995  0304  0827               	movf	??_guardar3SEG+1,w
   996  0305  3A00               	xorlw	0	; case 0
   997  0306  1903               	skipnz
   998  0307  2B09               	goto	l2222
   999  0308  2AEF               	goto	l2042
  1000  0309                     l2222:
  1001                           
  1002                           ; Switch size 1, requested type "simple"
  1003                           ; Number of cases is 1, Range of values is 13 to 13
  1004                           ; switch strategies available:
  1005                           ; Name         Instructions Cycles
  1006                           ; simple_byte            4     3 (average)
  1007                           ; direct_byte           14    11 (fixed)
  1008                           ; jumptable            263     9 (fixed)
  1009                           ;	Chosen strategy is simple_byte
  1010  0309  0826               	movf	??_guardar3SEG,w
  1011  030A  3A0D               	xorlw	13	; case 13
  1012  030B  1903               	skipnz
  1013  030C  2AEB               	goto	l212
  1014  030D  2AEF               	goto	l2042
  1015  030E                     l215:
  1016  030E  0008               	return
  1017  030F                     __end_of_guardar3SEG:
  1018                           
  1019                           	psect	text5
  1020  023E                     __ptext5:	
  1021 ;; *************** function _guardarservos *****************
  1022 ;; Defined at:
  1023 ;;		line 336 in file "mainP2.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;  desfase         1    wreg     unsigned char 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  desfase         1    4[BANK0 ] unsigned char 
  1028 ;;  n               1    5[BANK0 ] unsigned char 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1038 ;;      Params:         0       0       0       0       0
  1039 ;;      Locals:         0       2       0       0       0
  1040 ;;      Temps:          0       2       0       0       0
  1041 ;;      Totals:         0       4       0       0       0
  1042 ;;Total ram usage:        4 bytes
  1043 ;; Hardware stack levels used:    1
  1044 ;; Hardware stack levels required when called:    3
  1045 ;; This function calls:
  1046 ;;		_guardarposiciones
  1047 ;; This function is called by:
  1048 ;;		_guardar3SEG
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           
  1053                           ;psect for function _guardarservos
  1054  023E                     _guardarservos:
  1055                           
  1056                           ;incstack = 0
  1057                           ; Regs used in _guardarservos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1058                           ;guardarservos@desfase stored from wreg
  1059  023E  1283               	bcf	3,5	;RP0=0, select bank0
  1060  023F  1303               	bcf	3,6	;RP1=0, select bank0
  1061  0240  00A4               	movwf	guardarservos@desfase
  1062  0241                     l1826:
  1063                           
  1064                           ;mainP2.c: 337:     for(uint8_t n=0;n<=3;n++){
  1065  0241  01A5               	clrf	guardarservos@n
  1066  0242  2A57               	goto	l1842
  1067  0243                     l1832:
  1068  0243  0830               	movf	_POT1,w
  1069  0244  00A2               	movwf	??_guardarservos
  1070  0245  0822               	movf	??_guardarservos,w
  1071  0246  00AC               	movwf	_datEEPROM
  1072                           
  1073                           ;mainP2.c: 341:                 break;
  1074  0247  2A6D               	goto	l1844
  1075  0248                     l1834:
  1076  0248  082F               	movf	_POT2,w
  1077  0249  00A2               	movwf	??_guardarservos
  1078  024A  0822               	movf	??_guardarservos,w
  1079  024B  00AC               	movwf	_datEEPROM
  1080                           
  1081                           ;mainP2.c: 343:                 break;
  1082  024C  2A6D               	goto	l1844
  1083  024D                     l1836:
  1084  024D  082E               	movf	_POT3,w
  1085  024E  00A2               	movwf	??_guardarservos
  1086  024F  0822               	movf	??_guardarservos,w
  1087  0250  00AC               	movwf	_datEEPROM
  1088                           
  1089                           ;mainP2.c: 345:                 break;
  1090  0251  2A6D               	goto	l1844
  1091  0252                     l1838:
  1092  0252  082D               	movf	_POT4,w
  1093  0253  00A2               	movwf	??_guardarservos
  1094  0254  0822               	movf	??_guardarservos,w
  1095  0255  00AC               	movwf	_datEEPROM
  1096                           
  1097                           ;mainP2.c: 347:                 break;
  1098  0256  2A6D               	goto	l1844
  1099  0257                     l1842:
  1100  0257  0825               	movf	guardarservos@n,w
  1101  0258  00A2               	movwf	??_guardarservos
  1102  0259  01A3               	clrf	??_guardarservos+1
  1103                           
  1104                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1105                           ; Switch size 1, requested type "simple"
  1106                           ; Number of cases is 1, Range of values is 0 to 0
  1107                           ; switch strategies available:
  1108                           ; Name         Instructions Cycles
  1109                           ; simple_byte            4     3 (average)
  1110                           ; direct_byte           11     8 (fixed)
  1111                           ; jumptable            260     6 (fixed)
  1112                           ;	Chosen strategy is simple_byte
  1113  025A  0823               	movf	??_guardarservos+1,w
  1114  025B  3A00               	xorlw	0	; case 0
  1115  025C  1903               	skipnz
  1116  025D  2A5F               	goto	l2224
  1117  025E  2A6D               	goto	l1844
  1118  025F                     l2224:
  1119                           
  1120                           ; Switch size 1, requested type "simple"
  1121                           ; Number of cases is 4, Range of values is 0 to 3
  1122                           ; switch strategies available:
  1123                           ; Name         Instructions Cycles
  1124                           ; simple_byte           13     7 (average)
  1125                           ; direct_byte           20     8 (fixed)
  1126                           ; jumptable            260     6 (fixed)
  1127                           ;	Chosen strategy is simple_byte
  1128  025F  0822               	movf	??_guardarservos,w
  1129  0260  3A00               	xorlw	0	; case 0
  1130  0261  1903               	skipnz
  1131  0262  2A43               	goto	l1832
  1132  0263  3A01               	xorlw	1	; case 1
  1133  0264  1903               	skipnz
  1134  0265  2A48               	goto	l1834
  1135  0266  3A03               	xorlw	3	; case 2
  1136  0267  1903               	skipnz
  1137  0268  2A4D               	goto	l1836
  1138  0269  3A01               	xorlw	1	; case 3
  1139  026A  1903               	skipnz
  1140  026B  2A52               	goto	l1838
  1141  026C  2A6D               	goto	l1844
  1142  026D                     l1844:
  1143                           
  1144                           ;mainP2.c: 349:         guardarposiciones(datEEPROM,n+desfase);
  1145  026D  0824               	movf	guardarservos@desfase,w
  1146  026E  0725               	addwf	guardarservos@n,w
  1147  026F  00A2               	movwf	??_guardarservos
  1148  0270  0822               	movf	??_guardarservos,w
  1149  0271  00A0               	movwf	guardarposiciones@direccion
  1150  0272  082C               	movf	_datEEPROM,w
  1151  0273  120A  118A  230F  120A  118A  	fcall	_guardarposiciones
  1152  0278                     l1846:
  1153                           
  1154                           ;mainP2.c: 350:     }
  1155  0278  3001               	movlw	1
  1156  0279  1283               	bcf	3,5	;RP0=0, select bank0
  1157  027A  1303               	bcf	3,6	;RP1=0, select bank0
  1158  027B  00A2               	movwf	??_guardarservos
  1159  027C  0822               	movf	??_guardarservos,w
  1160  027D  07A5               	addwf	guardarservos@n,f
  1161  027E                     l1848:
  1162  027E  3004               	movlw	4
  1163  027F  0225               	subwf	guardarservos@n,w
  1164  0280  1C03               	skipc
  1165  0281  2A83               	goto	u631
  1166  0282  2A84               	goto	u630
  1167  0283                     u631:
  1168  0283  2A57               	goto	l1842
  1169  0284                     u630:
  1170  0284                     l194:
  1171  0284  0008               	return
  1172  0285                     __end_of_guardarservos:
  1173                           
  1174                           	psect	text6
  1175  030F                     __ptext6:	
  1176 ;; *************** function _guardarposiciones *****************
  1177 ;; Defined at:
  1178 ;;		line 322 in file "mainP2.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  guardar         1    wreg     unsigned char 
  1181 ;;  direccion       1    0[BANK0 ] unsigned char 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  guardar         1    1[BANK0 ] unsigned char 
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1193 ;;      Params:         0       1       0       0       0
  1194 ;;      Locals:         0       1       0       0       0
  1195 ;;      Temps:          0       0       0       0       0
  1196 ;;      Totals:         0       2       0       0       0
  1197 ;;Total ram usage:        2 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; Hardware stack levels required when called:    2
  1200 ;; This function calls:
  1201 ;;		Nothing
  1202 ;; This function is called by:
  1203 ;;		_guardarservos
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           
  1208                           ;psect for function _guardarposiciones
  1209  030F                     _guardarposiciones:
  1210                           
  1211                           ;incstack = 0
  1212                           ; Regs used in _guardarposiciones: [wreg]
  1213                           ;guardarposiciones@guardar stored from wreg
  1214  030F  1283               	bcf	3,5	;RP0=0, select bank0
  1215  0310  1303               	bcf	3,6	;RP1=0, select bank0
  1216  0311  00A1               	movwf	guardarposiciones@guardar
  1217  0312                     l1808:
  1218                           
  1219                           ;mainP2.c: 323:     EEADR = direccion;
  1220  0312  0820               	movf	guardarposiciones@direccion,w
  1221  0313  1283               	bcf	3,5	;RP0=0, select bank2
  1222  0314  1703               	bsf	3,6	;RP1=1, select bank2
  1223  0315  008D               	movwf	13	;volatile
  1224                           
  1225                           ;mainP2.c: 324:     EEDAT = guardar;
  1226  0316  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0317  1303               	bcf	3,6	;RP1=0, select bank0
  1228  0318  0821               	movf	guardarposiciones@guardar,w
  1229  0319  1283               	bcf	3,5	;RP0=0, select bank2
  1230  031A  1703               	bsf	3,6	;RP1=1, select bank2
  1231  031B  008C               	movwf	12	;volatile
  1232  031C                     l1810:
  1233                           
  1234                           ;mainP2.c: 325:     EECON1bits.WREN = 1;
  1235  031C  1683               	bsf	3,5	;RP0=1, select bank3
  1236  031D  1703               	bsf	3,6	;RP1=1, select bank3
  1237  031E  150C               	bsf	12,2	;volsfr
  1238  031F                     l1812:
  1239                           
  1240                           ;mainP2.c: 326:     INTCONbits.GIE = 0;
  1241  031F  138B               	bcf	11,7	;volatile
  1242                           
  1243                           ;mainP2.c: 328:     EECON2 = 0X55;
  1244  0320  3055               	movlw	85
  1245  0321  008D               	movwf	13	;volsfr
  1246                           
  1247                           ;mainP2.c: 329:     EECON2 = 0XAA;
  1248  0322  30AA               	movlw	170
  1249  0323  008D               	movwf	13	;volsfr
  1250  0324                     l1814:
  1251                           
  1252                           ;mainP2.c: 330:     EECON1bits.WR = 1;
  1253  0324  148C               	bsf	12,1	;volsfr
  1254  0325                     l1816:
  1255                           
  1256                           ;mainP2.c: 331:     INTCONbits.GIE = 1;
  1257  0325  178B               	bsf	11,7	;volatile
  1258  0326                     l180:	
  1259                           ;mainP2.c: 332:     while(EECON1bits.WR);
  1260                           
  1261  0326  188C               	btfsc	12,1	;volsfr
  1262  0327  2B29               	goto	u621
  1263  0328  2B2A               	goto	u620
  1264  0329                     u621:
  1265  0329  2B26               	goto	l180
  1266  032A                     u620:
  1267  032A                     l182:
  1268                           
  1269                           ;mainP2.c: 333:     EECON1bits.WREN = 0;
  1270  032A  110C               	bcf	12,2	;volsfr
  1271  032B                     l183:
  1272  032B  0008               	return
  1273  032C                     __end_of_guardarposiciones:
  1274                           
  1275                           	psect	text7
  1276  0135                     __ptext7:	
  1277 ;; *************** function _configuraciones *****************
  1278 ;; Defined at:
  1279 ;;		line 161 in file "mainP2.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;		None
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;		None
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, status,2, status,0
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1293 ;;      Params:         0       0       0       0       0
  1294 ;;      Locals:         0       0       0       0       0
  1295 ;;      Temps:          0       0       0       0       0
  1296 ;;      Totals:         0       0       0       0       0
  1297 ;;Total ram usage:        0 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:    2
  1300 ;; This function calls:
  1301 ;;		Nothing
  1302 ;; This function is called by:
  1303 ;;		_main
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           
  1308                           ;psect for function _configuraciones
  1309  0135                     _configuraciones:
  1310  0135                     l1880:	
  1311                           ;incstack = 0
  1312                           ; Regs used in _configuraciones: [wreg+status,2+status,0]
  1313                           
  1314                           
  1315                           ;mainP2.c: 163:     ANSEL = 0X0F;
  1316  0135  300F               	movlw	15
  1317  0136  1683               	bsf	3,5	;RP0=1, select bank3
  1318  0137  1703               	bsf	3,6	;RP1=1, select bank3
  1319  0138  0088               	movwf	8	;volatile
  1320  0139                     l1882:
  1321                           
  1322                           ;mainP2.c: 164:     ANSELH = 0X00;
  1323  0139  0189               	clrf	9	;volatile
  1324  013A                     l1884:
  1325                           
  1326                           ;mainP2.c: 165:     TRISA = 0X0F;
  1327  013A  300F               	movlw	15
  1328  013B  1683               	bsf	3,5	;RP0=1, select bank1
  1329  013C  1303               	bcf	3,6	;RP1=0, select bank1
  1330  013D  0085               	movwf	5	;volatile
  1331  013E                     l1886:
  1332                           
  1333                           ;mainP2.c: 166:     TRISB = 0X07;
  1334  013E  3007               	movlw	7
  1335  013F  0086               	movwf	6	;volatile
  1336  0140                     l1888:
  1337                           
  1338                           ;mainP2.c: 167:     TRISC = 0X80;
  1339  0140  3080               	movlw	128
  1340  0141  0087               	movwf	7	;volatile
  1341                           
  1342                           ;mainP2.c: 168:     TRISD = 0X00;
  1343  0142  0188               	clrf	8	;volatile
  1344                           
  1345                           ;mainP2.c: 169:     TRISE = 0X00;
  1346  0143  0189               	clrf	9	;volatile
  1347                           
  1348                           ;mainP2.c: 170:     PORTA = 0X00;
  1349  0144  1283               	bcf	3,5	;RP0=0, select bank0
  1350  0145  1303               	bcf	3,6	;RP1=0, select bank0
  1351  0146  0185               	clrf	5	;volatile
  1352                           
  1353                           ;mainP2.c: 171:     PORTB = 0X00;
  1354  0147  0186               	clrf	6	;volatile
  1355                           
  1356                           ;mainP2.c: 172:     PORTC = 0X00;
  1357  0148  0187               	clrf	7	;volatile
  1358                           
  1359                           ;mainP2.c: 173:     PORTD = 0X00;
  1360  0149  0188               	clrf	8	;volatile
  1361                           
  1362                           ;mainP2.c: 174:     PORTE = 0X00;
  1363  014A  0189               	clrf	9	;volatile
  1364                           
  1365                           ;mainP2.c: 175:     posicion = 0;
  1366  014B  01AB               	clrf	_posicion
  1367  014C                     l1890:
  1368                           
  1369                           ;mainP2.c: 177:     OSCCONbits.IRCF = 0b111;
  1370  014C  3070               	movlw	112
  1371  014D  1683               	bsf	3,5	;RP0=1, select bank1
  1372  014E  1303               	bcf	3,6	;RP1=0, select bank1
  1373  014F  048F               	iorwf	15,f	;volatile
  1374  0150                     l1892:
  1375                           
  1376                           ;mainP2.c: 178:     OSCCONbits.SCS = 0b1;
  1377  0150  140F               	bsf	15,0	;volatile
  1378  0151                     l1894:
  1379                           
  1380                           ;mainP2.c: 181:     T1CONbits.T1CKPS = 0B11;
  1381  0151  3030               	movlw	48
  1382  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1383  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1384  0154  0490               	iorwf	16,f	;volatile
  1385  0155                     l1896:
  1386                           
  1387                           ;mainP2.c: 182:     TMR1H = 0B00001011;
  1388  0155  300B               	movlw	11
  1389  0156  008F               	movwf	15	;volatile
  1390  0157                     l1898:
  1391                           
  1392                           ;mainP2.c: 183:     TMR1L = 0B11010001;
  1393  0157  30D1               	movlw	209
  1394  0158  008E               	movwf	14	;volatile
  1395  0159                     l1900:
  1396                           
  1397                           ;mainP2.c: 184:     T1CONbits.TMR1ON = 0;
  1398  0159  1010               	bcf	16,0	;volatile
  1399  015A                     l1902:
  1400                           
  1401                           ;mainP2.c: 187:     INTCONbits.TMR0IF = 0;
  1402  015A  110B               	bcf	11,2	;volatile
  1403  015B                     l1904:
  1404                           
  1405                           ;mainP2.c: 188:     INTCONbits.TMR0IE = 1;
  1406  015B  168B               	bsf	11,5	;volatile
  1407  015C                     l1906:
  1408                           
  1409                           ;mainP2.c: 189:     PIR1bits.TMR1IF = 0;
  1410  015C  100C               	bcf	12,0	;volatile
  1411  015D                     l1908:
  1412                           
  1413                           ;mainP2.c: 190:     PIE1bits.TMR1IE = 1;
  1414  015D  1683               	bsf	3,5	;RP0=1, select bank1
  1415  015E  1303               	bcf	3,6	;RP1=0, select bank1
  1416  015F  140C               	bsf	12,0	;volatile
  1417  0160                     l1910:
  1418                           
  1419                           ;mainP2.c: 191:     INTCONbits.RBIF = 0;
  1420  0160  100B               	bcf	11,0	;volatile
  1421  0161                     l1912:
  1422                           
  1423                           ;mainP2.c: 192:     INTCONbits.RBIE = 0;
  1424  0161  118B               	bcf	11,3	;volatile
  1425  0162                     l1914:
  1426                           
  1427                           ;mainP2.c: 193:     INTCONbits.PEIE = 1;
  1428  0162  170B               	bsf	11,6	;volatile
  1429  0163                     l1916:
  1430                           
  1431                           ;mainP2.c: 194:     PIE1bits.RCIE = 1;
  1432  0163  168C               	bsf	12,5	;volatile
  1433  0164                     l1918:
  1434                           
  1435                           ;mainP2.c: 195:     INTCONbits.GIE = 1;
  1436  0164  178B               	bsf	11,7	;volatile
  1437  0165                     l1920:
  1438                           
  1439                           ;mainP2.c: 198:     IOCBbits.IOCB0 = 1;
  1440  0165  1416               	bsf	22,0	;volatile
  1441  0166                     l1922:
  1442                           
  1443                           ;mainP2.c: 199:     IOCBbits.IOCB1 = 1;
  1444  0166  1496               	bsf	22,1	;volatile
  1445  0167                     l1924:
  1446                           
  1447                           ;mainP2.c: 200:     IOCBbits.IOCB2 = 1;
  1448  0167  1516               	bsf	22,2	;volatile
  1449  0168                     l1926:
  1450                           
  1451                           ;mainP2.c: 203:     ADCON0bits.ADCS = 0b10;
  1452  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1453  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1454  016A  081F               	movf	31,w	;volatile
  1455  016B  393F               	andlw	-193
  1456  016C  3880               	iorlw	128
  1457  016D  009F               	movwf	31	;volatile
  1458  016E                     l1928:
  1459                           
  1460                           ;mainP2.c: 204:     ADCON0bits.CHS = 0b0000;
  1461  016E  30C3               	movlw	-61
  1462  016F  059F               	andwf	31,f	;volatile
  1463  0170                     l1930:
  1464                           
  1465                           ;mainP2.c: 205:     ADCON0bits.GO = 0b0;
  1466  0170  109F               	bcf	31,1	;volatile
  1467  0171                     l1932:
  1468                           
  1469                           ;mainP2.c: 206:     ADCON0bits.ADON = 0b1;
  1470  0171  141F               	bsf	31,0	;volatile
  1471  0172                     l1934:
  1472                           
  1473                           ;mainP2.c: 207:     ADCON1bits.ADFM = 0b0;
  1474  0172  1683               	bsf	3,5	;RP0=1, select bank1
  1475  0173  1303               	bcf	3,6	;RP1=0, select bank1
  1476  0174  139F               	bcf	31,7	;volatile
  1477  0175                     l1936:
  1478                           
  1479                           ;mainP2.c: 208:     ADCON1bits.VCFG1 = 0b0;
  1480  0175  129F               	bcf	31,5	;volatile
  1481  0176                     l1938:
  1482                           
  1483                           ;mainP2.c: 209:     ADCON1bits.VCFG0 = 0b0;
  1484  0176  121F               	bcf	31,4	;volatile
  1485  0177                     l1940:
  1486                           
  1487                           ;mainP2.c: 212:     SPBRG = 12;
  1488  0177  300C               	movlw	12
  1489  0178  0099               	movwf	25	;volatile
  1490  0179                     l1942:
  1491                           
  1492                           ;mainP2.c: 213:     TXSTAbits.BRGH = 0;
  1493  0179  1118               	bcf	24,2	;volatile
  1494  017A                     l1944:
  1495                           
  1496                           ;mainP2.c: 214:     TXSTAbits.TXEN = 1;
  1497  017A  1698               	bsf	24,5	;volatile
  1498  017B                     l1946:
  1499                           
  1500                           ;mainP2.c: 215:     RCSTAbits.CREN = 1;
  1501  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1502  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1503  017D  1618               	bsf	24,4	;volatile
  1504  017E                     l1948:
  1505                           
  1506                           ;mainP2.c: 216:     TXSTAbits.SYNC = 0;
  1507  017E  1683               	bsf	3,5	;RP0=1, select bank1
  1508  017F  1303               	bcf	3,6	;RP1=0, select bank1
  1509  0180  1218               	bcf	24,4	;volatile
  1510  0181                     l1950:
  1511                           
  1512                           ;mainP2.c: 217:     RCSTAbits.SPEN = 1;
  1513  0181  1283               	bcf	3,5	;RP0=0, select bank0
  1514  0182  1303               	bcf	3,6	;RP1=0, select bank0
  1515  0183  1798               	bsf	24,7	;volatile
  1516  0184                     l1952:
  1517                           
  1518                           ;mainP2.c: 220:     OSCCONbits.SCS = 1;
  1519  0184  1683               	bsf	3,5	;RP0=1, select bank1
  1520  0185  1303               	bcf	3,6	;RP1=0, select bank1
  1521  0186  140F               	bsf	15,0	;volatile
  1522  0187                     l1954:
  1523                           
  1524                           ;mainP2.c: 221:     OPTION_REGbits.T0CS = 0;
  1525  0187  1281               	bcf	1,5	;volatile
  1526  0188                     l1956:
  1527                           
  1528                           ;mainP2.c: 222:     OPTION_REGbits.PSA = 0;
  1529  0188  1181               	bcf	1,3	;volatile
  1530  0189                     l1958:
  1531                           
  1532                           ;mainP2.c: 223:     OPTION_REGbits.PS2 = 0;
  1533  0189  1101               	bcf	1,2	;volatile
  1534  018A                     l1960:
  1535                           
  1536                           ;mainP2.c: 224:     OPTION_REGbits.PS1 = 1;
  1537  018A  1481               	bsf	1,1	;volatile
  1538  018B                     l1962:
  1539                           
  1540                           ;mainP2.c: 225:     OPTION_REGbits.PS0 = 1;
  1541  018B  1401               	bsf	1,0	;volatile
  1542  018C                     l1964:
  1543                           
  1544                           ;mainP2.c: 226:     INTCONbits.T0IF = 0;
  1545  018C  110B               	bcf	11,2	;volatile
  1546  018D                     l1966:
  1547                           
  1548                           ;mainP2.c: 227:     TMR0 = 131;
  1549  018D  3083               	movlw	131
  1550  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1551  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0190  0081               	movwf	1	;volatile
  1553  0191                     l1968:
  1554                           
  1555                           ;mainP2.c: 228:     SERVOS.bit1 = 0;
  1556  0191  12B2               	bcf	_SERVOS,5
  1557  0192                     l1970:
  1558                           
  1559                           ;mainP2.c: 229:     SERVOS.modo = 0;
  1560  0192  1332               	bcf	_SERVOS,6
  1561  0193                     l135:
  1562  0193  0008               	return
  1563  0194                     __end_of_configuraciones:
  1564                           
  1565                           	psect	text8
  1566  0022                     __ptext8:	
  1567 ;; *************** function _AnalogReadServo *****************
  1568 ;; Defined at:
  1569 ;;		line 269 in file "mainP2.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;		None
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;		None
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1583 ;;      Params:         0       0       0       0       0
  1584 ;;      Locals:         0       0       0       0       0
  1585 ;;      Temps:          0       2       0       0       0
  1586 ;;      Totals:         0       2       0       0       0
  1587 ;;Total ram usage:        2 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    2
  1590 ;; This function calls:
  1591 ;;		Nothing
  1592 ;; This function is called by:
  1593 ;;		_main
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           
  1598                           ;psect for function _AnalogReadServo
  1599  0022                     _AnalogReadServo:
  1600  0022                     l1986:	
  1601                           ;incstack = 0
  1602                           ; Regs used in _AnalogReadServo: [wreg-fsr0h+status,2+status,0]
  1603                           
  1604                           
  1605                           ;mainP2.c: 271:     if(!ADCON0bits.GO){
  1606  0022  1283               	bcf	3,5	;RP0=0, select bank0
  1607  0023  1303               	bcf	3,6	;RP1=0, select bank0
  1608  0024  189F               	btfsc	31,1	;volatile
  1609  0025  2827               	goto	u661
  1610  0026  2828               	goto	u660
  1611  0027                     u661:
  1612  0027  28C2               	goto	l171
  1613  0028                     u660:
  1614  0028  289F               	goto	l2032
  1615  0029                     l1990:
  1616                           
  1617                           ;mainP2.c: 274:                  POT2 = ADRESH;
  1618  0029  081E               	movf	30,w	;volatile
  1619  002A  00A0               	movwf	??_AnalogReadServo
  1620  002B  0820               	movf	??_AnalogReadServo,w
  1621  002C  00AF               	movwf	_POT2
  1622                           
  1623                           ;mainP2.c: 275:             break;
  1624  002D  28C2               	goto	l171
  1625  002E                     l1992:
  1626                           
  1627                           ;mainP2.c: 278:                 ADCON0bits.CHS = 2;
  1628  002E  081F               	movf	31,w	;volatile
  1629  002F  39C3               	andlw	-61
  1630  0030  3808               	iorlw	8
  1631  0031  009F               	movwf	31	;volatile
  1632  0032                     l1994:
  1633                           
  1634                           ;mainP2.c: 279:                 if(POT2>=160) POT2 = 160;
  1635  0032  30A0               	movlw	160
  1636  0033  022F               	subwf	_POT2,w
  1637  0034  1C03               	skipc
  1638  0035  2837               	goto	u671
  1639  0036  2838               	goto	u670
  1640  0037                     u671:
  1641  0037  283C               	goto	l157
  1642  0038                     u670:
  1643  0038                     l1996:
  1644  0038  30A0               	movlw	160
  1645  0039  00A0               	movwf	??_AnalogReadServo
  1646  003A  0820               	movf	??_AnalogReadServo,w
  1647  003B  00AF               	movwf	_POT2
  1648  003C                     l157:
  1649                           
  1650                           ;mainP2.c: 280:                 if(POT2<=10) POT2 = 10;
  1651  003C  300B               	movlw	11
  1652  003D  022F               	subwf	_POT2,w
  1653  003E  1803               	skipnc
  1654  003F  2841               	goto	u681
  1655  0040  2842               	goto	u680
  1656  0041                     u681:
  1657  0041  28C2               	goto	l171
  1658  0042                     u680:
  1659  0042                     l1998:
  1660  0042  300A               	movlw	10
  1661  0043  00A0               	movwf	??_AnalogReadServo
  1662  0044  0820               	movf	??_AnalogReadServo,w
  1663  0045  00AF               	movwf	_POT2
  1664  0046  28C2               	goto	l171
  1665  0047                     l2000:
  1666                           
  1667                           ;mainP2.c: 284:                 POT3 = ADRESH;
  1668  0047  081E               	movf	30,w	;volatile
  1669  0048  00A0               	movwf	??_AnalogReadServo
  1670  0049  0820               	movf	??_AnalogReadServo,w
  1671  004A  00AE               	movwf	_POT3
  1672                           
  1673                           ;mainP2.c: 285:             break;
  1674  004B  28C2               	goto	l171
  1675  004C                     l2002:
  1676                           
  1677                           ;mainP2.c: 288:                 ADCON0bits.CHS = 3;
  1678  004C  081F               	movf	31,w	;volatile
  1679  004D  39C3               	andlw	-61
  1680  004E  380C               	iorlw	12
  1681  004F  009F               	movwf	31	;volatile
  1682  0050                     l2004:
  1683                           
  1684                           ;mainP2.c: 289:                 if(POT3>=160) POT3 = 160;
  1685  0050  30A0               	movlw	160
  1686  0051  022E               	subwf	_POT3,w
  1687  0052  1C03               	skipc
  1688  0053  2855               	goto	u691
  1689  0054  2856               	goto	u690
  1690  0055                     u691:
  1691  0055  285A               	goto	l161
  1692  0056                     u690:
  1693  0056                     l2006:
  1694  0056  30A0               	movlw	160
  1695  0057  00A0               	movwf	??_AnalogReadServo
  1696  0058  0820               	movf	??_AnalogReadServo,w
  1697  0059  00AE               	movwf	_POT3
  1698  005A                     l161:
  1699                           
  1700                           ;mainP2.c: 290:                 if(POT3<=10) POT3 = 10;
  1701  005A  300B               	movlw	11
  1702  005B  022E               	subwf	_POT3,w
  1703  005C  1803               	skipnc
  1704  005D  285F               	goto	u701
  1705  005E  2860               	goto	u700
  1706  005F                     u701:
  1707  005F  28C2               	goto	l171
  1708  0060                     u700:
  1709  0060                     l2008:
  1710  0060  300A               	movlw	10
  1711  0061  00A0               	movwf	??_AnalogReadServo
  1712  0062  0820               	movf	??_AnalogReadServo,w
  1713  0063  00AE               	movwf	_POT3
  1714  0064  28C2               	goto	l171
  1715  0065                     l2010:
  1716                           
  1717                           ;mainP2.c: 294:                 POT4 = ADRESH;
  1718  0065  081E               	movf	30,w	;volatile
  1719  0066  00A0               	movwf	??_AnalogReadServo
  1720  0067  0820               	movf	??_AnalogReadServo,w
  1721  0068  00AD               	movwf	_POT4
  1722                           
  1723                           ;mainP2.c: 295:             break;
  1724  0069  28C2               	goto	l171
  1725  006A                     l2012:
  1726                           
  1727                           ;mainP2.c: 298:                 ADCON0bits.CHS = 0;
  1728  006A  30C3               	movlw	-61
  1729  006B  059F               	andwf	31,f	;volatile
  1730  006C                     l2014:
  1731                           
  1732                           ;mainP2.c: 299:                 if(POT4>=160) POT4 = 160;
  1733  006C  30A0               	movlw	160
  1734  006D  022D               	subwf	_POT4,w
  1735  006E  1C03               	skipc
  1736  006F  2871               	goto	u711
  1737  0070  2872               	goto	u710
  1738  0071                     u711:
  1739  0071  2876               	goto	l165
  1740  0072                     u710:
  1741  0072                     l2016:
  1742  0072  30A0               	movlw	160
  1743  0073  00A0               	movwf	??_AnalogReadServo
  1744  0074  0820               	movf	??_AnalogReadServo,w
  1745  0075  00AD               	movwf	_POT4
  1746  0076                     l165:
  1747                           
  1748                           ;mainP2.c: 300:                 if(POT4<=10) POT4 = 10;
  1749  0076  300B               	movlw	11
  1750  0077  022D               	subwf	_POT4,w
  1751  0078  1803               	skipnc
  1752  0079  287B               	goto	u721
  1753  007A  287C               	goto	u720
  1754  007B                     u721:
  1755  007B  28C2               	goto	l171
  1756  007C                     u720:
  1757  007C                     l2018:
  1758  007C  300A               	movlw	10
  1759  007D  00A0               	movwf	??_AnalogReadServo
  1760  007E  0820               	movf	??_AnalogReadServo,w
  1761  007F  00AD               	movwf	_POT4
  1762  0080  28C2               	goto	l171
  1763  0081                     l2020:
  1764                           
  1765                           ;mainP2.c: 304:                 POT1 = ADRESH;
  1766  0081  081E               	movf	30,w	;volatile
  1767  0082  00A0               	movwf	??_AnalogReadServo
  1768  0083  0820               	movf	??_AnalogReadServo,w
  1769  0084  00B0               	movwf	_POT1
  1770                           
  1771                           ;mainP2.c: 305:             break;
  1772  0085  28C2               	goto	l171
  1773  0086                     l2022:
  1774                           
  1775                           ;mainP2.c: 308:                 ADCON0bits.CHS = 1;
  1776  0086  081F               	movf	31,w	;volatile
  1777  0087  39C3               	andlw	-61
  1778  0088  3804               	iorlw	4
  1779  0089  009F               	movwf	31	;volatile
  1780  008A                     l2024:
  1781                           
  1782                           ;mainP2.c: 309:                 if(POT1>=160) POT1 = 160;
  1783  008A  30A0               	movlw	160
  1784  008B  0230               	subwf	_POT1,w
  1785  008C  1C03               	skipc
  1786  008D  288F               	goto	u731
  1787  008E  2890               	goto	u730
  1788  008F                     u731:
  1789  008F  2894               	goto	l169
  1790  0090                     u730:
  1791  0090                     l2026:
  1792  0090  30A0               	movlw	160
  1793  0091  00A0               	movwf	??_AnalogReadServo
  1794  0092  0820               	movf	??_AnalogReadServo,w
  1795  0093  00B0               	movwf	_POT1
  1796  0094                     l169:
  1797                           
  1798                           ;mainP2.c: 310:                 if(POT1<=10) POT1 = 10;
  1799  0094  300B               	movlw	11
  1800  0095  0230               	subwf	_POT1,w
  1801  0096  1803               	skipnc
  1802  0097  2899               	goto	u741
  1803  0098  289A               	goto	u740
  1804  0099                     u741:
  1805  0099  28C2               	goto	l171
  1806  009A                     u740:
  1807  009A                     l2028:
  1808  009A  300A               	movlw	10
  1809  009B  00A0               	movwf	??_AnalogReadServo
  1810  009C  0820               	movf	??_AnalogReadServo,w
  1811  009D  00B0               	movwf	_POT1
  1812  009E  28C2               	goto	l171
  1813  009F                     l2032:
  1814  009F  0832               	movf	_SERVOS,w
  1815  00A0  391F               	andlw	31
  1816  00A1  00A0               	movwf	??_AnalogReadServo
  1817  00A2  01A1               	clrf	??_AnalogReadServo+1
  1818                           
  1819                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1820                           ; Switch size 1, requested type "simple"
  1821                           ; Number of cases is 1, Range of values is 0 to 0
  1822                           ; switch strategies available:
  1823                           ; Name         Instructions Cycles
  1824                           ; simple_byte            4     3 (average)
  1825                           ; direct_byte           11     8 (fixed)
  1826                           ; jumptable            260     6 (fixed)
  1827                           ;	Chosen strategy is simple_byte
  1828  00A3  0821               	movf	??_AnalogReadServo+1,w
  1829  00A4  3A00               	xorlw	0	; case 0
  1830  00A5  1903               	skipnz
  1831  00A6  28A8               	goto	l2226
  1832  00A7  28C2               	goto	l171
  1833  00A8                     l2226:
  1834                           
  1835                           ; Switch size 1, requested type "simple"
  1836                           ; Number of cases is 8, Range of values is 0 to 10
  1837                           ; switch strategies available:
  1838                           ; Name         Instructions Cycles
  1839                           ; simple_byte           25    13 (average)
  1840                           ; direct_byte           41     8 (fixed)
  1841                           ; jumptable            260     6 (fixed)
  1842                           ;	Chosen strategy is simple_byte
  1843  00A8  0820               	movf	??_AnalogReadServo,w
  1844  00A9  3A00               	xorlw	0	; case 0
  1845  00AA  1903               	skipnz
  1846  00AB  2829               	goto	l1990
  1847  00AC  3A01               	xorlw	1	; case 1
  1848  00AD  1903               	skipnz
  1849  00AE  282E               	goto	l1992
  1850  00AF  3A02               	xorlw	2	; case 3
  1851  00B0  1903               	skipnz
  1852  00B1  2847               	goto	l2000
  1853  00B2  3A07               	xorlw	7	; case 4
  1854  00B3  1903               	skipnz
  1855  00B4  284C               	goto	l2002
  1856  00B5  3A02               	xorlw	2	; case 6
  1857  00B6  1903               	skipnz
  1858  00B7  2865               	goto	l2010
  1859  00B8  3A01               	xorlw	1	; case 7
  1860  00B9  1903               	skipnz
  1861  00BA  286A               	goto	l2012
  1862  00BB  3A0E               	xorlw	14	; case 9
  1863  00BC  1903               	skipnz
  1864  00BD  2881               	goto	l2020
  1865  00BE  3A03               	xorlw	3	; case 10
  1866  00BF  1903               	skipnz
  1867  00C0  2886               	goto	l2022
  1868  00C1  28C2               	goto	l171
  1869  00C2                     l171:
  1870  00C2  0008               	return
  1871  00C3                     __end_of_AnalogReadServo:
  1872                           
  1873                           	psect	text9
  1874  00C3                     __ptext9:	
  1875 ;; *************** function _rutInter *****************
  1876 ;; Defined at:
  1877 ;;		line 86 in file "mainP2.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;		None
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;		None
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      void 
  1884 ;; Registers used:
  1885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1891 ;;      Params:         0       0       0       0       0
  1892 ;;      Locals:         0       0       0       0       0
  1893 ;;      Temps:          4       0       0       0       0
  1894 ;;      Totals:         4       0       0       0       0
  1895 ;;Total ram usage:        4 bytes
  1896 ;; Hardware stack levels used:    1
  1897 ;; Hardware stack levels required when called:    1
  1898 ;; This function calls:
  1899 ;;		_servos
  1900 ;; This function is called by:
  1901 ;;		Interrupt level 1
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           
  1906                           ;psect for function _rutInter
  1907  00C3                     _rutInter:
  1908  00C3                     i1l1600:
  1909                           
  1910                           ;mainP2.c: 88:     if(INTCONbits.TMR0IF) {
  1911  00C3  1D0B               	btfss	11,2	;volatile
  1912  00C4  28C6               	goto	u47_21
  1913  00C5  28C7               	goto	u47_20
  1914  00C6                     u47_21:
  1915  00C6  28DF               	goto	i1l111
  1916  00C7                     u47_20:
  1917  00C7                     i1l1602:
  1918                           
  1919                           ;mainP2.c: 89:         SERVOS.bit0++;
  1920  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1921  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1922  00C9  0832               	movf	_SERVOS,w
  1923  00CA  391F               	andlw	31
  1924  00CB  00F2               	movwf	??_rutInter
  1925  00CC  0AF2               	incf	??_rutInter,f
  1926  00CD  0832               	movf	_SERVOS,w
  1927  00CE  0672               	xorwf	??_rutInter,w
  1928  00CF  39E0               	andlw	-32
  1929  00D0  0672               	xorwf	??_rutInter,w
  1930  00D1  00B2               	movwf	_SERVOS
  1931  00D2                     i1l1604:
  1932                           
  1933                           ;mainP2.c: 90:         INTCONbits.TMR0IF = 0;
  1934  00D2  110B               	bcf	11,2	;volatile
  1935  00D3                     i1l1606:
  1936                           
  1937                           ;mainP2.c: 91:         servos();
  1938  00D3  120A  118A  21EE  120A  118A  	fcall	_servos
  1939  00D8                     i1l1608:
  1940                           
  1941                           ;mainP2.c: 92:         if(SERVOS.modo) ADCON0bits.GO = 1;
  1942  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1943  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1944  00DA  1F32               	btfss	_SERVOS,6
  1945  00DB  28DD               	goto	u48_21
  1946  00DC  28DE               	goto	u48_20
  1947  00DD                     u48_21:
  1948  00DD  28DF               	goto	i1l111
  1949  00DE                     u48_20:
  1950  00DE                     i1l1610:
  1951  00DE  149F               	bsf	31,1	;volatile
  1952  00DF                     i1l111:	
  1953                           ;mainP2.c: 93:     }
  1954                           
  1955                           
  1956                           ;mainP2.c: 95:     if(PIR1bits.TMR1IF){
  1957  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1958  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  1959  00E1  1C0C               	btfss	12,0	;volatile
  1960  00E2  28E4               	goto	u49_21
  1961  00E3  28E5               	goto	u49_20
  1962  00E4                     u49_21:
  1963  00E4  28EF               	goto	i1l1622
  1964  00E5                     u49_20:
  1965  00E5                     i1l1612:
  1966                           
  1967                           ;mainP2.c: 96:         SERVOS.guardar = 1;
  1968  00E5  17B2               	bsf	_SERVOS,7
  1969  00E6                     i1l1614:
  1970                           
  1971                           ;mainP2.c: 97:         posicion ++;
  1972  00E6  3001               	movlw	1
  1973  00E7  00F2               	movwf	??_rutInter
  1974  00E8  0872               	movf	??_rutInter,w
  1975  00E9  07AB               	addwf	_posicion,f
  1976  00EA                     i1l1616:
  1977                           
  1978                           ;mainP2.c: 98:         PIR1bits.TMR1IF = 0;
  1979  00EA  100C               	bcf	12,0	;volatile
  1980  00EB                     i1l1618:
  1981                           
  1982                           ;mainP2.c: 99:         TMR1H = 0B00001011;
  1983  00EB  300B               	movlw	11
  1984  00EC  008F               	movwf	15	;volatile
  1985  00ED                     i1l1620:
  1986                           
  1987                           ;mainP2.c: 100:         TMR1L = 0B11010001;
  1988  00ED  30D1               	movlw	209
  1989  00EE  008E               	movwf	14	;volatile
  1990  00EF                     i1l1622:
  1991                           
  1992                           ;mainP2.c: 103:     if(INTCONbits.RBIF && PORTBbits.RB0){
  1993  00EF  1C0B               	btfss	11,0	;volatile
  1994  00F0  28F2               	goto	u50_21
  1995  00F1  28F3               	goto	u50_20
  1996  00F2                     u50_21:
  1997  00F2  2905               	goto	i1l1630
  1998  00F3                     u50_20:
  1999  00F3                     i1l1624:
  2000  00F3  1C06               	btfss	6,0	;volatile
  2001  00F4  28F6               	goto	u51_21
  2002  00F5  28F7               	goto	u51_20
  2003  00F6                     u51_21:
  2004  00F6  2905               	goto	i1l1630
  2005  00F7                     u51_20:
  2006  00F7                     i1l1626:
  2007                           
  2008                           ;mainP2.c: 104:         SERVOS.modo = ~SERVOS.modo;
  2009  00F7  1003               	clrc
  2010  00F8  1F32               	btfss	_SERVOS,6
  2011  00F9  1403               	setc
  2012  00FA  1803               	btfsc	3,0
  2013  00FB  28FD               	goto	u52_21
  2014  00FC  2901               	goto	u52_20
  2015  00FD                     u52_21:
  2016  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  2017  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  2018  00FF  1732               	bsf	_SERVOS,6
  2019  0100  2904               	goto	u53_24
  2020  0101                     u52_20:
  2021  0101  1283               	bcf	3,5	;RP0=0, select bank0
  2022  0102  1303               	bcf	3,6	;RP1=0, select bank0
  2023  0103  1332               	bcf	_SERVOS,6
  2024  0104                     u53_24:
  2025  0104                     i1l1628:
  2026                           
  2027                           ;mainP2.c: 105:         INTCONbits.RBIF = 0;
  2028  0104  100B               	bcf	11,0	;volatile
  2029  0105                     i1l1630:
  2030                           
  2031                           ;mainP2.c: 108:     if(INTCONbits.RBIF && PORTBbits.RB1){
  2032  0105  1C0B               	btfss	11,0	;volatile
  2033  0106  2908               	goto	u54_21
  2034  0107  2909               	goto	u54_20
  2035  0108                     u54_21:
  2036  0108  2915               	goto	i1l115
  2037  0109                     u54_20:
  2038  0109                     i1l1632:
  2039  0109  1C86               	btfss	6,1	;volatile
  2040  010A  290C               	goto	u55_21
  2041  010B  290D               	goto	u55_20
  2042  010C                     u55_21:
  2043  010C  2915               	goto	i1l115
  2044  010D                     u55_20:
  2045  010D                     i1l1634:
  2046                           
  2047                           ;mainP2.c: 109:         T1CONbits.TMR1ON = 1;
  2048  010D  1410               	bsf	16,0	;volatile
  2049                           
  2050                           ;mainP2.c: 110:         PORTEbits.RE0 = 1;
  2051  010E  1409               	bsf	9,0	;volatile
  2052                           
  2053                           ;mainP2.c: 111:         if(SERVOS.modo)SERVOS.guardar = 1;
  2054  010F  1F32               	btfss	_SERVOS,6
  2055  0110  2912               	goto	u56_21
  2056  0111  2913               	goto	u56_20
  2057  0112                     u56_21:
  2058  0112  2914               	goto	i1l116
  2059  0113                     u56_20:
  2060  0113                     i1l1636:
  2061  0113  17B2               	bsf	_SERVOS,7
  2062  0114                     i1l116:
  2063                           
  2064                           ;mainP2.c: 112:         INTCONbits.RBIF = 0;
  2065  0114  100B               	bcf	11,0	;volatile
  2066  0115                     i1l115:	
  2067                           ;mainP2.c: 113:     }
  2068                           
  2069                           
  2070                           ;mainP2.c: 115:     INTCONbits.RBIF = 0;
  2071  0115  100B               	bcf	11,0	;volatile
  2072                           
  2073                           ;mainP2.c: 117:     if(PIR1bits.RCIF){
  2074  0116  1E8C               	btfss	12,5	;volatile
  2075  0117  2919               	goto	u57_21
  2076  0118  291A               	goto	u57_20
  2077  0119                     u57_21:
  2078  0119  292C               	goto	i1l118
  2079  011A                     u57_20:
  2080  011A                     i1l1638:
  2081                           
  2082                           ;mainP2.c: 118:         EXTREC = RCREG;
  2083  011A  081A               	movf	26,w	;volatile
  2084  011B  00F2               	movwf	??_rutInter
  2085  011C  0872               	movf	??_rutInter,w
  2086  011D  00F8               	movwf	_EXTREC
  2087  011E                     i1l1640:
  2088                           
  2089                           ;mainP2.c: 119:         UART.indicador = ~UART.indicador;
  2090  011E  1003               	clrc
  2091  011F  1C31               	btfss	_UART,0
  2092  0120  1403               	setc
  2093  0121  1803               	btfsc	3,0
  2094  0122  2924               	goto	u58_21
  2095  0123  2928               	goto	u58_20
  2096  0124                     u58_21:
  2097  0124  1283               	bcf	3,5	;RP0=0, select bank0
  2098  0125  1303               	bcf	3,6	;RP1=0, select bank0
  2099  0126  1431               	bsf	_UART,0
  2100  0127  292B               	goto	u59_24
  2101  0128                     u58_20:
  2102  0128  1283               	bcf	3,5	;RP0=0, select bank0
  2103  0129  1303               	bcf	3,6	;RP1=0, select bank0
  2104  012A  1031               	bcf	_UART,0
  2105  012B                     u59_24:
  2106  012B                     i1l1642:
  2107                           
  2108                           ;mainP2.c: 120:         UART.datorecep = 1;
  2109  012B  14B1               	bsf	_UART,1
  2110  012C                     i1l118:
  2111  012C  0875               	movf	??_rutInter+3,w
  2112  012D  008A               	movwf	10
  2113  012E  0874               	movf	??_rutInter+2,w
  2114  012F  0084               	movwf	4
  2115  0130  0E73               	swapf	??_rutInter+1,w
  2116  0131  0083               	movwf	3
  2117  0132  0EFE               	swapf	btemp,f
  2118  0133  0E7E               	swapf	btemp,w
  2119  0134  0009               	retfie
  2120  0135                     __end_of_rutInter:
  2121                           
  2122                           	psect	intentry
  2123  0004                     __pintentry:	
  2124                           ;incstack = 0
  2125                           ; Regs used in _rutInter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2126                           
  2127  0004                     interrupt_function:
  2128  007E                     saved_w	set	btemp
  2129  0004  00FE               	movwf	btemp
  2130  0005  0E03               	swapf	3,w
  2131  0006  00F3               	movwf	??_rutInter+1
  2132  0007  0804               	movf	4,w
  2133  0008  00F4               	movwf	??_rutInter+2
  2134  0009  080A               	movf	10,w
  2135  000A  00F5               	movwf	??_rutInter+3
  2136  000B  120A  118A  28C3   	ljmp	_rutInter
  2137                           
  2138                           	psect	text10
  2139  01EE                     __ptext10:	
  2140 ;; *************** function _servos *****************
  2141 ;; Defined at:
  2142 ;;		line 232 in file "mainP2.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;		None
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2156 ;;      Params:         0       0       0       0       0
  2157 ;;      Locals:         0       0       0       0       0
  2158 ;;      Temps:          2       0       0       0       0
  2159 ;;      Totals:         2       0       0       0       0
  2160 ;;Total ram usage:        2 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; This function calls:
  2163 ;;		Nothing
  2164 ;; This function is called by:
  2165 ;;		_rutInter
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169                           
  2170                           ;psect for function _servos
  2171  01EE                     _servos:
  2172  01EE                     i1l1384:	
  2173                           ;incstack = 0
  2174                           ; Regs used in _servos: [wreg-fsr0h+status,2+status,0]
  2175                           
  2176                           
  2177                           ;mainP2.c: 234:             if(SERVOS.bit0 == 18) SERVOS.bit0 = 0;
  2178  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  2179  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  2180  01F0  0832               	movf	_SERVOS,w
  2181  01F1  391F               	andlw	31
  2182  01F2  3A12               	xorlw	18
  2183  01F3  1D03               	skipz
  2184  01F4  29F6               	goto	u35_21
  2185  01F5  29F7               	goto	u35_20
  2186  01F6                     u35_21:
  2187  01F6  2A1A               	goto	i1l1422
  2188  01F7                     u35_20:
  2189  01F7                     i1l1386:
  2190  01F7  30E0               	movlw	-32
  2191  01F8  05B2               	andwf	_SERVOS,f
  2192  01F9  2A1A               	goto	i1l1422
  2193  01FA                     i1l1388:
  2194                           
  2195                           ;mainP2.c: 239:                     TMR0 = 255-POT1; PORTDbits.RD0 = 0;
  2196  01FA  0930               	comf	_POT1,w
  2197  01FB  0081               	movwf	1	;volatile
  2198  01FC                     i1l1390:
  2199  01FC  1008               	bcf	8,0	;volatile
  2200                           
  2201                           ;mainP2.c: 240:                     break;
  2202  01FD  2A3D               	goto	i1l149
  2203  01FE                     i1l1392:
  2204                           
  2205                           ;mainP2.c: 242:                      TMR0 = 255-POT2; PORTDbits.RD1 = 0;
  2206  01FE  092F               	comf	_POT2,w
  2207  01FF  0081               	movwf	1	;volatile
  2208  0200                     i1l1394:
  2209  0200  1088               	bcf	8,1	;volatile
  2210                           
  2211                           ;mainP2.c: 243:                     break;
  2212  0201  2A3D               	goto	i1l149
  2213  0202                     i1l1396:
  2214                           
  2215                           ;mainP2.c: 245:                     TMR0 = 255-POT3; PORTDbits.RD2 = 0;
  2216  0202  092E               	comf	_POT3,w
  2217  0203  0081               	movwf	1	;volatile
  2218  0204                     i1l1398:
  2219  0204  1108               	bcf	8,2	;volatile
  2220                           
  2221                           ;mainP2.c: 246:                     break;
  2222  0205  2A3D               	goto	i1l149
  2223  0206                     i1l1400:
  2224                           
  2225                           ;mainP2.c: 248:                     TMR0 = 255-POT4; PORTDbits.RD3 = 0;
  2226  0206  092D               	comf	_POT4,w
  2227  0207  0081               	movwf	1	;volatile
  2228  0208                     i1l1402:
  2229  0208  1188               	bcf	8,3	;volatile
  2230                           
  2231                           ;mainP2.c: 249:                     break;
  2232  0209  2A3D               	goto	i1l149
  2233  020A                     i1l1404:
  2234                           
  2235                           ;mainP2.c: 252:                     TMR0 = POT1; PORTDbits.RD0 = 1;
  2236  020A  0830               	movf	_POT1,w
  2237  020B  0081               	movwf	1	;volatile
  2238  020C                     i1l1406:
  2239  020C  1408               	bsf	8,0	;volatile
  2240                           
  2241                           ;mainP2.c: 253:                     break;
  2242  020D  2A3D               	goto	i1l149
  2243  020E                     i1l1408:
  2244                           
  2245                           ;mainP2.c: 255:                     TMR0 = POT2; PORTDbits.RD1 = 1;
  2246  020E  082F               	movf	_POT2,w
  2247  020F  0081               	movwf	1	;volatile
  2248  0210                     i1l1410:
  2249  0210  1488               	bsf	8,1	;volatile
  2250                           
  2251                           ;mainP2.c: 256:                     break;
  2252  0211  2A3D               	goto	i1l149
  2253  0212                     i1l1412:
  2254                           
  2255                           ;mainP2.c: 258:                     TMR0 = POT3; PORTDbits.RD2 = 1;
  2256  0212  082E               	movf	_POT3,w
  2257  0213  0081               	movwf	1	;volatile
  2258  0214                     i1l1414:
  2259  0214  1508               	bsf	8,2	;volatile
  2260                           
  2261                           ;mainP2.c: 259:                     break;
  2262  0215  2A3D               	goto	i1l149
  2263  0216                     i1l1416:
  2264                           
  2265                           ;mainP2.c: 261:                     TMR0 = POT4; PORTDbits.RD3 = 1;
  2266  0216  082D               	movf	_POT4,w
  2267  0217  0081               	movwf	1	;volatile
  2268  0218                     i1l1418:
  2269  0218  1588               	bsf	8,3	;volatile
  2270                           
  2271                           ;mainP2.c: 262:                     break;
  2272  0219  2A3D               	goto	i1l149
  2273  021A                     i1l1422:
  2274  021A  0832               	movf	_SERVOS,w
  2275  021B  391F               	andlw	31
  2276  021C  00F0               	movwf	??_servos
  2277  021D  01F1               	clrf	??_servos+1
  2278                           
  2279                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2280                           ; Switch size 1, requested type "simple"
  2281                           ; Number of cases is 1, Range of values is 0 to 0
  2282                           ; switch strategies available:
  2283                           ; Name         Instructions Cycles
  2284                           ; simple_byte            4     3 (average)
  2285                           ; direct_byte           11     8 (fixed)
  2286                           ; jumptable            260     6 (fixed)
  2287                           ;	Chosen strategy is simple_byte
  2288  021E  0871               	movf	??_servos+1,w
  2289  021F  3A00               	xorlw	0	; case 0
  2290  0220  1903               	skipnz
  2291  0221  2A23               	goto	i1l2228
  2292  0222  2A3D               	goto	i1l149
  2293  0223                     i1l2228:
  2294                           
  2295                           ; Switch size 1, requested type "simple"
  2296                           ; Number of cases is 8, Range of values is 0 to 10
  2297                           ; switch strategies available:
  2298                           ; Name         Instructions Cycles
  2299                           ; simple_byte           25    13 (average)
  2300                           ; direct_byte           41     8 (fixed)
  2301                           ; jumptable            260     6 (fixed)
  2302                           ;	Chosen strategy is simple_byte
  2303  0223  0870               	movf	??_servos,w
  2304  0224  3A00               	xorlw	0	; case 0
  2305  0225  1903               	skipnz
  2306  0226  2A0A               	goto	i1l1404
  2307  0227  3A01               	xorlw	1	; case 1
  2308  0228  1903               	skipnz
  2309  0229  29FA               	goto	i1l1388
  2310  022A  3A02               	xorlw	2	; case 3
  2311  022B  1903               	skipnz
  2312  022C  2A0E               	goto	i1l1408
  2313  022D  3A07               	xorlw	7	; case 4
  2314  022E  1903               	skipnz
  2315  022F  29FE               	goto	i1l1392
  2316  0230  3A02               	xorlw	2	; case 6
  2317  0231  1903               	skipnz
  2318  0232  2A12               	goto	i1l1412
  2319  0233  3A01               	xorlw	1	; case 7
  2320  0234  1903               	skipnz
  2321  0235  2A02               	goto	i1l1396
  2322  0236  3A0E               	xorlw	14	; case 9
  2323  0237  1903               	skipnz
  2324  0238  2A16               	goto	i1l1416
  2325  0239  3A03               	xorlw	3	; case 10
  2326  023A  1903               	skipnz
  2327  023B  2A06               	goto	i1l1400
  2328  023C  2A3D               	goto	i1l149
  2329  023D                     i1l149:
  2330  023D  0008               	return
  2331  023E                     __end_of_servos:
  2332  007E                     btemp	set	126	;btemp
  2333  007E                     wtemp0	set	126
  2334                           
  2335                           	psect	config
  2336                           
  2337                           ;Config register CONFIG1 @ 0x2007
  2338                           ;	Oscillator Selection bits
  2339                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2340                           ;	Watchdog Timer Enable bit
  2341                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2342                           ;	Power-up Timer Enable bit
  2343                           ;	PWRTE = OFF, PWRT disabled
  2344                           ;	RE3/MCLR pin function select bit
  2345                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2346                           ;	Code Protection bit
  2347                           ;	CP = OFF, Program memory code protection is disabled
  2348                           ;	Data Code Protection bit
  2349                           ;	CPD = OFF, Data memory code protection is disabled
  2350                           ;	Brown Out Reset Selection bits
  2351                           ;	BOREN = OFF, BOR disabled
  2352                           ;	Internal External Switchover bit
  2353                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2354                           ;	Fail-Safe Clock Monitor Enabled bit
  2355                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2356                           ;	Low Voltage Programming Enable bit
  2357                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2358                           ;	In-Circuit Debugger Mode bit
  2359                           ;	DEBUG = 0x1, unprogrammed default
  2360  2007                     	org	8199
  2361  2007  20F4               	dw	8436
  2362                           
  2363                           ;Config register CONFIG2 @ 0x2008
  2364                           ;	Brown-out Reset Selection bit
  2365                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2366                           ;	Flash Program Memory Self Write Enable bits
  2367                           ;	WRT = OFF, Write protection off
  2368  2008                     	org	8200
  2369  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80     11      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _rutInter in COMMON

    _rutInter->_servos

Critical Paths under _main in BANK0

    _main->_guardar3SEG
    _leer3SEG->_leerSERVOS
    _leerSERVOS->_leerposiciones
    _guardar3SEG->_guardarservos
    _guardarservos->_guardarposiciones

Critical Paths under _rutInter in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rutInter in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutInter in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutInter in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     691
                                              8 BANK0      3     3      0
                    _AnalogReadServo
                    _configuraciones
                        _guardar3SEG
                           _leer3SEG
 ---------------------------------------------------------------------------------
 (1) _leer3SEG                                             2     2      0     378
                                              5 BANK0      2     2      0
                         _leerSERVOS
 ---------------------------------------------------------------------------------
 (2) _leerSERVOS                                           4     4      0     378
                                              1 BANK0      4     4      0
                     _leerposiciones
 ---------------------------------------------------------------------------------
 (3) _leerposiciones                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _guardar3SEG                                          2     2      0     313
                                              6 BANK0      2     2      0
                      _guardarservos
 ---------------------------------------------------------------------------------
 (2) _guardarservos                                        4     4      0     313
                                              2 BANK0      4     4      0
                  _guardarposiciones
 ---------------------------------------------------------------------------------
 (3) _guardarposiciones                                    2     1      1     152
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _configuraciones                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AnalogReadServo                                      2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _rutInter                                             4     4      0       0
                                              2 COMMON     4     4      0
                             _servos
 ---------------------------------------------------------------------------------
 (5) _servos                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AnalogReadServo
   _configuraciones
   _guardar3SEG
     _guardarservos
       _guardarposiciones
   _leer3SEG
     _leerSERVOS
       _leerposiciones

 _rutInter (ROOT)
   _servos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu May 13 19:48:51 2021

                       l212 02EB                         l124 02AC                         l125 028B  
                       l222 02E9                         l135 0193                         l215 030E  
                       l208 01ED                         l161 005A                         l171 00C2  
                       l219 02C6                         l180 0326                         l165 0076  
                       l157 003C                         l182 032A                         l183 032B  
                       l169 0094                         l194 0284                         l197 033A  
                       u700 0060                         u620 032A                         u701 005F  
                       u621 0329                         u710 0072                         u630 0284  
                       u711 0071                         u631 0283                         u720 007C  
                       u640 01ED                         u721 007B                         u641 01EC  
                       u730 0090                         u731 008F                         u740 009A  
                       u660 0028                         u741 0099                         u661 0027  
                       u670 0038                         u671 0037                         u655 02CD  
                       u680 0042                         u760 0290                         u681 0041  
                       u761 028F                         u690 0056                         u770 02A3  
                       u691 0055                         u755 02F2                         u771 02A2  
                       fsr0 0004                 leerSERVOS@n 0024                        l2000 0047  
                      l2010 0065                        l2002 004C                        l2020 0081  
                      l2012 006A                        l2004 0050                        l2022 0086  
                      l2014 006C                        l2006 0056                        l2024 008A  
                      l2016 0072                        l2008 0060                        l2032 009F  
                      l2040 02EC                        l2026 0090                        l2018 007C  
                      l2042 02EF                        l2028 009A                        l2220 01D5  
                      l2060 029E                        l2052 0285                        l2222 0309  
                      l2046 02FF                        l2038 02EA                        l2062 029F  
                      l2054 0290                        l2070 02AC                        l2224 025F  
                      l2216 02BA                        l2064 02A3                        l2056 0296  
                      l2226 00A8                        l2218 02E4                        l2066 02A8  
                      l2058 029B                        l1810 031C                        l1900 0159  
                      l1812 031F                        l1820 0333                        l1910 0160  
                      l1902 015A                        l1814 0324                        l1822 0336  
                      l1920 0165                        l1912 0161                        l1904 015B  
                      l1816 0325                        l1808 0312                        l1832 0243  
                      l1930 0170                        l1922 0166                        l1914 0162  
                      l1906 015C                        l1834 0248                        l1842 0257  
                      l1826 0241                        l1818 032F                        l1940 0177  
                      l1932 0171                        l1924 0167                        l1916 0163  
                      l1908 015D                        l1836 024D                        l1844 026D  
                      l1860 0199                        l1950 0181                        l1942 0179  
                      l1934 0172                        l1926 0168                        l1918 0164  
                      l1846 0278                        l1838 0252                        l1862 01A6  
                      l1870 01CD                        l1854 0197                        l1960 018A  
                      l1952 0184                        l1944 017A                        l1936 0175  
                      l1928 016E                        l1880 0135                        l1848 027E  
                      l1864 01B3                        l1872 01E3                        l1970 0192  
                      l1962 018B                        l1954 0187                        l1946 017B  
                      l1938 0176                        l1890 014C                        l1882 0139  
                      l1874 01E7                        l1866 01C0                        l1964 018C  
                      l1956 0188                        l1948 017E                        l1892 0150  
                      l1884 013A                        l1980 02DA                        l1972 02C5  
                      l1990 0029                        l1966 018D                        l1958 0189  
                      l1894 0151                        l1886 013E                        l1974 02C7  
                      l1992 002E                        l1968 0191                        l1896 0155  
                      l1888 0140                        l1976 02CA                        l1994 0032  
                      l1986 0022                        l1898 0157                        l1996 0038  
                      l1998 0042                        _POT1 0030                        _POT2 002F  
                      _POT3 002E                        _POT4 002D                        _UART 0031  
                      _TMR0 0001                        _main 0285                        btemp 007E  
          ?_configuraciones 0070                        start 000E                ?_guardar3SEG 0070  
                     ?_main 0070                       _EEADR 010D                       _EEDAT 010C  
                     _ANSEL 0188                       i1l111 00DF                       i1l115 0115  
                     i1l116 0114                       i1l118 012C                       i1l149 023D  
                     _RCREG 001A                       _TMR1H 000F                       _TMR1L 000E  
                     u50_20 00F3                       u50_21 00F2                       _SPBRG 0099  
                     u35_20 01F7                       u51_20 00F7                       u35_21 01F6  
                     u51_21 00F6                       _PORTA 0005                       _PORTB 0006  
                     _PORTC 0007                       _PORTD 0008                       _PORTE 0009  
                     u52_20 0101                       u52_21 00FD                       u53_24 0104  
                     u54_20 0109                       u54_21 0108                       u55_20 010D  
                     u47_20 00C7                       u55_21 010C                       u47_21 00C6  
                     u56_20 0113                       u48_20 00DE                       u56_21 0112  
                     u48_21 00DD                       u57_20 011A                       u49_20 00E5  
                     u57_21 0119                       u49_21 00E4                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                       u58_20 0128                       u58_21 0124  
                     u59_24 012B                       _TXREG 0019                       pclath 000A  
                     status 0003                       wtemp0 007E             __initialization 0011  
              __end_of_main 02C5                      ??_main 0028                      _ADRESH 001E  
                    _EECON2 018D      __size_of_guardarservos 0047                      _ANSELH 0189  
                    i1l1400 0206                      i1l1410 0210                      i1l1402 0208  
                    i1l1412 0212                      i1l1404 020A                      i1l1414 0214  
                    i1l1406 020C                      i1l1422 021A                      i1l1416 0216  
                    i1l1408 020E                      i1l1600 00C3                      i1l1418 0218  
                    i1l1610 00DE                      i1l1602 00C7                      i1l2228 0223  
                    i1l1620 00ED                      i1l1612 00E5                      i1l1604 00D2  
                    i1l1390 01FC                      i1l1630 0105                      i1l1614 00E6  
                    i1l1622 00EF                      i1l1606 00D3                      i1l1392 01FE  
                    i1l1384 01EE                      i1l1640 011E                      i1l1632 0109  
                    i1l1624 00F3                      i1l1616 00EA                      i1l1608 00D8  
                    i1l1394 0200                      i1l1386 01F7                      i1l1642 012B  
                    i1l1634 010D                      i1l1626 00F7                      i1l1618 00EB  
                    i1l1396 0202                      i1l1388 01FA                      i1l1636 0113  
                    i1l1628 0104                      i1l1398 0204                      i1l1638 011A  
                    _EXTREC 0078                      _SERVOS 0032            __end_of_leer3SEG 02EA  
                    _servos 01EE     __size_of_leerposiciones 000F                      saved_w 007E  
          __end_of_rutInter 0135  guardarposiciones@direccion 0020     __end_of__initialization 001E  
            __pcstackCOMMON 0070               _guardarservos 023E        __size_of_guardar3SEG 0025  
            _OPTION_REGbits 0081    __size_of_AnalogReadServo 00A1                  __pbssBANK0 002B  
                __pmaintext 0285              ?_guardarservos 0070                  __pintentry 0004  
                   ?_servos 0070                  _leerSERVOS 0194                   ?_leer3SEG 0070  
         _guardarposiciones 030F          ?_guardarposiciones 0020         ??_guardarposiciones 0021  
  __size_of_configuraciones 005F                   ?_rutInter 0070                     __ptext1 02C5  
                   __ptext2 0194                     __ptext3 032C                     __ptext4 02EA  
                   __ptext5 023E                     __ptext6 030F                     __ptext7 0135  
                   __ptext8 0022                     __ptext9 00C3             __size_of_servos 0050  
                 _T1CONbits 0010              _leerposiciones 032C   __end_of_guardarposiciones 032C  
                ??_leer3SEG 0025        end_of_initialization 001E           ??_AnalogReadServo 0020  
           ??_guardarservos 0022                   _RCSTAbits 0018                   _SERVINDIC 0077  
                ??_rutInter 0072      __end_of_leerposiciones 033B                   _PORTBbits 0006  
                 _PORTDbits 0008                   _PORTEbits 0009                 ?_leerSERVOS 0070  
                 _TXSTAbits 0098           leerSERVOS@desfase 0023             ?_leerposiciones 0070  
            __end_of_servos 023E           ??_configuraciones 0020         start_initialization 0011  
__size_of_guardarposiciones 001D        guardarservos@desfase 0024               ??_guardar3SEG 0026  
       __size_of_leerSERVOS 005A                   _addEEPROM 0076                    ??_servos 0070  
               __pbssCOMMON 0076                   ___latbits 0002                   _datEEPROM 002C  
             __pcstackBANK0 0020              guardarservos@n 0025           __size_of_leer3SEG 0025  
         __size_of_rutInter 0072         __end_of_guardar3SEG 030F             _AnalogReadServo 0022  
         interrupt_function 0004                    _IOCBbits 0096                    _PIE1bits 008C  
                  _PIR1bits 000C                  _ADCON0bits 001F                  _ADCON1bits 009F  
   leerposiciones@direccion 0020                ??_leerSERVOS 0021                  _EECON1bits 018C  
          ??_leerposiciones 0020       __end_of_guardarservos 0285             _configuraciones 0135  
               _guardar3SEG 02EA          __end_of_leerSERVOS 01EE     __end_of_AnalogReadServo 00C3  
                  __ptext10 01EE                    _leer3SEG 02C5               __size_of_main 0040  
                  _posicion 002B    guardarposiciones@guardar 0021                    _rutInter 00C3  
                _INTCONbits 000B                    intlevel1 0000     __end_of_configuraciones 0194  
                _OSCCONbits 008F            ?_AnalogReadServo 0070  
