

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu May 13 12:53:57 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0019                     _TXREG	set	25
   215  001E                     _ADRESH	set	30
   216  0008                     _PORTDbits	set	8
   217  0001                     _TMR0	set	1
   218  0018                     _RCSTAbits	set	24
   219  0008                     _PORTD	set	8
   220  0007                     _PORTC	set	7
   221  0006                     _PORTB	set	6
   222  0005                     _PORTA	set	5
   223  001A                     _RCREG	set	26
   224  0009                     _PORTE	set	9
   225  0010                     _T1CONbits	set	16
   226  0006                     _PORTBbits	set	6
   227  000E                     _TMR1L	set	14
   228  000F                     _TMR1H	set	15
   229  000C                     _PIR1bits	set	12
   230  001F                     _ADCON0bits	set	31
   231  000B                     _INTCONbits	set	11
   232  0081                     _OPTION_REGbits	set	129
   233  0098                     _TXSTAbits	set	152
   234  0099                     _SPBRG	set	153
   235  009F                     _ADCON1bits	set	159
   236  0096                     _IOCBbits	set	150
   237  008C                     _PIE1bits	set	140
   238  008F                     _OSCCONbits	set	143
   239  0089                     _TRISE	set	137
   240  0088                     _TRISD	set	136
   241  0087                     _TRISC	set	135
   242  0086                     _TRISB	set	134
   243  0085                     _TRISA	set	133
   244  010C                     _EEDAT	set	268
   245  010D                     _EEADR	set	269
   246  018D                     _EECON2	set	397
   247  018C                     _EECON1bits	set	396
   248  0189                     _ANSELH	set	393
   249  0188                     _ANSEL	set	392
   250                           
   251                           	psect	cinit
   252  0011                     start_initialization:	
   253                           ; #config settings
   254                           
   255  0011                     __initialization:
   256                           
   257                           ; Clear objects allocated to COMMON
   258  0011  01F6               	clrf	__pbssCOMMON& (0+127)
   259  0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   260                           
   261                           ; Clear objects allocated to BANK0
   262  0013  1283               	bcf	3,5	;RP0=0, select bank0
   263  0014  1303               	bcf	3,6	;RP1=0, select bank0
   264  0015  01AB               	clrf	__pbssBANK0& (0+127)
   265  0016  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   266  0017  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   267  0018  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   268  0019  01AF               	clrf	(__pbssBANK0+4)& (0+127)
   269  001A  01B0               	clrf	(__pbssBANK0+5)& (0+127)
   270  001B  01B1               	clrf	(__pbssBANK0+6)& (0+127)
   271  001C  01B2               	clrf	(__pbssBANK0+7)& (0+127)
   272  001D  01B3               	clrf	(__pbssBANK0+8)& (0+127)
   273  001E                     end_of_initialization:	
   274                           ;End of C runtime variable initialization code
   275                           
   276  001E                     __end_of__initialization:
   277  001E  0183               	clrf	3
   278  001F  120A  118A  2B6D   	ljmp	_main	;jump to C main() function
   279                           
   280                           	psect	bssCOMMON
   281  0076                     __pbssCOMMON:
   282  0076                     _addEEPROM:
   283  0076                     	ds	1
   284  0077                     _SERVINDIC:
   285  0077                     	ds	1
   286                           
   287                           	psect	bssBANK0
   288  002B                     __pbssBANK0:
   289  002B                     _posicion:
   290  002B                     	ds	1
   291  002C                     _datEEPROM:
   292  002C                     	ds	1
   293  002D                     _EXTREC:
   294  002D                     	ds	1
   295  002E                     _POT4:
   296  002E                     	ds	1
   297  002F                     _POT3:
   298  002F                     	ds	1
   299  0030                     _POT2:
   300  0030                     	ds	1
   301  0031                     _POT1:
   302  0031                     	ds	1
   303  0032                     _UART:
   304  0032                     	ds	1
   305  0033                     _SERVOS:
   306  0033                     	ds	1
   307                           
   308                           	psect	cstackCOMMON
   309  0070                     __pcstackCOMMON:
   310  0070                     ?_servos:
   311  0070                     ??_servos:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ?_configuraciones:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ?_leer3SEG:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_AnalogReadServo:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_guardar3SEG:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_rutInter:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_main:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_guardarservos:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_leerposiciones:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_leerSERVOS:	
   339                           ; 1 bytes @ 0x0
   340                           
   341                           
   342                           ; 1 bytes @ 0x0
   343  0070                     	ds	2
   344  0072                     ??_rutInter:
   345                           
   346                           ; 1 bytes @ 0x2
   347  0072                     	ds	4
   348  0076                     ??_configuraciones:
   349  0076                     ??_guardarposiciones:	
   350                           ; 1 bytes @ 0x6
   351                           
   352  0076                     ??_leerposiciones:	
   353                           ; 1 bytes @ 0x6
   354                           
   355                           
   356                           	psect	cstackBANK0
   357  0020                     __pcstackBANK0:	
   358                           ; 1 bytes @ 0x6
   359                           
   360  0020                     ??_AnalogReadServo:
   361  0020                     ?_guardarposiciones:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0020                     guardarposiciones@direccion:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0020                     leerposiciones@direccion:	
   368                           ; 1 bytes @ 0x0
   369                           
   370                           
   371                           ; 1 bytes @ 0x0
   372  0020                     	ds	1
   373  0021                     ??_leerSERVOS:
   374  0021                     guardarposiciones@guardar:	
   375                           ; 1 bytes @ 0x1
   376                           
   377                           
   378                           ; 1 bytes @ 0x1
   379  0021                     	ds	1
   380  0022                     ??_guardarservos:
   381                           
   382                           ; 1 bytes @ 0x2
   383  0022                     	ds	1
   384  0023                     leerSERVOS@desfase:
   385                           
   386                           ; 1 bytes @ 0x3
   387  0023                     	ds	1
   388  0024                     guardarservos@desfase:
   389  0024                     leerSERVOS@n:	
   390                           ; 1 bytes @ 0x4
   391                           
   392                           
   393                           ; 1 bytes @ 0x4
   394  0024                     	ds	1
   395  0025                     ??_leer3SEG:
   396  0025                     guardarservos@n:	
   397                           ; 1 bytes @ 0x5
   398                           
   399                           
   400                           ; 1 bytes @ 0x5
   401  0025                     	ds	1
   402  0026                     ??_guardar3SEG:
   403                           
   404                           ; 1 bytes @ 0x6
   405  0026                     	ds	2
   406  0028                     ??_main:
   407                           
   408                           ; 1 bytes @ 0x8
   409  0028                     	ds	3
   410                           
   411                           	psect	maintext
   412  036D                     __pmaintext:	
   413 ;;
   414 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   415 ;;
   416 ;; *************** function _main *****************
   417 ;; Defined at:
   418 ;;		line 130 in file "mainP2.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;		None
   421 ;; Auto vars:     Size  Location     Type
   422 ;;		None
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      void 
   425 ;; Registers used:
   426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   427 ;; Tracked objects:
   428 ;;		On entry : B00/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   432 ;;      Params:         0       0       0       0       0
   433 ;;      Locals:         0       0       0       0       0
   434 ;;      Temps:          0       3       0       0       0
   435 ;;      Totals:         0       3       0       0       0
   436 ;;Total ram usage:        3 bytes
   437 ;; Hardware stack levels required when called:    5
   438 ;; This function calls:
   439 ;;		_AnalogReadServo
   440 ;;		_configuraciones
   441 ;;		_guardar3SEG
   442 ;;		_leer3SEG
   443 ;; This function is called by:
   444 ;;		Startup code after reset
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448                           
   449                           ;psect for function _main
   450  036D                     _main:
   451  036D                     l2156:	
   452                           ;incstack = 0
   453                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   454                           
   455                           
   456                           ;mainP2.c: 131:     configuraciones();
   457  036D  120A  118A  2264  120A  118A  	fcall	_configuraciones
   458  0372  2BA2               	goto	l2184
   459  0373                     l123:	
   460                           ;mainP2.c: 135:             case 0:
   461                           
   462                           
   463                           ;mainP2.c: 136:                 PORTBbits.RB7 = 0;
   464  0373  1386               	bcf	6,7	;volatile
   465                           
   466                           ;mainP2.c: 138:                 if(UART.datorecep){
   467  0374  1CB2               	btfss	_UART,1
   468  0375  2B77               	goto	u741
   469  0376  2B78               	goto	u740
   470  0377                     u741:
   471  0377  2B82               	goto	l2166
   472  0378                     u740:
   473  0378                     l2158:
   474                           
   475                           ;mainP2.c: 139:                     if(EXTREC == '0'){
   476  0378  3030               	movlw	48
   477  0379  062D               	xorwf	_EXTREC,w
   478  037A  1D03               	btfss	3,2
   479  037B  2B7D               	goto	u751
   480  037C  2B7E               	goto	u750
   481  037D                     u751:
   482  037D  2B81               	goto	l2164
   483  037E                     u750:
   484  037E                     l2160:
   485                           
   486                           ;mainP2.c: 140:                         T1CONbits.TMR1ON = 1;
   487  037E  1410               	bsf	16,0	;volatile
   488  037F                     l2162:
   489                           
   490                           ;mainP2.c: 141:                         PORTE = 1;
   491  037F  3001               	movlw	1
   492  0380  0089               	movwf	9	;volatile
   493  0381                     l2164:
   494                           
   495                           ;mainP2.c: 143:                     UART.datorecep = 0;
   496  0381  10B2               	bcf	_UART,1
   497  0382                     l2166:
   498                           
   499                           ;mainP2.c: 146:                 if(T1CONbits.TMR1ON){
   500  0382  1C10               	btfss	16,0	;volatile
   501  0383  2B85               	goto	u761
   502  0384  2B86               	goto	u760
   503  0385                     u761:
   504  0385  2BA2               	goto	l122
   505  0386                     u760:
   506  0386                     l2168:
   507                           
   508                           ;mainP2.c: 147:                     leer3SEG();
   509  0386  120A  118A  20C3  120A  118A  	fcall	_leer3SEG
   510  038B  2BA2               	goto	l2184
   511  038C                     l2170:
   512                           
   513                           ;mainP2.c: 152:                 AnalogReadServo();
   514  038C  120A  118A  2022  120A  118A  	fcall	_AnalogReadServo
   515  0391                     l2172:
   516                           
   517                           ;mainP2.c: 153:                 PORTBbits.RB7 = 1;
   518  0391  1283               	bcf	3,5	;RP0=0, select bank0
   519  0392  1303               	bcf	3,6	;RP1=0, select bank0
   520  0393  1786               	bsf	6,7	;volatile
   521  0394                     l2174:
   522                           
   523                           ;mainP2.c: 154:                 UART.indicador = 0;
   524  0394  1032               	bcf	_UART,0
   525  0395                     l2176:
   526                           
   527                           ;mainP2.c: 156:                 if(SERVOS.guardar){
   528  0395  1FB3               	btfss	_SERVOS,7
   529  0396  2B98               	goto	u771
   530  0397  2B99               	goto	u770
   531  0398                     u771:
   532  0398  2BA2               	goto	l122
   533  0399                     u770:
   534  0399                     l2178:
   535                           
   536                           ;mainP2.c: 157:                     guardar3SEG();
   537  0399  120A  118A  215A  120A  118A  	fcall	_guardar3SEG
   538  039E                     l2180:
   539                           
   540                           ;mainP2.c: 158:                     SERVOS.guardar = 0;
   541  039E  1283               	bcf	3,5	;RP0=0, select bank0
   542  039F  1303               	bcf	3,6	;RP1=0, select bank0
   543  03A0  13B3               	bcf	_SERVOS,7
   544  03A1  2BA2               	goto	l2184
   545  03A2                     l122:
   546  03A2                     l2184:
   547  03A2  1283               	bcf	3,5	;RP0=0, select bank0
   548  03A3  1303               	bcf	3,6	;RP1=0, select bank0
   549  03A4  0E33               	swapf	_SERVOS,w
   550  03A5  00A8               	movwf	??_main
   551  03A6  0CA8               	rrf	??_main,f
   552  03A7  0C28               	rrf	??_main,w
   553  03A8  3901               	andlw	1
   554  03A9  00A9               	movwf	??_main+1
   555  03AA  01AA               	clrf	??_main+2
   556                           
   557                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   558                           ; Switch size 1, requested type "simple"
   559                           ; Number of cases is 1, Range of values is 0 to 0
   560                           ; switch strategies available:
   561                           ; Name         Instructions Cycles
   562                           ; simple_byte            4     3 (average)
   563                           ; direct_byte           11     8 (fixed)
   564                           ; jumptable            260     6 (fixed)
   565                           ;	Chosen strategy is simple_byte
   566  03AB  082A               	movf	??_main+2,w
   567  03AC  3A00               	xorlw	0	; case 0
   568  03AD  1903               	skipnz
   569  03AE  2BB0               	goto	l2330
   570  03AF  2BA2               	goto	l2184
   571  03B0                     l2330:
   572                           
   573                           ; Switch size 1, requested type "simple"
   574                           ; Number of cases is 2, Range of values is 0 to 1
   575                           ; switch strategies available:
   576                           ; Name         Instructions Cycles
   577                           ; simple_byte            7     4 (average)
   578                           ; direct_byte           14     8 (fixed)
   579                           ; jumptable            260     6 (fixed)
   580                           ;	Chosen strategy is simple_byte
   581  03B0  0829               	movf	??_main+1,w
   582  03B1  3A00               	xorlw	0	; case 0
   583  03B2  1903               	skipnz
   584  03B3  2B73               	goto	l123
   585  03B4  3A01               	xorlw	1	; case 1
   586  03B5  1903               	skipnz
   587  03B6  2B8C               	goto	l2170
   588  03B7  2BA2               	goto	l2184
   589  03B8  120A  118A  280E   	ljmp	start
   590  03BB                     __end_of_main:
   591                           
   592                           	psect	text1
   593  00C3                     __ptext1:	
   594 ;; *************** function _leer3SEG *****************
   595 ;; Defined at:
   596 ;;		line 435 in file "mainP2.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   610 ;;      Params:         0       0       0       0       0
   611 ;;      Locals:         0       0       0       0       0
   612 ;;      Temps:          0       2       0       0       0
   613 ;;      Totals:         0       2       0       0       0
   614 ;;Total ram usage:        2 bytes
   615 ;; Hardware stack levels used:    1
   616 ;; Hardware stack levels required when called:    4
   617 ;; This function calls:
   618 ;;		_leerSERVOS
   619 ;; This function is called by:
   620 ;;		_main
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           
   625                           ;psect for function _leer3SEG
   626  00C3                     _leer3SEG:
   627  00C3                     l2028:	
   628                           ;incstack = 0
   629                           ; Regs used in _leer3SEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   630                           
   631                           
   632                           ;mainP2.c: 436:     switch(posicion){
   633  00C3  2923               	goto	l2060
   634  00C4                     l2030:
   635  00C4  3000               	movlw	0
   636  00C5  120A  118A  22C3  120A  118A  	fcall	_leerSERVOS
   637                           
   638                           ;mainP2.c: 438:             break;
   639  00CA  2959               	goto	l246
   640  00CB                     l2032:
   641  00CB  3004               	movlw	4
   642  00CC  120A  118A  22C3  120A  118A  	fcall	_leerSERVOS
   643                           
   644                           ;mainP2.c: 440:             break;
   645  00D1  2959               	goto	l246
   646  00D2                     l2034:
   647  00D2  3008               	movlw	8
   648  00D3  120A  118A  22C3  120A  118A  	fcall	_leerSERVOS
   649                           
   650                           ;mainP2.c: 442:             break;
   651  00D8  2959               	goto	l246
   652  00D9                     l2036:
   653  00D9  300C               	movlw	12
   654  00DA  120A  118A  22C3  120A  118A  	fcall	_leerSERVOS
   655                           
   656                           ;mainP2.c: 444:             break;
   657  00DF  2959               	goto	l246
   658  00E0                     l2038:
   659  00E0  3010               	movlw	16
   660  00E1  120A  118A  22C3  120A  118A  	fcall	_leerSERVOS
   661                           
   662                           ;mainP2.c: 446:             break;
   663  00E6  2959               	goto	l246
   664  00E7                     l2040:
   665  00E7  3014               	movlw	20
   666  00E8  120A  118A  22C3  120A  118A  	fcall	_leerSERVOS
   667                           
   668                           ;mainP2.c: 448:             break;
   669  00ED  2959               	goto	l246
   670  00EE                     l2042:
   671  00EE  3018               	movlw	24
   672  00EF  120A  118A  22C3  120A  118A  	fcall	_leerSERVOS
   673                           
   674                           ;mainP2.c: 450:             break;
   675  00F4  2959               	goto	l246
   676  00F5                     l2044:
   677  00F5  301C               	movlw	28
   678  00F6  120A  118A  22C3  120A  118A  	fcall	_leerSERVOS
   679                           
   680                           ;mainP2.c: 452:             break;
   681  00FB  2959               	goto	l246
   682  00FC                     l2046:
   683  00FC  3020               	movlw	32
   684  00FD  120A  118A  22C3  120A  118A  	fcall	_leerSERVOS
   685                           
   686                           ;mainP2.c: 454:             break;
   687  0102  2959               	goto	l246
   688  0103                     l2048:
   689  0103  3024               	movlw	36
   690  0104  120A  118A  22C3  120A  118A  	fcall	_leerSERVOS
   691                           
   692                           ;mainP2.c: 456:             break;
   693  0109  2959               	goto	l246
   694  010A                     l2050:
   695  010A  3028               	movlw	40
   696  010B  120A  118A  22C3  120A  118A  	fcall	_leerSERVOS
   697                           
   698                           ;mainP2.c: 458:             break;
   699  0110  2959               	goto	l246
   700  0111                     l2052:
   701  0111  302C               	movlw	44
   702  0112  120A  118A  22C3  120A  118A  	fcall	_leerSERVOS
   703                           
   704                           ;mainP2.c: 460:             break;
   705  0117  2959               	goto	l246
   706  0118                     l2054:
   707  0118  3030               	movlw	48
   708  0119  120A  118A  22C3  120A  118A  	fcall	_leerSERVOS
   709                           
   710                           ;mainP2.c: 462:             break;
   711  011E  2959               	goto	l246
   712  011F                     l245:	
   713                           ;mainP2.c: 463:         case 14:
   714                           
   715                           
   716                           ;mainP2.c: 464:             T1CONbits.TMR1ON = 0;
   717  011F  1010               	bcf	16,0	;volatile
   718  0120                     l2056:
   719                           
   720                           ;mainP2.c: 465:             posicion = 0;
   721  0120  01AB               	clrf	_posicion
   722                           
   723                           ;mainP2.c: 466:             PORTE = 0;
   724  0121  0189               	clrf	9	;volatile
   725                           
   726                           ;mainP2.c: 467:             break;
   727  0122  2959               	goto	l246
   728  0123                     l2060:
   729  0123  1283               	bcf	3,5	;RP0=0, select bank0
   730  0124  1303               	bcf	3,6	;RP1=0, select bank0
   731  0125  082B               	movf	_posicion,w
   732  0126  00A5               	movwf	??_leer3SEG
   733  0127  01A6               	clrf	??_leer3SEG+1
   734                           
   735                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   736                           ; Switch size 1, requested type "simple"
   737                           ; Number of cases is 1, Range of values is 0 to 0
   738                           ; switch strategies available:
   739                           ; Name         Instructions Cycles
   740                           ; simple_byte            4     3 (average)
   741                           ; direct_byte           11     8 (fixed)
   742                           ; jumptable            260     6 (fixed)
   743                           ;	Chosen strategy is simple_byte
   744  0128  0826               	movf	??_leer3SEG+1,w
   745  0129  3A00               	xorlw	0	; case 0
   746  012A  1903               	skipnz
   747  012B  292D               	goto	l2332
   748  012C  2959               	goto	l246
   749  012D                     l2332:
   750                           
   751                           ; Switch size 1, requested type "simple"
   752                           ; Number of cases is 14, Range of values is 0 to 14
   753                           ; switch strategies available:
   754                           ; Name         Instructions Cycles
   755                           ; simple_byte           43    22 (average)
   756                           ; direct_byte           53     8 (fixed)
   757                           ; jumptable            260     6 (fixed)
   758                           ;	Chosen strategy is simple_byte
   759  012D  0825               	movf	??_leer3SEG,w
   760  012E  3A00               	xorlw	0	; case 0
   761  012F  1903               	skipnz
   762  0130  28C4               	goto	l2030
   763  0131  3A01               	xorlw	1	; case 1
   764  0132  1903               	skipnz
   765  0133  28CB               	goto	l2032
   766  0134  3A03               	xorlw	3	; case 2
   767  0135  1903               	skipnz
   768  0136  28D2               	goto	l2034
   769  0137  3A01               	xorlw	1	; case 3
   770  0138  1903               	skipnz
   771  0139  28D9               	goto	l2036
   772  013A  3A07               	xorlw	7	; case 4
   773  013B  1903               	skipnz
   774  013C  28E0               	goto	l2038
   775  013D  3A01               	xorlw	1	; case 5
   776  013E  1903               	skipnz
   777  013F  28E7               	goto	l2040
   778  0140  3A03               	xorlw	3	; case 6
   779  0141  1903               	skipnz
   780  0142  28EE               	goto	l2042
   781  0143  3A01               	xorlw	1	; case 7
   782  0144  1903               	skipnz
   783  0145  28F5               	goto	l2044
   784  0146  3A0F               	xorlw	15	; case 8
   785  0147  1903               	skipnz
   786  0148  28FC               	goto	l2046
   787  0149  3A01               	xorlw	1	; case 9
   788  014A  1903               	skipnz
   789  014B  2903               	goto	l2048
   790  014C  3A03               	xorlw	3	; case 10
   791  014D  1903               	skipnz
   792  014E  290A               	goto	l2050
   793  014F  3A01               	xorlw	1	; case 11
   794  0150  1903               	skipnz
   795  0151  2911               	goto	l2052
   796  0152  3A07               	xorlw	7	; case 12
   797  0153  1903               	skipnz
   798  0154  2918               	goto	l2054
   799  0155  3A02               	xorlw	2	; case 14
   800  0156  1903               	skipnz
   801  0157  291F               	goto	l245
   802  0158  2959               	goto	l246
   803  0159                     l246:
   804  0159  0008               	return
   805  015A                     __end_of_leer3SEG:
   806                           
   807                           	psect	text2
   808  02C3                     __ptext2:	
   809 ;; *************** function _leerSERVOS *****************
   810 ;; Defined at:
   811 ;;		line 370 in file "mainP2.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;  desfase         1    wreg     unsigned char 
   814 ;; Auto vars:     Size  Location     Type
   815 ;;  desfase         1    3[BANK0 ] unsigned char 
   816 ;;  n               1    4[BANK0 ] unsigned char 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       0       0       0       0
   827 ;;      Locals:         0       2       0       0       0
   828 ;;      Temps:          0       2       0       0       0
   829 ;;      Totals:         0       4       0       0       0
   830 ;;Total ram usage:        4 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    3
   833 ;; This function calls:
   834 ;;		_leerposiciones
   835 ;; This function is called by:
   836 ;;		_leer3SEG
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           
   841                           ;psect for function _leerSERVOS
   842  02C3                     _leerSERVOS:
   843                           
   844                           ;incstack = 0
   845                           ; Regs used in _leerSERVOS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   846                           ;leerSERVOS@desfase stored from wreg
   847  02C3  1283               	bcf	3,5	;RP0=0, select bank0
   848  02C4  1303               	bcf	3,6	;RP1=0, select bank0
   849  02C5  00A3               	movwf	leerSERVOS@desfase
   850  02C6                     l2002:
   851                           
   852                           ;mainP2.c: 371:     for(uint8_t n=0;n<=3; n++){
   853  02C6  01A4               	clrf	leerSERVOS@n
   854  02C7  2AFC               	goto	l2018
   855  02C8                     l2008:
   856  02C8  0823               	movf	leerSERVOS@desfase,w
   857  02C9  0724               	addwf	leerSERVOS@n,w
   858  02CA  120A  118A  241F  120A  118A  	fcall	_leerposiciones
   859  02CF  1283               	bcf	3,5	;RP0=0, select bank0
   860  02D0  1303               	bcf	3,6	;RP1=0, select bank0
   861  02D1  00A1               	movwf	??_leerSERVOS
   862  02D2  0821               	movf	??_leerSERVOS,w
   863  02D3  00B1               	movwf	_POT1
   864                           
   865                           ;mainP2.c: 375:                 break;
   866  02D4  2B12               	goto	l2020
   867  02D5                     l2010:
   868  02D5  0823               	movf	leerSERVOS@desfase,w
   869  02D6  0724               	addwf	leerSERVOS@n,w
   870  02D7  120A  118A  241F  120A  118A  	fcall	_leerposiciones
   871  02DC  1283               	bcf	3,5	;RP0=0, select bank0
   872  02DD  1303               	bcf	3,6	;RP1=0, select bank0
   873  02DE  00A1               	movwf	??_leerSERVOS
   874  02DF  0821               	movf	??_leerSERVOS,w
   875  02E0  00B0               	movwf	_POT2
   876                           
   877                           ;mainP2.c: 377:                 break;
   878  02E1  2B12               	goto	l2020
   879  02E2                     l2012:
   880  02E2  0823               	movf	leerSERVOS@desfase,w
   881  02E3  0724               	addwf	leerSERVOS@n,w
   882  02E4  120A  118A  241F  120A  118A  	fcall	_leerposiciones
   883  02E9  1283               	bcf	3,5	;RP0=0, select bank0
   884  02EA  1303               	bcf	3,6	;RP1=0, select bank0
   885  02EB  00A1               	movwf	??_leerSERVOS
   886  02EC  0821               	movf	??_leerSERVOS,w
   887  02ED  00AF               	movwf	_POT3
   888                           
   889                           ;mainP2.c: 379:                 break;
   890  02EE  2B12               	goto	l2020
   891  02EF                     l2014:
   892  02EF  0823               	movf	leerSERVOS@desfase,w
   893  02F0  0724               	addwf	leerSERVOS@n,w
   894  02F1  120A  118A  241F  120A  118A  	fcall	_leerposiciones
   895  02F6  1283               	bcf	3,5	;RP0=0, select bank0
   896  02F7  1303               	bcf	3,6	;RP1=0, select bank0
   897  02F8  00A1               	movwf	??_leerSERVOS
   898  02F9  0821               	movf	??_leerSERVOS,w
   899  02FA  00AE               	movwf	_POT4
   900                           
   901                           ;mainP2.c: 381:                 break;
   902  02FB  2B12               	goto	l2020
   903  02FC                     l2018:
   904  02FC  0824               	movf	leerSERVOS@n,w
   905  02FD  00A1               	movwf	??_leerSERVOS
   906  02FE  01A2               	clrf	??_leerSERVOS+1
   907                           
   908                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   909                           ; Switch size 1, requested type "simple"
   910                           ; Number of cases is 1, Range of values is 0 to 0
   911                           ; switch strategies available:
   912                           ; Name         Instructions Cycles
   913                           ; simple_byte            4     3 (average)
   914                           ; direct_byte           11     8 (fixed)
   915                           ; jumptable            260     6 (fixed)
   916                           ;	Chosen strategy is simple_byte
   917  02FF  0822               	movf	??_leerSERVOS+1,w
   918  0300  3A00               	xorlw	0	; case 0
   919  0301  1903               	skipnz
   920  0302  2B04               	goto	l2334
   921  0303  2B12               	goto	l2020
   922  0304                     l2334:
   923                           
   924                           ; Switch size 1, requested type "simple"
   925                           ; Number of cases is 4, Range of values is 0 to 3
   926                           ; switch strategies available:
   927                           ; Name         Instructions Cycles
   928                           ; simple_byte           13     7 (average)
   929                           ; direct_byte           20     8 (fixed)
   930                           ; jumptable            260     6 (fixed)
   931                           ;	Chosen strategy is simple_byte
   932  0304  0821               	movf	??_leerSERVOS,w
   933  0305  3A00               	xorlw	0	; case 0
   934  0306  1903               	skipnz
   935  0307  2AC8               	goto	l2008
   936  0308  3A01               	xorlw	1	; case 1
   937  0309  1903               	skipnz
   938  030A  2AD5               	goto	l2010
   939  030B  3A03               	xorlw	3	; case 2
   940  030C  1903               	skipnz
   941  030D  2AE2               	goto	l2012
   942  030E  3A01               	xorlw	1	; case 3
   943  030F  1903               	skipnz
   944  0310  2AEF               	goto	l2014
   945  0311  2B12               	goto	l2020
   946  0312                     l2020:
   947                           
   948                           ;mainP2.c: 383:     }
   949  0312  3001               	movlw	1
   950  0313  00A1               	movwf	??_leerSERVOS
   951  0314  0821               	movf	??_leerSERVOS,w
   952  0315  07A4               	addwf	leerSERVOS@n,f
   953  0316                     l2022:
   954  0316  3004               	movlw	4
   955  0317  0224               	subwf	leerSERVOS@n,w
   956  0318  1C03               	skipc
   957  0319  2B1B               	goto	u641
   958  031A  2B1C               	goto	u640
   959  031B                     u641:
   960  031B  2AFC               	goto	l2018
   961  031C                     u640:
   962  031C                     l208:
   963  031C  0008               	return
   964  031D                     __end_of_leerSERVOS:
   965                           
   966                           	psect	text3
   967  041F                     __ptext3:	
   968 ;; *************** function _leerposiciones *****************
   969 ;; Defined at:
   970 ;;		line 363 in file "mainP2.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;  direccion       1    wreg     unsigned char 
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  direccion       1    0[BANK0 ] unsigned char 
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      unsigned char 
   977 ;; Registers used:
   978 ;;		wreg
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   984 ;;      Params:         0       0       0       0       0
   985 ;;      Locals:         0       1       0       0       0
   986 ;;      Temps:          0       0       0       0       0
   987 ;;      Totals:         0       1       0       0       0
   988 ;;Total ram usage:        1 bytes
   989 ;; Hardware stack levels used:    1
   990 ;; Hardware stack levels required when called:    2
   991 ;; This function calls:
   992 ;;		Nothing
   993 ;; This function is called by:
   994 ;;		_leerSERVOS
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           
   999                           ;psect for function _leerposiciones
  1000  041F                     _leerposiciones:
  1001                           
  1002                           ;incstack = 0
  1003                           ; Regs used in _leerposiciones: [wreg]
  1004                           ;leerposiciones@direccion stored from wreg
  1005  041F  1283               	bcf	3,5	;RP0=0, select bank0
  1006  0420  1303               	bcf	3,6	;RP1=0, select bank0
  1007  0421  00A0               	movwf	leerposiciones@direccion
  1008  0422                     l1966:
  1009                           
  1010                           ;mainP2.c: 364:     EEADR = direccion;
  1011  0422  0820               	movf	leerposiciones@direccion,w
  1012  0423  1283               	bcf	3,5	;RP0=0, select bank2
  1013  0424  1703               	bsf	3,6	;RP1=1, select bank2
  1014  0425  008D               	movwf	13	;volatile
  1015  0426                     l1968:
  1016                           
  1017                           ;mainP2.c: 365:     EECON1bits.EEPGD = 0;
  1018  0426  1683               	bsf	3,5	;RP0=1, select bank3
  1019  0427  1703               	bsf	3,6	;RP1=1, select bank3
  1020  0428  138C               	bcf	12,7	;volsfr
  1021  0429                     l1970:
  1022                           
  1023                           ;mainP2.c: 366:     EECON1bits.RD = 1;
  1024  0429  140C               	bsf	12,0	;volsfr
  1025                           
  1026                           ;mainP2.c: 367:     return EEDAT;
  1027  042A  1283               	bcf	3,5	;RP0=0, select bank2
  1028  042B  1703               	bsf	3,6	;RP1=1, select bank2
  1029  042C  080C               	movf	12,w	;volatile
  1030  042D                     l197:
  1031  042D  0008               	return
  1032  042E                     __end_of_leerposiciones:
  1033                           
  1034                           	psect	text4
  1035  015A                     __ptext4:	
  1036 ;; *************** function _guardar3SEG *****************
  1037 ;; Defined at:
  1038 ;;		line 386 in file "mainP2.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      void 
  1045 ;; Registers used:
  1046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1052 ;;      Params:         0       0       0       0       0
  1053 ;;      Locals:         0       0       0       0       0
  1054 ;;      Temps:          0       2       0       0       0
  1055 ;;      Totals:         0       2       0       0       0
  1056 ;;Total ram usage:        2 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    4
  1059 ;; This function calls:
  1060 ;;		_guardarservos
  1061 ;; This function is called by:
  1062 ;;		_main
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           
  1067                           ;psect for function _guardar3SEG
  1068  015A                     _guardar3SEG:
  1069  015A                     l2118:	
  1070                           ;incstack = 0
  1071                           ; Regs used in _guardar3SEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1072                           
  1073                           
  1074                           ;mainP2.c: 387:     switch(posicion){
  1075  015A  29BA               	goto	l2150
  1076  015B                     l2120:
  1077                           
  1078                           ;mainP2.c: 389:             guardarservos(0);
  1079  015B  3000               	movlw	0
  1080  015C  120A  118A  23BB  120A  118A  	fcall	_guardarservos
  1081                           
  1082                           ;mainP2.c: 390:             break;
  1083  0161  29F0               	goto	l227
  1084  0162                     l2122:
  1085                           
  1086                           ;mainP2.c: 392:             guardarservos(4);
  1087  0162  3004               	movlw	4
  1088  0163  120A  118A  23BB  120A  118A  	fcall	_guardarservos
  1089                           
  1090                           ;mainP2.c: 393:             break;
  1091  0168  29F0               	goto	l227
  1092  0169                     l2124:
  1093                           
  1094                           ;mainP2.c: 395:             guardarservos(8);
  1095  0169  3008               	movlw	8
  1096  016A  120A  118A  23BB  120A  118A  	fcall	_guardarservos
  1097                           
  1098                           ;mainP2.c: 396:             break;
  1099  016F  29F0               	goto	l227
  1100  0170                     l2126:
  1101                           
  1102                           ;mainP2.c: 398:             guardarservos(12);
  1103  0170  300C               	movlw	12
  1104  0171  120A  118A  23BB  120A  118A  	fcall	_guardarservos
  1105                           
  1106                           ;mainP2.c: 399:             break;
  1107  0176  29F0               	goto	l227
  1108  0177                     l2128:
  1109                           
  1110                           ;mainP2.c: 401:             guardarservos(16);
  1111  0177  3010               	movlw	16
  1112  0178  120A  118A  23BB  120A  118A  	fcall	_guardarservos
  1113                           
  1114                           ;mainP2.c: 402:             break;
  1115  017D  29F0               	goto	l227
  1116  017E                     l2130:
  1117                           
  1118                           ;mainP2.c: 404:             guardarservos(20);
  1119  017E  3014               	movlw	20
  1120  017F  120A  118A  23BB  120A  118A  	fcall	_guardarservos
  1121                           
  1122                           ;mainP2.c: 405:             break;
  1123  0184  29F0               	goto	l227
  1124  0185                     l2132:
  1125                           
  1126                           ;mainP2.c: 407:             guardarservos(24);
  1127  0185  3018               	movlw	24
  1128  0186  120A  118A  23BB  120A  118A  	fcall	_guardarservos
  1129                           
  1130                           ;mainP2.c: 408:             break;
  1131  018B  29F0               	goto	l227
  1132  018C                     l2134:
  1133                           
  1134                           ;mainP2.c: 410:             guardarservos(28);
  1135  018C  301C               	movlw	28
  1136  018D  120A  118A  23BB  120A  118A  	fcall	_guardarservos
  1137                           
  1138                           ;mainP2.c: 411:             break;
  1139  0192  29F0               	goto	l227
  1140  0193                     l2136:
  1141                           
  1142                           ;mainP2.c: 413:             guardarservos(32);
  1143  0193  3020               	movlw	32
  1144  0194  120A  118A  23BB  120A  118A  	fcall	_guardarservos
  1145                           
  1146                           ;mainP2.c: 414:             break;
  1147  0199  29F0               	goto	l227
  1148  019A                     l2138:
  1149                           
  1150                           ;mainP2.c: 416:             guardarservos(36);
  1151  019A  3024               	movlw	36
  1152  019B  120A  118A  23BB  120A  118A  	fcall	_guardarservos
  1153                           
  1154                           ;mainP2.c: 417:             break;
  1155  01A0  29F0               	goto	l227
  1156  01A1                     l2140:
  1157                           
  1158                           ;mainP2.c: 419:             guardarservos(40);
  1159  01A1  3028               	movlw	40
  1160  01A2  120A  118A  23BB  120A  118A  	fcall	_guardarservos
  1161                           
  1162                           ;mainP2.c: 420:             break;
  1163  01A7  29F0               	goto	l227
  1164  01A8                     l2142:
  1165                           
  1166                           ;mainP2.c: 422:             guardarservos(44);
  1167  01A8  302C               	movlw	44
  1168  01A9  120A  118A  23BB  120A  118A  	fcall	_guardarservos
  1169                           
  1170                           ;mainP2.c: 423:             break;
  1171  01AE  29F0               	goto	l227
  1172  01AF                     l2144:
  1173                           
  1174                           ;mainP2.c: 425:             guardarservos(48);
  1175  01AF  3030               	movlw	48
  1176  01B0  120A  118A  23BB  120A  118A  	fcall	_guardarservos
  1177                           
  1178                           ;mainP2.c: 426:             break;
  1179  01B5  29F0               	goto	l227
  1180  01B6                     l226:	
  1181                           ;mainP2.c: 427:         case 14:
  1182                           
  1183                           
  1184                           ;mainP2.c: 428:             T1CONbits.TMR1ON = 0;
  1185  01B6  1010               	bcf	16,0	;volatile
  1186  01B7                     l2146:
  1187                           
  1188                           ;mainP2.c: 429:             posicion = 0;
  1189  01B7  01AB               	clrf	_posicion
  1190                           
  1191                           ;mainP2.c: 430:             PORTE = 0;
  1192  01B8  0189               	clrf	9	;volatile
  1193                           
  1194                           ;mainP2.c: 431:             break;
  1195  01B9  29F0               	goto	l227
  1196  01BA                     l2150:
  1197  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1198  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1199  01BC  082B               	movf	_posicion,w
  1200  01BD  00A6               	movwf	??_guardar3SEG
  1201  01BE  01A7               	clrf	??_guardar3SEG+1
  1202                           
  1203                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1204                           ; Switch size 1, requested type "simple"
  1205                           ; Number of cases is 1, Range of values is 0 to 0
  1206                           ; switch strategies available:
  1207                           ; Name         Instructions Cycles
  1208                           ; simple_byte            4     3 (average)
  1209                           ; direct_byte           11     8 (fixed)
  1210                           ; jumptable            260     6 (fixed)
  1211                           ;	Chosen strategy is simple_byte
  1212  01BF  0827               	movf	??_guardar3SEG+1,w
  1213  01C0  3A00               	xorlw	0	; case 0
  1214  01C1  1903               	skipnz
  1215  01C2  29C4               	goto	l2336
  1216  01C3  29F0               	goto	l227
  1217  01C4                     l2336:
  1218                           
  1219                           ; Switch size 1, requested type "simple"
  1220                           ; Number of cases is 14, Range of values is 0 to 14
  1221                           ; switch strategies available:
  1222                           ; Name         Instructions Cycles
  1223                           ; simple_byte           43    22 (average)
  1224                           ; direct_byte           53     8 (fixed)
  1225                           ; jumptable            260     6 (fixed)
  1226                           ;	Chosen strategy is simple_byte
  1227  01C4  0826               	movf	??_guardar3SEG,w
  1228  01C5  3A00               	xorlw	0	; case 0
  1229  01C6  1903               	skipnz
  1230  01C7  295B               	goto	l2120
  1231  01C8  3A01               	xorlw	1	; case 1
  1232  01C9  1903               	skipnz
  1233  01CA  2962               	goto	l2122
  1234  01CB  3A03               	xorlw	3	; case 2
  1235  01CC  1903               	skipnz
  1236  01CD  2969               	goto	l2124
  1237  01CE  3A01               	xorlw	1	; case 3
  1238  01CF  1903               	skipnz
  1239  01D0  2970               	goto	l2126
  1240  01D1  3A07               	xorlw	7	; case 4
  1241  01D2  1903               	skipnz
  1242  01D3  2977               	goto	l2128
  1243  01D4  3A01               	xorlw	1	; case 5
  1244  01D5  1903               	skipnz
  1245  01D6  297E               	goto	l2130
  1246  01D7  3A03               	xorlw	3	; case 6
  1247  01D8  1903               	skipnz
  1248  01D9  2985               	goto	l2132
  1249  01DA  3A01               	xorlw	1	; case 7
  1250  01DB  1903               	skipnz
  1251  01DC  298C               	goto	l2134
  1252  01DD  3A0F               	xorlw	15	; case 8
  1253  01DE  1903               	skipnz
  1254  01DF  2993               	goto	l2136
  1255  01E0  3A01               	xorlw	1	; case 9
  1256  01E1  1903               	skipnz
  1257  01E2  299A               	goto	l2138
  1258  01E3  3A03               	xorlw	3	; case 10
  1259  01E4  1903               	skipnz
  1260  01E5  29A1               	goto	l2140
  1261  01E6  3A01               	xorlw	1	; case 11
  1262  01E7  1903               	skipnz
  1263  01E8  29A8               	goto	l2142
  1264  01E9  3A07               	xorlw	7	; case 12
  1265  01EA  1903               	skipnz
  1266  01EB  29AF               	goto	l2144
  1267  01EC  3A02               	xorlw	2	; case 14
  1268  01ED  1903               	skipnz
  1269  01EE  29B6               	goto	l226
  1270  01EF  29F0               	goto	l227
  1271  01F0                     l227:
  1272  01F0  0008               	return
  1273  01F1                     __end_of_guardar3SEG:
  1274                           
  1275                           	psect	text5
  1276  03BB                     __ptext5:	
  1277 ;; *************** function _guardarservos *****************
  1278 ;; Defined at:
  1279 ;;		line 346 in file "mainP2.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  desfase         1    wreg     unsigned char 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  desfase         1    4[BANK0 ] unsigned char 
  1284 ;;  n               1    5[BANK0 ] unsigned char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1294 ;;      Params:         0       0       0       0       0
  1295 ;;      Locals:         0       2       0       0       0
  1296 ;;      Temps:          0       2       0       0       0
  1297 ;;      Totals:         0       4       0       0       0
  1298 ;;Total ram usage:        4 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    3
  1301 ;; This function calls:
  1302 ;;		_guardarposiciones
  1303 ;; This function is called by:
  1304 ;;		_guardar3SEG
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           
  1309                           ;psect for function _guardarservos
  1310  03BB                     _guardarservos:
  1311                           
  1312                           ;incstack = 0
  1313                           ; Regs used in _guardarservos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1314                           ;guardarservos@desfase stored from wreg
  1315  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  1316  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  1317  03BD  00A4               	movwf	guardarservos@desfase
  1318  03BE                     l1974:
  1319                           
  1320                           ;mainP2.c: 347:     for(uint8_t n=0;n<=3;n++){
  1321  03BE  01A5               	clrf	guardarservos@n
  1322  03BF  2BD4               	goto	l1990
  1323  03C0                     l1980:
  1324  03C0  0831               	movf	_POT1,w
  1325  03C1  00A2               	movwf	??_guardarservos
  1326  03C2  0822               	movf	??_guardarservos,w
  1327  03C3  00AC               	movwf	_datEEPROM
  1328                           
  1329                           ;mainP2.c: 351:                 break;
  1330  03C4  2BEA               	goto	l1992
  1331  03C5                     l1982:
  1332  03C5  0830               	movf	_POT2,w
  1333  03C6  00A2               	movwf	??_guardarservos
  1334  03C7  0822               	movf	??_guardarservos,w
  1335  03C8  00AC               	movwf	_datEEPROM
  1336                           
  1337                           ;mainP2.c: 353:                 break;
  1338  03C9  2BEA               	goto	l1992
  1339  03CA                     l1984:
  1340  03CA  082F               	movf	_POT3,w
  1341  03CB  00A2               	movwf	??_guardarservos
  1342  03CC  0822               	movf	??_guardarservos,w
  1343  03CD  00AC               	movwf	_datEEPROM
  1344                           
  1345                           ;mainP2.c: 355:                 break;
  1346  03CE  2BEA               	goto	l1992
  1347  03CF                     l1986:
  1348  03CF  082E               	movf	_POT4,w
  1349  03D0  00A2               	movwf	??_guardarservos
  1350  03D1  0822               	movf	??_guardarservos,w
  1351  03D2  00AC               	movwf	_datEEPROM
  1352                           
  1353                           ;mainP2.c: 357:                 break;
  1354  03D3  2BEA               	goto	l1992
  1355  03D4                     l1990:
  1356  03D4  0825               	movf	guardarservos@n,w
  1357  03D5  00A2               	movwf	??_guardarservos
  1358  03D6  01A3               	clrf	??_guardarservos+1
  1359                           
  1360                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1361                           ; Switch size 1, requested type "simple"
  1362                           ; Number of cases is 1, Range of values is 0 to 0
  1363                           ; switch strategies available:
  1364                           ; Name         Instructions Cycles
  1365                           ; simple_byte            4     3 (average)
  1366                           ; direct_byte           11     8 (fixed)
  1367                           ; jumptable            260     6 (fixed)
  1368                           ;	Chosen strategy is simple_byte
  1369  03D7  0823               	movf	??_guardarservos+1,w
  1370  03D8  3A00               	xorlw	0	; case 0
  1371  03D9  1903               	skipnz
  1372  03DA  2BDC               	goto	l2338
  1373  03DB  2BEA               	goto	l1992
  1374  03DC                     l2338:
  1375                           
  1376                           ; Switch size 1, requested type "simple"
  1377                           ; Number of cases is 4, Range of values is 0 to 3
  1378                           ; switch strategies available:
  1379                           ; Name         Instructions Cycles
  1380                           ; simple_byte           13     7 (average)
  1381                           ; direct_byte           20     8 (fixed)
  1382                           ; jumptable            260     6 (fixed)
  1383                           ;	Chosen strategy is simple_byte
  1384  03DC  0822               	movf	??_guardarservos,w
  1385  03DD  3A00               	xorlw	0	; case 0
  1386  03DE  1903               	skipnz
  1387  03DF  2BC0               	goto	l1980
  1388  03E0  3A01               	xorlw	1	; case 1
  1389  03E1  1903               	skipnz
  1390  03E2  2BC5               	goto	l1982
  1391  03E3  3A03               	xorlw	3	; case 2
  1392  03E4  1903               	skipnz
  1393  03E5  2BCA               	goto	l1984
  1394  03E6  3A01               	xorlw	1	; case 3
  1395  03E7  1903               	skipnz
  1396  03E8  2BCF               	goto	l1986
  1397  03E9  2BEA               	goto	l1992
  1398  03EA                     l1992:
  1399                           
  1400                           ;mainP2.c: 359:         guardarposiciones(datEEPROM,n+desfase);
  1401  03EA  0824               	movf	guardarservos@desfase,w
  1402  03EB  0725               	addwf	guardarservos@n,w
  1403  03EC  00A2               	movwf	??_guardarservos
  1404  03ED  0822               	movf	??_guardarservos,w
  1405  03EE  00A0               	movwf	guardarposiciones@direccion
  1406  03EF  082C               	movf	_datEEPROM,w
  1407  03F0  120A  118A  2402  120A  118A  	fcall	_guardarposiciones
  1408  03F5                     l1994:
  1409                           
  1410                           ;mainP2.c: 360:     }
  1411  03F5  3001               	movlw	1
  1412  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  1413  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  1414  03F8  00A2               	movwf	??_guardarservos
  1415  03F9  0822               	movf	??_guardarservos,w
  1416  03FA  07A5               	addwf	guardarservos@n,f
  1417  03FB                     l1996:
  1418  03FB  3004               	movlw	4
  1419  03FC  0225               	subwf	guardarservos@n,w
  1420  03FD  1C03               	skipc
  1421  03FE  2C00               	goto	u631
  1422  03FF  2C01               	goto	u630
  1423  0400                     u631:
  1424  0400  2BD4               	goto	l1990
  1425  0401                     u630:
  1426  0401                     l194:
  1427  0401  0008               	return
  1428  0402                     __end_of_guardarservos:
  1429                           
  1430                           	psect	text6
  1431  0402                     __ptext6:	
  1432 ;; *************** function _guardarposiciones *****************
  1433 ;; Defined at:
  1434 ;;		line 332 in file "mainP2.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;  guardar         1    wreg     unsigned char 
  1437 ;;  direccion       1    0[BANK0 ] unsigned char 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;  guardar         1    1[BANK0 ] unsigned char 
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  1    wreg      void 
  1442 ;; Registers used:
  1443 ;;		wreg
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1449 ;;      Params:         0       1       0       0       0
  1450 ;;      Locals:         0       1       0       0       0
  1451 ;;      Temps:          0       0       0       0       0
  1452 ;;      Totals:         0       2       0       0       0
  1453 ;;Total ram usage:        2 bytes
  1454 ;; Hardware stack levels used:    1
  1455 ;; Hardware stack levels required when called:    2
  1456 ;; This function calls:
  1457 ;;		Nothing
  1458 ;; This function is called by:
  1459 ;;		_guardarservos
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           
  1464                           ;psect for function _guardarposiciones
  1465  0402                     _guardarposiciones:
  1466                           
  1467                           ;incstack = 0
  1468                           ; Regs used in _guardarposiciones: [wreg]
  1469                           ;guardarposiciones@guardar stored from wreg
  1470  0402  1283               	bcf	3,5	;RP0=0, select bank0
  1471  0403  1303               	bcf	3,6	;RP1=0, select bank0
  1472  0404  00A1               	movwf	guardarposiciones@guardar
  1473  0405                     l1956:
  1474                           
  1475                           ;mainP2.c: 333:     EEADR = direccion;
  1476  0405  0820               	movf	guardarposiciones@direccion,w
  1477  0406  1283               	bcf	3,5	;RP0=0, select bank2
  1478  0407  1703               	bsf	3,6	;RP1=1, select bank2
  1479  0408  008D               	movwf	13	;volatile
  1480                           
  1481                           ;mainP2.c: 334:     EEDAT = guardar;
  1482  0409  1283               	bcf	3,5	;RP0=0, select bank0
  1483  040A  1303               	bcf	3,6	;RP1=0, select bank0
  1484  040B  0821               	movf	guardarposiciones@guardar,w
  1485  040C  1283               	bcf	3,5	;RP0=0, select bank2
  1486  040D  1703               	bsf	3,6	;RP1=1, select bank2
  1487  040E  008C               	movwf	12	;volatile
  1488  040F                     l1958:
  1489                           
  1490                           ;mainP2.c: 335:     EECON1bits.WREN = 1;
  1491  040F  1683               	bsf	3,5	;RP0=1, select bank3
  1492  0410  1703               	bsf	3,6	;RP1=1, select bank3
  1493  0411  150C               	bsf	12,2	;volsfr
  1494  0412                     l1960:
  1495                           
  1496                           ;mainP2.c: 336:     INTCONbits.GIE = 0;
  1497  0412  138B               	bcf	11,7	;volatile
  1498                           
  1499                           ;mainP2.c: 338:     EECON2 = 0X55;
  1500  0413  3055               	movlw	85
  1501  0414  008D               	movwf	13	;volsfr
  1502                           
  1503                           ;mainP2.c: 339:     EECON2 = 0XAA;
  1504  0415  30AA               	movlw	170
  1505  0416  008D               	movwf	13	;volsfr
  1506  0417                     l1962:
  1507                           
  1508                           ;mainP2.c: 340:     EECON1bits.WR = 1;
  1509  0417  148C               	bsf	12,1	;volsfr
  1510  0418                     l1964:
  1511                           
  1512                           ;mainP2.c: 341:     INTCONbits.GIE = 1;
  1513  0418  178B               	bsf	11,7	;volatile
  1514  0419                     l180:	
  1515                           ;mainP2.c: 342:     while(EECON1bits.WR);
  1516                           
  1517  0419  188C               	btfsc	12,1	;volsfr
  1518  041A  2C1C               	goto	u621
  1519  041B  2C1D               	goto	u620
  1520  041C                     u621:
  1521  041C  2C19               	goto	l180
  1522  041D                     u620:
  1523  041D                     l182:
  1524                           
  1525                           ;mainP2.c: 343:     EECON1bits.WREN = 0;
  1526  041D  110C               	bcf	12,2	;volsfr
  1527  041E                     l183:
  1528  041E  0008               	return
  1529  041F                     __end_of_guardarposiciones:
  1530                           
  1531                           	psect	text7
  1532  0264                     __ptext7:	
  1533 ;; *************** function _configuraciones *****************
  1534 ;; Defined at:
  1535 ;;		line 170 in file "mainP2.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;		None
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, status,2, status,0
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1549 ;;      Params:         0       0       0       0       0
  1550 ;;      Locals:         0       0       0       0       0
  1551 ;;      Temps:          0       0       0       0       0
  1552 ;;      Totals:         0       0       0       0       0
  1553 ;;Total ram usage:        0 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    2
  1556 ;; This function calls:
  1557 ;;		Nothing
  1558 ;; This function is called by:
  1559 ;;		_main
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           
  1564                           ;psect for function _configuraciones
  1565  0264                     _configuraciones:
  1566  0264                     l1514:	
  1567                           ;incstack = 0
  1568                           ; Regs used in _configuraciones: [wreg+status,2+status,0]
  1569                           
  1570                           
  1571                           ;mainP2.c: 172:     ANSEL = 0X0F;
  1572  0264  300F               	movlw	15
  1573  0265  1683               	bsf	3,5	;RP0=1, select bank3
  1574  0266  1703               	bsf	3,6	;RP1=1, select bank3
  1575  0267  0088               	movwf	8	;volatile
  1576  0268                     l1516:
  1577                           
  1578                           ;mainP2.c: 173:     ANSELH = 0X00;
  1579  0268  0189               	clrf	9	;volatile
  1580  0269                     l1518:
  1581                           
  1582                           ;mainP2.c: 174:     TRISA = 0X0F;
  1583  0269  300F               	movlw	15
  1584  026A  1683               	bsf	3,5	;RP0=1, select bank1
  1585  026B  1303               	bcf	3,6	;RP1=0, select bank1
  1586  026C  0085               	movwf	5	;volatile
  1587  026D                     l1520:
  1588                           
  1589                           ;mainP2.c: 175:     TRISB = 0X07;
  1590  026D  3007               	movlw	7
  1591  026E  0086               	movwf	6	;volatile
  1592  026F                     l1522:
  1593                           
  1594                           ;mainP2.c: 176:     TRISC = 0X80;
  1595  026F  3080               	movlw	128
  1596  0270  0087               	movwf	7	;volatile
  1597                           
  1598                           ;mainP2.c: 177:     TRISD = 0X00;
  1599  0271  0188               	clrf	8	;volatile
  1600                           
  1601                           ;mainP2.c: 178:     TRISE = 0X00;
  1602  0272  0189               	clrf	9	;volatile
  1603                           
  1604                           ;mainP2.c: 179:     PORTA = 0X00;
  1605  0273  1283               	bcf	3,5	;RP0=0, select bank0
  1606  0274  1303               	bcf	3,6	;RP1=0, select bank0
  1607  0275  0185               	clrf	5	;volatile
  1608                           
  1609                           ;mainP2.c: 180:     PORTB = 0X00;
  1610  0276  0186               	clrf	6	;volatile
  1611                           
  1612                           ;mainP2.c: 181:     PORTC = 0X00;
  1613  0277  0187               	clrf	7	;volatile
  1614                           
  1615                           ;mainP2.c: 182:     PORTD = 0X00;
  1616  0278  0188               	clrf	8	;volatile
  1617                           
  1618                           ;mainP2.c: 183:     PORTE = 0X00;
  1619  0279  0189               	clrf	9	;volatile
  1620                           
  1621                           ;mainP2.c: 184:     posicion = 0;
  1622  027A  01AB               	clrf	_posicion
  1623  027B                     l1524:
  1624                           
  1625                           ;mainP2.c: 186:     OSCCONbits.IRCF = 0b111;
  1626  027B  3070               	movlw	112
  1627  027C  1683               	bsf	3,5	;RP0=1, select bank1
  1628  027D  1303               	bcf	3,6	;RP1=0, select bank1
  1629  027E  048F               	iorwf	15,f	;volatile
  1630  027F                     l1526:
  1631                           
  1632                           ;mainP2.c: 187:     OSCCONbits.SCS = 0b1;
  1633  027F  140F               	bsf	15,0	;volatile
  1634  0280                     l1528:
  1635                           
  1636                           ;mainP2.c: 190:     T1CONbits.T1CKPS = 0B11;
  1637  0280  3030               	movlw	48
  1638  0281  1283               	bcf	3,5	;RP0=0, select bank0
  1639  0282  1303               	bcf	3,6	;RP1=0, select bank0
  1640  0283  0490               	iorwf	16,f	;volatile
  1641  0284                     l1530:
  1642                           
  1643                           ;mainP2.c: 191:     TMR1H = 0B00001011;
  1644  0284  300B               	movlw	11
  1645  0285  008F               	movwf	15	;volatile
  1646  0286                     l1532:
  1647                           
  1648                           ;mainP2.c: 192:     TMR1L = 0B11010001;
  1649  0286  30D1               	movlw	209
  1650  0287  008E               	movwf	14	;volatile
  1651  0288                     l1534:
  1652                           
  1653                           ;mainP2.c: 193:     T1CONbits.TMR1ON = 0;
  1654  0288  1010               	bcf	16,0	;volatile
  1655  0289                     l1536:
  1656                           
  1657                           ;mainP2.c: 196:     INTCONbits.TMR0IF = 0;
  1658  0289  110B               	bcf	11,2	;volatile
  1659  028A                     l1538:
  1660                           
  1661                           ;mainP2.c: 197:     INTCONbits.TMR0IE = 1;
  1662  028A  168B               	bsf	11,5	;volatile
  1663  028B                     l1540:
  1664                           
  1665                           ;mainP2.c: 198:     PIR1bits.TMR1IF = 0;
  1666  028B  100C               	bcf	12,0	;volatile
  1667  028C                     l1542:
  1668                           
  1669                           ;mainP2.c: 199:     PIE1bits.TMR1IE = 1;
  1670  028C  1683               	bsf	3,5	;RP0=1, select bank1
  1671  028D  1303               	bcf	3,6	;RP1=0, select bank1
  1672  028E  140C               	bsf	12,0	;volatile
  1673  028F                     l1544:
  1674                           
  1675                           ;mainP2.c: 200:     INTCONbits.RBIF = 0;
  1676  028F  100B               	bcf	11,0	;volatile
  1677  0290                     l1546:
  1678                           
  1679                           ;mainP2.c: 201:     INTCONbits.RBIE = 0;
  1680  0290  118B               	bcf	11,3	;volatile
  1681  0291                     l1548:
  1682                           
  1683                           ;mainP2.c: 202:     INTCONbits.PEIE = 1;
  1684  0291  170B               	bsf	11,6	;volatile
  1685  0292                     l1550:
  1686                           
  1687                           ;mainP2.c: 203:     PIE1bits.RCIE = 1;
  1688  0292  168C               	bsf	12,5	;volatile
  1689  0293                     l1552:
  1690                           
  1691                           ;mainP2.c: 204:     INTCONbits.GIE = 1;
  1692  0293  178B               	bsf	11,7	;volatile
  1693  0294                     l1554:
  1694                           
  1695                           ;mainP2.c: 207:     IOCBbits.IOCB0 = 1;
  1696  0294  1416               	bsf	22,0	;volatile
  1697  0295                     l1556:
  1698                           
  1699                           ;mainP2.c: 208:     IOCBbits.IOCB1 = 1;
  1700  0295  1496               	bsf	22,1	;volatile
  1701  0296                     l1558:
  1702                           
  1703                           ;mainP2.c: 209:     IOCBbits.IOCB2 = 1;
  1704  0296  1516               	bsf	22,2	;volatile
  1705  0297                     l1560:
  1706                           
  1707                           ;mainP2.c: 212:     ADCON0bits.ADCS = 0b10;
  1708  0297  1283               	bcf	3,5	;RP0=0, select bank0
  1709  0298  1303               	bcf	3,6	;RP1=0, select bank0
  1710  0299  081F               	movf	31,w	;volatile
  1711  029A  393F               	andlw	-193
  1712  029B  3880               	iorlw	128
  1713  029C  009F               	movwf	31	;volatile
  1714  029D                     l1562:
  1715                           
  1716                           ;mainP2.c: 213:     ADCON0bits.CHS = 0b0000;
  1717  029D  30C3               	movlw	-61
  1718  029E  059F               	andwf	31,f	;volatile
  1719  029F                     l1564:
  1720                           
  1721                           ;mainP2.c: 214:     ADCON0bits.GO = 0b0;
  1722  029F  109F               	bcf	31,1	;volatile
  1723  02A0                     l1566:
  1724                           
  1725                           ;mainP2.c: 215:     ADCON0bits.ADON = 0b1;
  1726  02A0  141F               	bsf	31,0	;volatile
  1727  02A1                     l1568:
  1728                           
  1729                           ;mainP2.c: 216:     ADCON1bits.ADFM = 0b0;
  1730  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  1731  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  1732  02A3  139F               	bcf	31,7	;volatile
  1733  02A4                     l1570:
  1734                           
  1735                           ;mainP2.c: 217:     ADCON1bits.VCFG1 = 0b0;
  1736  02A4  129F               	bcf	31,5	;volatile
  1737  02A5                     l1572:
  1738                           
  1739                           ;mainP2.c: 218:     ADCON1bits.VCFG0 = 0b0;
  1740  02A5  121F               	bcf	31,4	;volatile
  1741  02A6                     l1574:
  1742                           
  1743                           ;mainP2.c: 221:     SPBRG = 12;
  1744  02A6  300C               	movlw	12
  1745  02A7  0099               	movwf	25	;volatile
  1746  02A8                     l1576:
  1747                           
  1748                           ;mainP2.c: 222:     TXSTAbits.BRGH = 0;
  1749  02A8  1118               	bcf	24,2	;volatile
  1750  02A9                     l1578:
  1751                           
  1752                           ;mainP2.c: 223:     TXSTAbits.TXEN = 1;
  1753  02A9  1698               	bsf	24,5	;volatile
  1754  02AA                     l1580:
  1755                           
  1756                           ;mainP2.c: 224:     RCSTAbits.CREN = 1;
  1757  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1758  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1759  02AC  1618               	bsf	24,4	;volatile
  1760  02AD                     l1582:
  1761                           
  1762                           ;mainP2.c: 225:     TXSTAbits.SYNC = 0;
  1763  02AD  1683               	bsf	3,5	;RP0=1, select bank1
  1764  02AE  1303               	bcf	3,6	;RP1=0, select bank1
  1765  02AF  1218               	bcf	24,4	;volatile
  1766  02B0                     l1584:
  1767                           
  1768                           ;mainP2.c: 226:     RCSTAbits.SPEN = 1;
  1769  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1770  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1771  02B2  1798               	bsf	24,7	;volatile
  1772  02B3                     l1586:
  1773                           
  1774                           ;mainP2.c: 229:     OSCCONbits.SCS = 1;
  1775  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  1776  02B4  1303               	bcf	3,6	;RP1=0, select bank1
  1777  02B5  140F               	bsf	15,0	;volatile
  1778  02B6                     l1588:
  1779                           
  1780                           ;mainP2.c: 230:     OPTION_REGbits.T0CS = 0;
  1781  02B6  1281               	bcf	1,5	;volatile
  1782  02B7                     l1590:
  1783                           
  1784                           ;mainP2.c: 231:     OPTION_REGbits.PSA = 0;
  1785  02B7  1181               	bcf	1,3	;volatile
  1786  02B8                     l1592:
  1787                           
  1788                           ;mainP2.c: 232:     OPTION_REGbits.PS2 = 0;
  1789  02B8  1101               	bcf	1,2	;volatile
  1790  02B9                     l1594:
  1791                           
  1792                           ;mainP2.c: 233:     OPTION_REGbits.PS1 = 1;
  1793  02B9  1481               	bsf	1,1	;volatile
  1794  02BA                     l1596:
  1795                           
  1796                           ;mainP2.c: 234:     OPTION_REGbits.PS0 = 1;
  1797  02BA  1401               	bsf	1,0	;volatile
  1798  02BB                     l1598:
  1799                           
  1800                           ;mainP2.c: 235:     INTCONbits.T0IF = 0;
  1801  02BB  110B               	bcf	11,2	;volatile
  1802  02BC                     l1600:
  1803                           
  1804                           ;mainP2.c: 236:     TMR0 = 131;
  1805  02BC  3083               	movlw	131
  1806  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1807  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1808  02BF  0081               	movwf	1	;volatile
  1809  02C0                     l1602:
  1810                           
  1811                           ;mainP2.c: 237:     SERVOS.bit1 = 0;
  1812  02C0  12B3               	bcf	_SERVOS,5
  1813  02C1                     l1604:
  1814                           
  1815                           ;mainP2.c: 238:     SERVOS.modo = 0;
  1816  02C1  1333               	bcf	_SERVOS,6
  1817  02C2                     l135:
  1818  02C2  0008               	return
  1819  02C3                     __end_of_configuraciones:
  1820                           
  1821                           	psect	text8
  1822  0022                     __ptext8:	
  1823 ;; *************** function _AnalogReadServo *****************
  1824 ;; Defined at:
  1825 ;;		line 279 in file "mainP2.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;		None
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1839 ;;      Params:         0       0       0       0       0
  1840 ;;      Locals:         0       0       0       0       0
  1841 ;;      Temps:          0       2       0       0       0
  1842 ;;      Totals:         0       2       0       0       0
  1843 ;;Total ram usage:        2 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:    2
  1846 ;; This function calls:
  1847 ;;		Nothing
  1848 ;; This function is called by:
  1849 ;;		_main
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           
  1854                           ;psect for function _AnalogReadServo
  1855  0022                     _AnalogReadServo:
  1856  0022                     l2066:	
  1857                           ;incstack = 0
  1858                           ; Regs used in _AnalogReadServo: [wreg-fsr0h+status,2+status,0]
  1859                           
  1860                           
  1861                           ;mainP2.c: 281:     if(!ADCON0bits.GO){
  1862  0022  1283               	bcf	3,5	;RP0=0, select bank0
  1863  0023  1303               	bcf	3,6	;RP1=0, select bank0
  1864  0024  189F               	btfsc	31,1	;volatile
  1865  0025  2827               	goto	u651
  1866  0026  2828               	goto	u650
  1867  0027                     u651:
  1868  0027  28C2               	goto	l171
  1869  0028                     u650:
  1870  0028  289F               	goto	l2112
  1871  0029                     l2070:
  1872                           
  1873                           ;mainP2.c: 284:                  POT2 = ADRESH;
  1874  0029  081E               	movf	30,w	;volatile
  1875  002A  00A0               	movwf	??_AnalogReadServo
  1876  002B  0820               	movf	??_AnalogReadServo,w
  1877  002C  00B0               	movwf	_POT2
  1878                           
  1879                           ;mainP2.c: 285:             break;
  1880  002D  28C2               	goto	l171
  1881  002E                     l2072:
  1882                           
  1883                           ;mainP2.c: 288:                 ADCON0bits.CHS = 2;
  1884  002E  081F               	movf	31,w	;volatile
  1885  002F  39C3               	andlw	-61
  1886  0030  3808               	iorlw	8
  1887  0031  009F               	movwf	31	;volatile
  1888  0032                     l2074:
  1889                           
  1890                           ;mainP2.c: 289:                 if(POT2>190) POT2 = 160;
  1891  0032  30BF               	movlw	191
  1892  0033  0230               	subwf	_POT2,w
  1893  0034  1C03               	skipc
  1894  0035  2837               	goto	u661
  1895  0036  2838               	goto	u660
  1896  0037                     u661:
  1897  0037  283C               	goto	l157
  1898  0038                     u660:
  1899  0038                     l2076:
  1900  0038  30A0               	movlw	160
  1901  0039  00A0               	movwf	??_AnalogReadServo
  1902  003A  0820               	movf	??_AnalogReadServo,w
  1903  003B  00B0               	movwf	_POT2
  1904  003C                     l157:
  1905                           
  1906                           ;mainP2.c: 290:                 if(POT2<10) POT2 = 10;
  1907  003C  300A               	movlw	10
  1908  003D  0230               	subwf	_POT2,w
  1909  003E  1803               	skipnc
  1910  003F  2841               	goto	u671
  1911  0040  2842               	goto	u670
  1912  0041                     u671:
  1913  0041  28C2               	goto	l171
  1914  0042                     u670:
  1915  0042                     l2078:
  1916  0042  300A               	movlw	10
  1917  0043  00A0               	movwf	??_AnalogReadServo
  1918  0044  0820               	movf	??_AnalogReadServo,w
  1919  0045  00B0               	movwf	_POT2
  1920  0046  28C2               	goto	l171
  1921  0047                     l2080:
  1922                           
  1923                           ;mainP2.c: 294:                 POT3 = ADRESH;
  1924  0047  081E               	movf	30,w	;volatile
  1925  0048  00A0               	movwf	??_AnalogReadServo
  1926  0049  0820               	movf	??_AnalogReadServo,w
  1927  004A  00AF               	movwf	_POT3
  1928                           
  1929                           ;mainP2.c: 295:             break;
  1930  004B  28C2               	goto	l171
  1931  004C                     l2082:
  1932                           
  1933                           ;mainP2.c: 298:                 ADCON0bits.CHS = 3;
  1934  004C  081F               	movf	31,w	;volatile
  1935  004D  39C3               	andlw	-61
  1936  004E  380C               	iorlw	12
  1937  004F  009F               	movwf	31	;volatile
  1938  0050                     l2084:
  1939                           
  1940                           ;mainP2.c: 299:                 if(POT3>190) POT3 = 160;
  1941  0050  30BF               	movlw	191
  1942  0051  022F               	subwf	_POT3,w
  1943  0052  1C03               	skipc
  1944  0053  2855               	goto	u681
  1945  0054  2856               	goto	u680
  1946  0055                     u681:
  1947  0055  285A               	goto	l161
  1948  0056                     u680:
  1949  0056                     l2086:
  1950  0056  30A0               	movlw	160
  1951  0057  00A0               	movwf	??_AnalogReadServo
  1952  0058  0820               	movf	??_AnalogReadServo,w
  1953  0059  00AF               	movwf	_POT3
  1954  005A                     l161:
  1955                           
  1956                           ;mainP2.c: 300:                 if(POT3<10) POT3 = 10;
  1957  005A  300A               	movlw	10
  1958  005B  022F               	subwf	_POT3,w
  1959  005C  1803               	skipnc
  1960  005D  285F               	goto	u691
  1961  005E  2860               	goto	u690
  1962  005F                     u691:
  1963  005F  28C2               	goto	l171
  1964  0060                     u690:
  1965  0060                     l2088:
  1966  0060  300A               	movlw	10
  1967  0061  00A0               	movwf	??_AnalogReadServo
  1968  0062  0820               	movf	??_AnalogReadServo,w
  1969  0063  00AF               	movwf	_POT3
  1970  0064  28C2               	goto	l171
  1971  0065                     l2090:
  1972                           
  1973                           ;mainP2.c: 304:                 POT4 = ADRESH;
  1974  0065  081E               	movf	30,w	;volatile
  1975  0066  00A0               	movwf	??_AnalogReadServo
  1976  0067  0820               	movf	??_AnalogReadServo,w
  1977  0068  00AE               	movwf	_POT4
  1978                           
  1979                           ;mainP2.c: 305:             break;
  1980  0069  28C2               	goto	l171
  1981  006A                     l2092:
  1982                           
  1983                           ;mainP2.c: 308:                 ADCON0bits.CHS = 0;
  1984  006A  30C3               	movlw	-61
  1985  006B  059F               	andwf	31,f	;volatile
  1986  006C                     l2094:
  1987                           
  1988                           ;mainP2.c: 309:                 if(POT4>190) POT4 = 160;
  1989  006C  30BF               	movlw	191
  1990  006D  022E               	subwf	_POT4,w
  1991  006E  1C03               	skipc
  1992  006F  2871               	goto	u701
  1993  0070  2872               	goto	u700
  1994  0071                     u701:
  1995  0071  2876               	goto	l165
  1996  0072                     u700:
  1997  0072                     l2096:
  1998  0072  30A0               	movlw	160
  1999  0073  00A0               	movwf	??_AnalogReadServo
  2000  0074  0820               	movf	??_AnalogReadServo,w
  2001  0075  00AE               	movwf	_POT4
  2002  0076                     l165:
  2003                           
  2004                           ;mainP2.c: 310:                 if(POT4<10) POT4 = 10;
  2005  0076  300A               	movlw	10
  2006  0077  022E               	subwf	_POT4,w
  2007  0078  1803               	skipnc
  2008  0079  287B               	goto	u711
  2009  007A  287C               	goto	u710
  2010  007B                     u711:
  2011  007B  28C2               	goto	l171
  2012  007C                     u710:
  2013  007C                     l2098:
  2014  007C  300A               	movlw	10
  2015  007D  00A0               	movwf	??_AnalogReadServo
  2016  007E  0820               	movf	??_AnalogReadServo,w
  2017  007F  00AE               	movwf	_POT4
  2018  0080  28C2               	goto	l171
  2019  0081                     l2100:
  2020                           
  2021                           ;mainP2.c: 314:                 POT1 = ADRESH;
  2022  0081  081E               	movf	30,w	;volatile
  2023  0082  00A0               	movwf	??_AnalogReadServo
  2024  0083  0820               	movf	??_AnalogReadServo,w
  2025  0084  00B1               	movwf	_POT1
  2026                           
  2027                           ;mainP2.c: 315:             break;
  2028  0085  28C2               	goto	l171
  2029  0086                     l2102:
  2030                           
  2031                           ;mainP2.c: 318:                 ADCON0bits.CHS = 1;
  2032  0086  081F               	movf	31,w	;volatile
  2033  0087  39C3               	andlw	-61
  2034  0088  3804               	iorlw	4
  2035  0089  009F               	movwf	31	;volatile
  2036  008A                     l2104:
  2037                           
  2038                           ;mainP2.c: 319:                 if(POT1>190) POT1 = 160;
  2039  008A  30BF               	movlw	191
  2040  008B  0231               	subwf	_POT1,w
  2041  008C  1C03               	skipc
  2042  008D  288F               	goto	u721
  2043  008E  2890               	goto	u720
  2044  008F                     u721:
  2045  008F  2894               	goto	l169
  2046  0090                     u720:
  2047  0090                     l2106:
  2048  0090  30A0               	movlw	160
  2049  0091  00A0               	movwf	??_AnalogReadServo
  2050  0092  0820               	movf	??_AnalogReadServo,w
  2051  0093  00B1               	movwf	_POT1
  2052  0094                     l169:
  2053                           
  2054                           ;mainP2.c: 320:                 if(POT1<10) POT1 = 10;
  2055  0094  300A               	movlw	10
  2056  0095  0231               	subwf	_POT1,w
  2057  0096  1803               	skipnc
  2058  0097  2899               	goto	u731
  2059  0098  289A               	goto	u730
  2060  0099                     u731:
  2061  0099  28C2               	goto	l171
  2062  009A                     u730:
  2063  009A                     l2108:
  2064  009A  300A               	movlw	10
  2065  009B  00A0               	movwf	??_AnalogReadServo
  2066  009C  0820               	movf	??_AnalogReadServo,w
  2067  009D  00B1               	movwf	_POT1
  2068  009E  28C2               	goto	l171
  2069  009F                     l2112:
  2070  009F  0833               	movf	_SERVOS,w
  2071  00A0  391F               	andlw	31
  2072  00A1  00A0               	movwf	??_AnalogReadServo
  2073  00A2  01A1               	clrf	??_AnalogReadServo+1
  2074                           
  2075                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2076                           ; Switch size 1, requested type "simple"
  2077                           ; Number of cases is 1, Range of values is 0 to 0
  2078                           ; switch strategies available:
  2079                           ; Name         Instructions Cycles
  2080                           ; simple_byte            4     3 (average)
  2081                           ; direct_byte           11     8 (fixed)
  2082                           ; jumptable            260     6 (fixed)
  2083                           ;	Chosen strategy is simple_byte
  2084  00A3  0821               	movf	??_AnalogReadServo+1,w
  2085  00A4  3A00               	xorlw	0	; case 0
  2086  00A5  1903               	skipnz
  2087  00A6  28A8               	goto	l2340
  2088  00A7  28C2               	goto	l171
  2089  00A8                     l2340:
  2090                           
  2091                           ; Switch size 1, requested type "simple"
  2092                           ; Number of cases is 8, Range of values is 0 to 10
  2093                           ; switch strategies available:
  2094                           ; Name         Instructions Cycles
  2095                           ; simple_byte           25    13 (average)
  2096                           ; direct_byte           41     8 (fixed)
  2097                           ; jumptable            260     6 (fixed)
  2098                           ;	Chosen strategy is simple_byte
  2099  00A8  0820               	movf	??_AnalogReadServo,w
  2100  00A9  3A00               	xorlw	0	; case 0
  2101  00AA  1903               	skipnz
  2102  00AB  2829               	goto	l2070
  2103  00AC  3A01               	xorlw	1	; case 1
  2104  00AD  1903               	skipnz
  2105  00AE  282E               	goto	l2072
  2106  00AF  3A02               	xorlw	2	; case 3
  2107  00B0  1903               	skipnz
  2108  00B1  2847               	goto	l2080
  2109  00B2  3A07               	xorlw	7	; case 4
  2110  00B3  1903               	skipnz
  2111  00B4  284C               	goto	l2082
  2112  00B5  3A02               	xorlw	2	; case 6
  2113  00B6  1903               	skipnz
  2114  00B7  2865               	goto	l2090
  2115  00B8  3A01               	xorlw	1	; case 7
  2116  00B9  1903               	skipnz
  2117  00BA  286A               	goto	l2092
  2118  00BB  3A0E               	xorlw	14	; case 9
  2119  00BC  1903               	skipnz
  2120  00BD  2881               	goto	l2100
  2121  00BE  3A03               	xorlw	3	; case 10
  2122  00BF  1903               	skipnz
  2123  00C0  2886               	goto	l2102
  2124  00C1  28C2               	goto	l171
  2125  00C2                     l171:
  2126  00C2  0008               	return
  2127  00C3                     __end_of_AnalogReadServo:
  2128                           
  2129                           	psect	text9
  2130  01F1                     __ptext9:	
  2131 ;; *************** function _rutInter *****************
  2132 ;; Defined at:
  2133 ;;		line 86 in file "mainP2.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;		None
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;		None
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      void 
  2140 ;; Registers used:
  2141 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2147 ;;      Params:         0       0       0       0       0
  2148 ;;      Locals:         0       0       0       0       0
  2149 ;;      Temps:          4       0       0       0       0
  2150 ;;      Totals:         4       0       0       0       0
  2151 ;;Total ram usage:        4 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; Hardware stack levels required when called:    1
  2154 ;; This function calls:
  2155 ;;		_servos
  2156 ;; This function is called by:
  2157 ;;		Interrupt level 1
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           
  2162                           ;psect for function _rutInter
  2163  01F1                     _rutInter:
  2164  01F1                     i1l1734:
  2165                           
  2166                           ;mainP2.c: 88:     if(INTCONbits.TMR0IF) {
  2167  01F1  1D0B               	btfss	11,2	;volatile
  2168  01F2  29F4               	goto	u45_21
  2169  01F3  29F5               	goto	u45_20
  2170  01F4                     u45_21:
  2171  01F4  2A0D               	goto	i1l109
  2172  01F5                     u45_20:
  2173  01F5                     i1l1736:
  2174                           
  2175                           ;mainP2.c: 89:         SERVOS.bit0++;
  2176  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  2177  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  2178  01F7  0833               	movf	_SERVOS,w
  2179  01F8  391F               	andlw	31
  2180  01F9  00F2               	movwf	??_rutInter
  2181  01FA  0AF2               	incf	??_rutInter,f
  2182  01FB  0833               	movf	_SERVOS,w
  2183  01FC  0672               	xorwf	??_rutInter,w
  2184  01FD  39E0               	andlw	-32
  2185  01FE  0672               	xorwf	??_rutInter,w
  2186  01FF  00B3               	movwf	_SERVOS
  2187  0200                     i1l1738:
  2188                           
  2189                           ;mainP2.c: 91:         INTCONbits.TMR0IF = 0;
  2190  0200  110B               	bcf	11,2	;volatile
  2191  0201                     i1l1740:
  2192                           
  2193                           ;mainP2.c: 92:         servos();
  2194  0201  120A  118A  231D  120A  118A  	fcall	_servos
  2195  0206                     i1l1742:
  2196                           
  2197                           ;mainP2.c: 93:         if(SERVOS.modo) ADCON0bits.GO = 1;
  2198  0206  1283               	bcf	3,5	;RP0=0, select bank0
  2199  0207  1303               	bcf	3,6	;RP1=0, select bank0
  2200  0208  1F33               	btfss	_SERVOS,6
  2201  0209  2A0B               	goto	u46_21
  2202  020A  2A0C               	goto	u46_20
  2203  020B                     u46_21:
  2204  020B  2A0D               	goto	i1l109
  2205  020C                     u46_20:
  2206  020C                     i1l1744:
  2207  020C  149F               	bsf	31,1	;volatile
  2208  020D                     i1l109:	
  2209                           ;mainP2.c: 94:     }
  2210                           
  2211                           
  2212                           ;mainP2.c: 96:     if(PIR1bits.TMR1IF){
  2213  020D  1283               	bcf	3,5	;RP0=0, select bank0
  2214  020E  1303               	bcf	3,6	;RP1=0, select bank0
  2215  020F  1C0C               	btfss	12,0	;volatile
  2216  0210  2A12               	goto	u47_21
  2217  0211  2A13               	goto	u47_20
  2218  0212                     u47_21:
  2219  0212  2A1D               	goto	i1l1756
  2220  0213                     u47_20:
  2221  0213                     i1l1746:
  2222                           
  2223                           ;mainP2.c: 97:         SERVOS.guardar = 1;
  2224  0213  17B3               	bsf	_SERVOS,7
  2225  0214                     i1l1748:
  2226                           
  2227                           ;mainP2.c: 98:         posicion ++;
  2228  0214  3001               	movlw	1
  2229  0215  00F2               	movwf	??_rutInter
  2230  0216  0872               	movf	??_rutInter,w
  2231  0217  07AB               	addwf	_posicion,f
  2232  0218                     i1l1750:
  2233                           
  2234                           ;mainP2.c: 99:         PIR1bits.TMR1IF = 0;
  2235  0218  100C               	bcf	12,0	;volatile
  2236  0219                     i1l1752:
  2237                           
  2238                           ;mainP2.c: 100:         TMR1H = 0B00001011;
  2239  0219  300B               	movlw	11
  2240  021A  008F               	movwf	15	;volatile
  2241  021B                     i1l1754:
  2242                           
  2243                           ;mainP2.c: 101:         TMR1L = 0B11010001;
  2244  021B  30D1               	movlw	209
  2245  021C  008E               	movwf	14	;volatile
  2246  021D                     i1l1756:
  2247                           
  2248                           ;mainP2.c: 104:     if(INTCONbits.RBIF && PORTBbits.RB0){
  2249  021D  1C0B               	btfss	11,0	;volatile
  2250  021E  2A20               	goto	u48_21
  2251  021F  2A21               	goto	u48_20
  2252  0220                     u48_21:
  2253  0220  2A33               	goto	i1l1764
  2254  0221                     u48_20:
  2255  0221                     i1l1758:
  2256  0221  1C06               	btfss	6,0	;volatile
  2257  0222  2A24               	goto	u49_21
  2258  0223  2A25               	goto	u49_20
  2259  0224                     u49_21:
  2260  0224  2A33               	goto	i1l1764
  2261  0225                     u49_20:
  2262  0225                     i1l1760:
  2263                           
  2264                           ;mainP2.c: 105:         SERVOS.modo = ~SERVOS.modo;
  2265  0225  1003               	clrc
  2266  0226  1F33               	btfss	_SERVOS,6
  2267  0227  1403               	setc
  2268  0228  1803               	btfsc	3,0
  2269  0229  2A2B               	goto	u50_21
  2270  022A  2A2F               	goto	u50_20
  2271  022B                     u50_21:
  2272  022B  1283               	bcf	3,5	;RP0=0, select bank0
  2273  022C  1303               	bcf	3,6	;RP1=0, select bank0
  2274  022D  1733               	bsf	_SERVOS,6
  2275  022E  2A32               	goto	u51_24
  2276  022F                     u50_20:
  2277  022F  1283               	bcf	3,5	;RP0=0, select bank0
  2278  0230  1303               	bcf	3,6	;RP1=0, select bank0
  2279  0231  1333               	bcf	_SERVOS,6
  2280  0232                     u51_24:
  2281  0232                     i1l1762:
  2282                           
  2283                           ;mainP2.c: 106:         INTCONbits.RBIF = 0;
  2284  0232  100B               	bcf	11,0	;volatile
  2285  0233                     i1l1764:
  2286                           
  2287                           ;mainP2.c: 109:     if(INTCONbits.RBIF && PORTBbits.RB1){
  2288  0233  1C0B               	btfss	11,0	;volatile
  2289  0234  2A36               	goto	u52_21
  2290  0235  2A37               	goto	u52_20
  2291  0236                     u52_21:
  2292  0236  2A44               	goto	i1l113
  2293  0237                     u52_20:
  2294  0237                     i1l1766:
  2295  0237  1C86               	btfss	6,1	;volatile
  2296  0238  2A3A               	goto	u53_21
  2297  0239  2A3B               	goto	u53_20
  2298  023A                     u53_21:
  2299  023A  2A44               	goto	i1l113
  2300  023B                     u53_20:
  2301  023B                     i1l1768:
  2302                           
  2303                           ;mainP2.c: 110:         T1CONbits.TMR1ON = 1;
  2304  023B  1410               	bsf	16,0	;volatile
  2305  023C                     i1l1770:
  2306                           
  2307                           ;mainP2.c: 111:         PORTE = 1;
  2308  023C  3001               	movlw	1
  2309  023D  0089               	movwf	9	;volatile
  2310  023E                     i1l1772:
  2311                           
  2312                           ;mainP2.c: 112:         if(SERVOS.modo)SERVOS.guardar = 1;
  2313  023E  1F33               	btfss	_SERVOS,6
  2314  023F  2A41               	goto	u54_21
  2315  0240  2A42               	goto	u54_20
  2316  0241                     u54_21:
  2317  0241  2A43               	goto	i1l114
  2318  0242                     u54_20:
  2319  0242                     i1l1774:
  2320  0242  17B3               	bsf	_SERVOS,7
  2321  0243                     i1l114:
  2322                           
  2323                           ;mainP2.c: 113:         INTCONbits.RBIF = 0;
  2324  0243  100B               	bcf	11,0	;volatile
  2325  0244                     i1l113:	
  2326                           ;mainP2.c: 114:     }
  2327                           
  2328                           
  2329                           ;mainP2.c: 116:     INTCONbits.RBIF = 0;
  2330  0244  100B               	bcf	11,0	;volatile
  2331                           
  2332                           ;mainP2.c: 118:     if(PIR1bits.RCIF){
  2333  0245  1E8C               	btfss	12,5	;volatile
  2334  0246  2A48               	goto	u55_21
  2335  0247  2A49               	goto	u55_20
  2336  0248                     u55_21:
  2337  0248  2A5B               	goto	i1l116
  2338  0249                     u55_20:
  2339  0249                     i1l1776:
  2340                           
  2341                           ;mainP2.c: 119:         EXTREC = RCREG;
  2342  0249  081A               	movf	26,w	;volatile
  2343  024A  00F2               	movwf	??_rutInter
  2344  024B  0872               	movf	??_rutInter,w
  2345  024C  00AD               	movwf	_EXTREC
  2346  024D                     i1l1778:
  2347                           
  2348                           ;mainP2.c: 120:         UART.indicador = ~UART.indicador;
  2349  024D  1003               	clrc
  2350  024E  1C32               	btfss	_UART,0
  2351  024F  1403               	setc
  2352  0250  1803               	btfsc	3,0
  2353  0251  2A53               	goto	u56_21
  2354  0252  2A57               	goto	u56_20
  2355  0253                     u56_21:
  2356  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2357  0254  1303               	bcf	3,6	;RP1=0, select bank0
  2358  0255  1432               	bsf	_UART,0
  2359  0256  2A5A               	goto	u57_24
  2360  0257                     u56_20:
  2361  0257  1283               	bcf	3,5	;RP0=0, select bank0
  2362  0258  1303               	bcf	3,6	;RP1=0, select bank0
  2363  0259  1032               	bcf	_UART,0
  2364  025A                     u57_24:
  2365  025A                     i1l1780:
  2366                           
  2367                           ;mainP2.c: 121:         UART.datorecep = 1;
  2368  025A  14B2               	bsf	_UART,1
  2369  025B                     i1l116:
  2370  025B  0875               	movf	??_rutInter+3,w
  2371  025C  008A               	movwf	10
  2372  025D  0874               	movf	??_rutInter+2,w
  2373  025E  0084               	movwf	4
  2374  025F  0E73               	swapf	??_rutInter+1,w
  2375  0260  0083               	movwf	3
  2376  0261  0EFE               	swapf	btemp,f
  2377  0262  0E7E               	swapf	btemp,w
  2378  0263  0009               	retfie
  2379  0264                     __end_of_rutInter:
  2380                           
  2381                           	psect	intentry
  2382  0004                     __pintentry:	
  2383                           ;incstack = 0
  2384                           ; Regs used in _rutInter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2385                           
  2386  0004                     interrupt_function:
  2387  007E                     saved_w	set	btemp
  2388  0004  00FE               	movwf	btemp
  2389  0005  0E03               	swapf	3,w
  2390  0006  00F3               	movwf	??_rutInter+1
  2391  0007  0804               	movf	4,w
  2392  0008  00F4               	movwf	??_rutInter+2
  2393  0009  080A               	movf	10,w
  2394  000A  00F5               	movwf	??_rutInter+3
  2395  000B  120A  118A  29F1   	ljmp	_rutInter
  2396                           
  2397                           	psect	text10
  2398  031D                     __ptext10:	
  2399 ;; *************** function _servos *****************
  2400 ;; Defined at:
  2401 ;;		line 241 in file "mainP2.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;		None
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2415 ;;      Params:         0       0       0       0       0
  2416 ;;      Locals:         0       0       0       0       0
  2417 ;;      Temps:          2       0       0       0       0
  2418 ;;      Totals:         2       0       0       0       0
  2419 ;;Total ram usage:        2 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; This function calls:
  2422 ;;		Nothing
  2423 ;; This function is called by:
  2424 ;;		_rutInter
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           
  2429                           ;psect for function _servos
  2430  031D                     _servos:
  2431  031D                     i1l1470:	
  2432                           ;incstack = 0
  2433                           ; Regs used in _servos: [wreg-fsr0h+status,2+status,0]
  2434                           
  2435                           
  2436                           ;mainP2.c: 244:             if(SERVOS.bit0 == 15) SERVOS.bit0 = 0;
  2437  031D  1283               	bcf	3,5	;RP0=0, select bank0
  2438  031E  1303               	bcf	3,6	;RP1=0, select bank0
  2439  031F  0833               	movf	_SERVOS,w
  2440  0320  391F               	andlw	31
  2441  0321  3A0F               	xorlw	15
  2442  0322  1D03               	skipz
  2443  0323  2B25               	goto	u35_21
  2444  0324  2B26               	goto	u35_20
  2445  0325                     u35_21:
  2446  0325  2B49               	goto	i1l1508
  2447  0326                     u35_20:
  2448  0326                     i1l1472:
  2449  0326  30E0               	movlw	-32
  2450  0327  05B3               	andwf	_SERVOS,f
  2451  0328  2B49               	goto	i1l1508
  2452  0329                     i1l1474:
  2453                           
  2454                           ;mainP2.c: 249:                     TMR0 = 255-POT1; PORTDbits.RD0 = 0;
  2455  0329  0931               	comf	_POT1,w
  2456  032A  0081               	movwf	1	;volatile
  2457  032B                     i1l1476:
  2458  032B  1008               	bcf	8,0	;volatile
  2459                           
  2460                           ;mainP2.c: 250:                     break;
  2461  032C  2B6C               	goto	i1l149
  2462  032D                     i1l1478:
  2463                           
  2464                           ;mainP2.c: 252:                      TMR0 = 255-POT2; PORTDbits.RD1 = 0;
  2465  032D  0930               	comf	_POT2,w
  2466  032E  0081               	movwf	1	;volatile
  2467  032F                     i1l1480:
  2468  032F  1088               	bcf	8,1	;volatile
  2469                           
  2470                           ;mainP2.c: 253:                     break;
  2471  0330  2B6C               	goto	i1l149
  2472  0331                     i1l1482:
  2473                           
  2474                           ;mainP2.c: 255:                     TMR0 = 255-POT3; PORTDbits.RD2 = 0;
  2475  0331  092F               	comf	_POT3,w
  2476  0332  0081               	movwf	1	;volatile
  2477  0333                     i1l1484:
  2478  0333  1108               	bcf	8,2	;volatile
  2479                           
  2480                           ;mainP2.c: 256:                     break;
  2481  0334  2B6C               	goto	i1l149
  2482  0335                     i1l1486:
  2483                           
  2484                           ;mainP2.c: 258:                     TMR0 = 255-POT4; PORTDbits.RD3 = 0;
  2485  0335  092E               	comf	_POT4,w
  2486  0336  0081               	movwf	1	;volatile
  2487  0337                     i1l1488:
  2488  0337  1188               	bcf	8,3	;volatile
  2489                           
  2490                           ;mainP2.c: 259:                     break;
  2491  0338  2B6C               	goto	i1l149
  2492  0339                     i1l1490:
  2493                           
  2494                           ;mainP2.c: 262:                     TMR0 = POT1; PORTDbits.RD0 = 1;
  2495  0339  0831               	movf	_POT1,w
  2496  033A  0081               	movwf	1	;volatile
  2497  033B                     i1l1492:
  2498  033B  1408               	bsf	8,0	;volatile
  2499                           
  2500                           ;mainP2.c: 263:                     break;
  2501  033C  2B6C               	goto	i1l149
  2502  033D                     i1l1494:
  2503                           
  2504                           ;mainP2.c: 265:                     TMR0 = POT2; PORTDbits.RD1 = 1;
  2505  033D  0830               	movf	_POT2,w
  2506  033E  0081               	movwf	1	;volatile
  2507  033F                     i1l1496:
  2508  033F  1488               	bsf	8,1	;volatile
  2509                           
  2510                           ;mainP2.c: 266:                     break;
  2511  0340  2B6C               	goto	i1l149
  2512  0341                     i1l1498:
  2513                           
  2514                           ;mainP2.c: 268:                     TMR0 = POT3; PORTDbits.RD2 = 1;
  2515  0341  082F               	movf	_POT3,w
  2516  0342  0081               	movwf	1	;volatile
  2517  0343                     i1l1500:
  2518  0343  1508               	bsf	8,2	;volatile
  2519                           
  2520                           ;mainP2.c: 269:                     break;
  2521  0344  2B6C               	goto	i1l149
  2522  0345                     i1l1502:
  2523                           
  2524                           ;mainP2.c: 271:                     TMR0 = POT4; PORTDbits.RD3 = 1;
  2525  0345  082E               	movf	_POT4,w
  2526  0346  0081               	movwf	1	;volatile
  2527  0347                     i1l1504:
  2528  0347  1588               	bsf	8,3	;volatile
  2529                           
  2530                           ;mainP2.c: 272:                     break;
  2531  0348  2B6C               	goto	i1l149
  2532  0349                     i1l1508:
  2533  0349  0833               	movf	_SERVOS,w
  2534  034A  391F               	andlw	31
  2535  034B  00F0               	movwf	??_servos
  2536  034C  01F1               	clrf	??_servos+1
  2537                           
  2538                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2539                           ; Switch size 1, requested type "simple"
  2540                           ; Number of cases is 1, Range of values is 0 to 0
  2541                           ; switch strategies available:
  2542                           ; Name         Instructions Cycles
  2543                           ; simple_byte            4     3 (average)
  2544                           ; direct_byte           11     8 (fixed)
  2545                           ; jumptable            260     6 (fixed)
  2546                           ;	Chosen strategy is simple_byte
  2547  034D  0871               	movf	??_servos+1,w
  2548  034E  3A00               	xorlw	0	; case 0
  2549  034F  1903               	skipnz
  2550  0350  2B52               	goto	i1l2342
  2551  0351  2B6C               	goto	i1l149
  2552  0352                     i1l2342:
  2553                           
  2554                           ; Switch size 1, requested type "simple"
  2555                           ; Number of cases is 8, Range of values is 0 to 10
  2556                           ; switch strategies available:
  2557                           ; Name         Instructions Cycles
  2558                           ; simple_byte           25    13 (average)
  2559                           ; direct_byte           41     8 (fixed)
  2560                           ; jumptable            260     6 (fixed)
  2561                           ;	Chosen strategy is simple_byte
  2562  0352  0870               	movf	??_servos,w
  2563  0353  3A00               	xorlw	0	; case 0
  2564  0354  1903               	skipnz
  2565  0355  2B39               	goto	i1l1490
  2566  0356  3A01               	xorlw	1	; case 1
  2567  0357  1903               	skipnz
  2568  0358  2B29               	goto	i1l1474
  2569  0359  3A02               	xorlw	2	; case 3
  2570  035A  1903               	skipnz
  2571  035B  2B3D               	goto	i1l1494
  2572  035C  3A07               	xorlw	7	; case 4
  2573  035D  1903               	skipnz
  2574  035E  2B2D               	goto	i1l1478
  2575  035F  3A02               	xorlw	2	; case 6
  2576  0360  1903               	skipnz
  2577  0361  2B41               	goto	i1l1498
  2578  0362  3A01               	xorlw	1	; case 7
  2579  0363  1903               	skipnz
  2580  0364  2B31               	goto	i1l1482
  2581  0365  3A0E               	xorlw	14	; case 9
  2582  0366  1903               	skipnz
  2583  0367  2B45               	goto	i1l1502
  2584  0368  3A03               	xorlw	3	; case 10
  2585  0369  1903               	skipnz
  2586  036A  2B35               	goto	i1l1486
  2587  036B  2B6C               	goto	i1l149
  2588  036C                     i1l149:
  2589  036C  0008               	return
  2590  036D                     __end_of_servos:
  2591  007E                     btemp	set	126	;btemp
  2592  007E                     wtemp0	set	126
  2593                           
  2594                           	psect	config
  2595                           
  2596                           ;Config register CONFIG1 @ 0x2007
  2597                           ;	Oscillator Selection bits
  2598                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2599                           ;	Watchdog Timer Enable bit
  2600                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2601                           ;	Power-up Timer Enable bit
  2602                           ;	PWRTE = OFF, PWRT disabled
  2603                           ;	RE3/MCLR pin function select bit
  2604                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2605                           ;	Code Protection bit
  2606                           ;	CP = OFF, Program memory code protection is disabled
  2607                           ;	Data Code Protection bit
  2608                           ;	CPD = OFF, Data memory code protection is disabled
  2609                           ;	Brown Out Reset Selection bits
  2610                           ;	BOREN = OFF, BOR disabled
  2611                           ;	Internal External Switchover bit
  2612                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2613                           ;	Fail-Safe Clock Monitor Enabled bit
  2614                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2615                           ;	Low Voltage Programming Enable bit
  2616                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2617                           ;	In-Circuit Debugger Mode bit
  2618                           ;	DEBUG = 0x1, unprogrammed default
  2619  2007                     	org	8199
  2620  2007  20F4               	dw	8436
  2621                           
  2622                           ;Config register CONFIG2 @ 0x2008
  2623                           ;	Brown-out Reset Selection bit
  2624                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2625                           ;	Flash Program Memory Self Write Enable bits
  2626                           ;	WRT = OFF, Write protection off
  2627  2008                     	org	8200
  2628  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80     11      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _rutInter in COMMON

    _rutInter->_servos

Critical Paths under _main in BANK0

    _main->_guardar3SEG
    _leer3SEG->_leerSERVOS
    _leerSERVOS->_leerposiciones
    _guardar3SEG->_guardarservos
    _guardarservos->_guardarposiciones

Critical Paths under _rutInter in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rutInter in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutInter in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutInter in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     691
                                              8 BANK0      3     3      0
                    _AnalogReadServo
                    _configuraciones
                        _guardar3SEG
                           _leer3SEG
 ---------------------------------------------------------------------------------
 (1) _leer3SEG                                             2     2      0     378
                                              5 BANK0      2     2      0
                         _leerSERVOS
 ---------------------------------------------------------------------------------
 (2) _leerSERVOS                                           4     4      0     378
                                              1 BANK0      4     4      0
                     _leerposiciones
 ---------------------------------------------------------------------------------
 (3) _leerposiciones                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _guardar3SEG                                          2     2      0     313
                                              6 BANK0      2     2      0
                      _guardarservos
 ---------------------------------------------------------------------------------
 (2) _guardarservos                                        4     4      0     313
                                              2 BANK0      4     4      0
                  _guardarposiciones
 ---------------------------------------------------------------------------------
 (3) _guardarposiciones                                    2     1      1     152
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _configuraciones                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AnalogReadServo                                      2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _rutInter                                             4     4      0       0
                                              2 COMMON     4     4      0
                             _servos
 ---------------------------------------------------------------------------------
 (5) _servos                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AnalogReadServo
   _configuraciones
   _guardar3SEG
     _guardarservos
       _guardarposiciones
   _leer3SEG
     _leerSERVOS
       _leerposiciones

 _rutInter (ROOT)
   _servos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      14       5       25.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu May 13 12:53:57 2021

                       l122 03A2                         l123 0373                         l135 02C2  
                       l208 031C                         l161 005A                         l226 01B6  
                       l171 00C2                         l227 01F0                         l180 0419  
                       l165 0076                         l157 003C                         l245 011F  
                       l182 041D                         l246 0159                         l183 041E  
                       l169 0094                         l194 0401                         l197 042D  
                       u700 0072                         u620 041D                         u701 0071  
                       u621 041C                         u710 007C                         u630 0401  
                       u711 007B                         u631 0400                         u720 0090  
                       u640 031C                         u721 008F                         u641 031B  
                       u730 009A                         u650 0028                         u731 0099  
                       u651 0027                         u660 0038                         u740 0378  
                       u661 0037                         u741 0377                         u670 0042  
                       u750 037E                         u671 0041                         u751 037D  
                       u680 0056                         u760 0386                         u681 0055  
                       u761 0385                         u690 0060                         u770 0399  
                       u691 005F                         u771 0398                         fsr0 0004  
               leerSERVOS@n 0024                        l2010 02D5                        l2002 02C6  
                      l2100 0081                        l2012 02E2                        l2020 0312  
                      l2102 0086                        l2022 0316                        l2014 02EF  
                      l2030 00C4                        l2104 008A                        l2112 009F  
                      l2120 015B                        l2008 02C8                        l2040 00E7  
                      l2032 00CB                        l2106 0090                        l2130 017E  
                      l2122 0162                        l2018 02FC                        l2050 010A  
                      l2042 00EE                        l2034 00D2                        l2108 009A  
                      l2140 01A1                        l2132 0185                        l2124 0169  
                      l2052 0111                        l2044 00F5                        l2036 00D9  
                      l2060 0123                        l2028 00C3                        l2070 0029  
                      l2142 01A8                        l2134 018C                        l2126 0170  
                      l2150 01BA                        l2118 015A                        l2054 0118  
                      l2046 00FC                        l2038 00E0                        l2080 0047  
                      l2072 002E                        l1600 02BC                        l1520 026D  
                      l2144 01AF                        l2136 0193                        l2128 0177  
                      l2056 0120                        l2048 0103                        l2160 037E  
                      l2090 0065                        l2082 004C                        l2074 0032  
                      l2066 0022                        l1602 02C0                        l1530 0284  
                      l1522 026F                        l1514 0264                        l2146 01B7  
                      l2138 019A                        l2330 03B0                        l2170 038C  
                      l2162 037F                        l2340 00A8                        l2092 006A  
                      l2084 0050                        l2076 0038                        l1604 02C1  
                      l1540 028B                        l1532 0286                        l1524 027B  
                      l1516 0268                        l2332 012D                        l2180 039E  
                      l2172 0391                        l2164 0381                        l2156 036D  
                      l2094 006C                        l2086 0056                        l2078 0042  
                      l1550 0292                        l1542 028C                        l1534 0288  
                      l1526 027F                        l1518 0269                        l2334 0304  
                      l2174 0394                        l2158 0378                        l2166 0382  
                      l2096 0072                        l2088 0060                        l1560 0297  
                      l1552 0293                        l1544 028F                        l1536 0289  
                      l1528 0280                        l2336 01C4                        l2176 0395  
                      l2168 0386                        l2184 03A2                        l2098 007C  
                      l1570 02A4                        l1562 029D                        l1554 0294  
                      l1546 0290                        l1538 028A                        l2338 03DC  
                      l2178 0399                        l1580 02AA                        l1572 02A5  
                      l1564 029F                        l1556 0295                        l1548 0291  
                      l1590 02B7                        l1582 02AD                        l1574 02A6  
                      l1566 02A0                        l1558 0296                        l1592 02B8  
                      l1584 02B0                        l1576 02A8                        l1568 02A1  
                      l1594 02B9                        l1586 02B3                        l1578 02A9  
                      l1596 02BA                        l1588 02B6                        l1598 02BB  
                      l1960 0412                        l1962 0417                        l1970 0429  
                      l1964 0418                        l1956 0405                        l1980 03C0  
                      l1958 040F                        l1982 03C5                        l1990 03D4  
                      l1974 03BE                        l1966 0422                        l1984 03CA  
                      l1992 03EA                        l1968 0426                        l1994 03F5  
                      l1986 03CF                        l1996 03FB                        _POT1 0031  
                      _POT2 0030                        _POT3 002F                        _POT4 002E  
                      _UART 0032                        _TMR0 0001                        _main 036D  
                      btemp 007E            ?_configuraciones 0070                        start 000E  
              ?_guardar3SEG 0070                       ?_main 0070                       _EEADR 010D  
                     _EEDAT 010C                       _ANSEL 0188                       i1l113 0244  
                     i1l114 0243                       i1l116 025B                       i1l109 020D  
                     i1l149 036C                       _RCREG 001A                       _TMR1H 000F  
                     _TMR1L 000E                       u50_20 022F                       u50_21 022B  
                     _SPBRG 0099                       u35_20 0326                       u35_21 0325  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     u51_24 0232                       _PORTD 0008                       _PORTE 0009  
                     u52_20 0237                       u52_21 0236                       u53_20 023B  
                     u45_20 01F5                       u53_21 023A                       u45_21 01F4  
                     u54_20 0242                       u46_20 020C                       u54_21 0241  
                     u46_21 020B                       u55_20 0249                       u47_20 0213  
                     u55_21 0248                       u47_21 0212                       u56_20 0257  
                     u48_20 0221                       u56_21 0253                       u48_21 0220  
                     u49_20 0225                       u49_21 0224                       _TRISA 0085  
                     u57_24 025A                       _TRISB 0086                       _TRISC 0087  
                     _TRISD 0088                       _TRISE 0089                       _TXREG 0019  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __initialization 0011                __end_of_main 03BB                      ??_main 0028  
                    _ADRESH 001E                      _EECON2 018D      __size_of_guardarservos 0047  
                    _ANSELH 0189                      i1l1500 0343                      i1l1502 0345  
                    i1l1504 0347                      i1l1508 0349                      i1l2342 0352  
                    i1l1470 031D                      i1l1480 032F                      i1l1472 0326  
                    i1l1490 0339                      i1l1482 0331                      i1l1474 0329  
                    i1l1492 033B                      i1l1484 0333                      i1l1476 032B  
                    i1l1740 0201                      i1l1494 033D                      i1l1486 0335  
                    i1l1478 032D                      i1l1750 0218                      i1l1742 0206  
                    i1l1734 01F1                      i1l1496 033F                      i1l1488 0337  
                    i1l1760 0225                      i1l1752 0219                      i1l1744 020C  
                    i1l1736 01F5                      i1l1498 0341                      i1l1770 023C  
                    i1l1762 0232                      i1l1754 021B                      i1l1746 0213  
                    i1l1738 0200                      i1l1780 025A                      i1l1772 023E  
                    i1l1764 0233                      i1l1748 0214                      i1l1756 021D  
                    i1l1774 0242                      i1l1766 0237                      i1l1758 0221  
                    i1l1776 0249                      i1l1768 023B                      i1l1778 024D  
                    _EXTREC 002D                      _SERVOS 0033            __end_of_leer3SEG 015A  
                    _servos 031D     __size_of_leerposiciones 000F                      saved_w 007E  
          __end_of_rutInter 0264  guardarposiciones@direccion 0020     __end_of__initialization 001E  
            __pcstackCOMMON 0070               _guardarservos 03BB        __size_of_guardar3SEG 0097  
            _OPTION_REGbits 0081    __size_of_AnalogReadServo 00A1                  __pbssBANK0 002B  
                __pmaintext 036D              ?_guardarservos 0070                  __pintentry 0004  
                   ?_servos 0070                  _leerSERVOS 02C3                   ?_leer3SEG 0070  
         _guardarposiciones 0402          ?_guardarposiciones 0020         ??_guardarposiciones 0076  
  __size_of_configuraciones 005F                   ?_rutInter 0070                     __ptext1 00C3  
                   __ptext2 02C3                     __ptext3 041F                     __ptext4 015A  
                   __ptext5 03BB                     __ptext6 0402                     __ptext7 0264  
                   __ptext8 0022                     __ptext9 01F1             __size_of_servos 0050  
                 _T1CONbits 0010              _leerposiciones 041F   __end_of_guardarposiciones 041F  
                ??_leer3SEG 0025        end_of_initialization 001E           ??_AnalogReadServo 0020  
           ??_guardarservos 0022                   _RCSTAbits 0018                   _SERVINDIC 0077  
                ??_rutInter 0072      __end_of_leerposiciones 042E                   _PORTBbits 0006  
                 _PORTDbits 0008                 ?_leerSERVOS 0070                   _TXSTAbits 0098  
         leerSERVOS@desfase 0023             ?_leerposiciones 0070              __end_of_servos 036D  
         ??_configuraciones 0076         start_initialization 0011  __size_of_guardarposiciones 001D  
      guardarservos@desfase 0024               ??_guardar3SEG 0026         __size_of_leerSERVOS 005A  
                 _addEEPROM 0076                    ??_servos 0070                 __pbssCOMMON 0076  
                 ___latbits 0002                   _datEEPROM 002C               __pcstackBANK0 0020  
            guardarservos@n 0025           __size_of_leer3SEG 0097           __size_of_rutInter 0073  
       __end_of_guardar3SEG 01F1             _AnalogReadServo 0022           interrupt_function 0004  
                  _IOCBbits 0096                    _PIE1bits 008C                    _PIR1bits 000C  
                _ADCON0bits 001F                  _ADCON1bits 009F     leerposiciones@direccion 0020  
              ??_leerSERVOS 0021                  _EECON1bits 018C            ??_leerposiciones 0076  
     __end_of_guardarservos 0402             _configuraciones 0264                 _guardar3SEG 015A  
        __end_of_leerSERVOS 031D     __end_of_AnalogReadServo 00C3                    __ptext10 031D  
                  _leer3SEG 00C3               __size_of_main 004E                    _posicion 002B  
  guardarposiciones@guardar 0021                    _rutInter 01F1                  _INTCONbits 000B  
                  intlevel1 0000     __end_of_configuraciones 02C3                  _OSCCONbits 008F  
          ?_AnalogReadServo 0070  
