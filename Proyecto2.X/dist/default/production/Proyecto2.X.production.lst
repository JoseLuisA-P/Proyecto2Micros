

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue May 18 16:48:31 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0019                     _TXREG	set	25
   216  001E                     _ADRESH	set	30
   217  0008                     _PORTDbits	set	8
   218  0001                     _TMR0	set	1
   219  0018                     _RCSTAbits	set	24
   220  0012                     _T2CONbits	set	18
   221  001D                     _CCP2CONbits	set	29
   222  0009                     _PORTE	set	9
   223  0008                     _PORTD	set	8
   224  0007                     _PORTC	set	7
   225  0006                     _PORTB	set	6
   226  0005                     _PORTA	set	5
   227  001B                     _CCPR2L	set	27
   228  001A                     _RCREG	set	26
   229  0009                     _PORTEbits	set	9
   230  0010                     _T1CONbits	set	16
   231  0006                     _PORTBbits	set	6
   232  000E                     _TMR1L	set	14
   233  000F                     _TMR1H	set	15
   234  000C                     _PIR1bits	set	12
   235  001F                     _ADCON0bits	set	31
   236  000B                     _INTCONbits	set	11
   237  0081                     _OPTION_REGbits	set	129
   238  0098                     _TXSTAbits	set	152
   239  0099                     _SPBRG	set	153
   240  0092                     _PR2	set	146
   241  009F                     _ADCON1bits	set	159
   242  0096                     _IOCBbits	set	150
   243  008C                     _PIE1bits	set	140
   244  008F                     _OSCCONbits	set	143
   245  0089                     _TRISE	set	137
   246  0088                     _TRISD	set	136
   247  0087                     _TRISC	set	135
   248  0086                     _TRISB	set	134
   249  0085                     _TRISA	set	133
   250  010C                     _EEDAT	set	268
   251  010D                     _EEADR	set	269
   252  018D                     _EECON2	set	397
   253  018C                     _EECON1bits	set	396
   254  0189                     _ANSELH	set	393
   255  0188                     _ANSEL	set	392
   256                           
   257                           	psect	cinit
   258  0011                     start_initialization:	
   259                           ; #config settings
   260                           
   261  0011                     __initialization:
   262                           
   263                           ; Clear objects allocated to COMMON
   264  0011  01F6               	clrf	__pbssCOMMON& (0+127)
   265  0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   266                           
   267                           ; Clear objects allocated to BANK0
   268  0013  1283               	bcf	3,5	;RP0=0, select bank0
   269  0014  1303               	bcf	3,6	;RP1=0, select bank0
   270  0015  01AB               	clrf	__pbssBANK0& (0+127)
   271  0016  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   272  0017  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   273  0018  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   274  0019  01AF               	clrf	(__pbssBANK0+4)& (0+127)
   275  001A  01B0               	clrf	(__pbssBANK0+5)& (0+127)
   276  001B  01B1               	clrf	(__pbssBANK0+6)& (0+127)
   277  001C  01B2               	clrf	(__pbssBANK0+7)& (0+127)
   278  001D                     end_of_initialization:	
   279                           ;End of C runtime variable initialization code
   280                           
   281  001D                     __end_of__initialization:
   282  001D  0183               	clrf	3
   283  001E  120A  118A  292E   	ljmp	_main	;jump to C main() function
   284                           
   285                           	psect	bssCOMMON
   286  0076                     __pbssCOMMON:
   287  0076                     _datEEPROM:
   288  0076                     	ds	1
   289  0077                     _SERVINDIC:
   290  0077                     	ds	1
   291                           
   292                           	psect	bssBANK0
   293  002B                     __pbssBANK0:
   294  002B                     _posicion:
   295  002B                     	ds	1
   296  002C                     _EXTREC:
   297  002C                     	ds	1
   298  002D                     _POT4:
   299  002D                     	ds	1
   300  002E                     _POT3:
   301  002E                     	ds	1
   302  002F                     _POT2:
   303  002F                     	ds	1
   304  0030                     _POT1:
   305  0030                     	ds	1
   306  0031                     _UART:
   307  0031                     	ds	1
   308  0032                     _SERVOS:
   309  0032                     	ds	1
   310                           
   311                           	psect	cstackCOMMON
   312  0070                     __pcstackCOMMON:
   313  0070                     ?_servos:
   314  0070                     ??_servos:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ?_configuraciones:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_send1dato:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_leer3SEG:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_guardar3SEG:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_AnalogReadServo:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_rutInter:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_main:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_guardarservos:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_leerposiciones:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_leerSERVOS:	
   345                           ; 1 bytes @ 0x0
   346                           
   347                           
   348                           ; 1 bytes @ 0x0
   349  0070                     	ds	2
   350  0072                     ??_rutInter:
   351                           
   352                           ; 1 bytes @ 0x2
   353  0072                     	ds	4
   354  0076                     ??_configuraciones:
   355  0076                     ??_send1dato:	
   356                           ; 1 bytes @ 0x6
   357                           
   358  0076                     ??_guardarposiciones:	
   359                           ; 1 bytes @ 0x6
   360                           
   361  0076                     ??_leerposiciones:	
   362                           ; 1 bytes @ 0x6
   363                           
   364                           
   365                           	psect	cstackBANK0
   366  0020                     __pcstackBANK0:	
   367                           ; 1 bytes @ 0x6
   368                           
   369  0020                     ??_AnalogReadServo:
   370  0020                     ?_guardarposiciones:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0020                     send1dato@dato:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0020                     guardarposiciones@direccion:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0020                     leerposiciones@direccion:	
   380                           ; 1 bytes @ 0x0
   381                           
   382                           
   383                           ; 1 bytes @ 0x0
   384  0020                     	ds	1
   385  0021                     ??_leerSERVOS:
   386  0021                     guardarposiciones@guardar:	
   387                           ; 1 bytes @ 0x1
   388                           
   389                           
   390                           ; 1 bytes @ 0x1
   391  0021                     	ds	1
   392  0022                     ??_guardarservos:
   393                           
   394                           ; 1 bytes @ 0x2
   395  0022                     	ds	1
   396  0023                     leerSERVOS@desfase:
   397                           
   398                           ; 1 bytes @ 0x3
   399  0023                     	ds	1
   400  0024                     guardarservos@desfase:
   401  0024                     leerSERVOS@n:	
   402                           ; 1 bytes @ 0x4
   403                           
   404                           
   405                           ; 1 bytes @ 0x4
   406  0024                     	ds	1
   407  0025                     ??_leer3SEG:
   408  0025                     guardarservos@n:	
   409                           ; 1 bytes @ 0x5
   410                           
   411                           
   412                           ; 1 bytes @ 0x5
   413  0025                     	ds	1
   414  0026                     ??_guardar3SEG:
   415                           
   416                           ; 1 bytes @ 0x6
   417  0026                     	ds	2
   418  0028                     ??_main:
   419                           
   420                           ; 1 bytes @ 0x8
   421  0028                     	ds	3
   422                           
   423                           	psect	maintext
   424  012E                     __pmaintext:	
   425 ;;
   426 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   427 ;;
   428 ;; *************** function _main *****************
   429 ;; Defined at:
   430 ;;		line 133 in file "mainP2.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : B00/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   444 ;;      Params:         0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0
   446 ;;      Temps:          0       3       0       0       0
   447 ;;      Totals:         0       3       0       0       0
   448 ;;Total ram usage:        3 bytes
   449 ;; Hardware stack levels required when called:    5
   450 ;; This function calls:
   451 ;;		_AnalogReadServo
   452 ;;		_configuraciones
   453 ;;		_guardar3SEG
   454 ;;		_leer3SEG
   455 ;;		_send1dato
   456 ;; This function is called by:
   457 ;;		Startup code after reset
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           
   462                           ;psect for function _main
   463  012E                     _main:
   464  012E                     l2173:	
   465                           ;incstack = 0
   466                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   467                           
   468                           
   469                           ;mainP2.c: 134:     configuraciones();
   470  012E  120A  118A  21C6  120A  118A  	fcall	_configuraciones
   471  0133  29AD               	goto	l2213
   472  0134                     l135:	
   473                           ;mainP2.c: 138:             case 0:
   474                           
   475                           
   476                           ;mainP2.c: 139:                 PORTBbits.RB7 = 0;
   477  0134  1386               	bcf	6,7	;volatile
   478                           
   479                           ;mainP2.c: 141:                 if(UART.datorecep){
   480  0135  1C31               	btfss	_UART,0
   481  0136  2938               	goto	u1241
   482  0137  2939               	goto	u1240
   483  0138                     u1241:
   484  0138  2990               	goto	l2203
   485  0139                     u1240:
   486  0139  295A               	goto	l2195
   487  013A                     l138:	
   488                           ;mainP2.c: 143:                         case 1:
   489                           
   490                           
   491                           ;mainP2.c: 144:                             T1CONbits.TMR1ON = 1;
   492  013A  1410               	bsf	16,0	;volatile
   493                           
   494                           ;mainP2.c: 145:                             PORTEbits.RE0 = 1;
   495  013B  1409               	bsf	9,0	;volatile
   496  013C                     l2177:
   497                           
   498                           ;mainP2.c: 146:                             EXTREC = 0;
   499  013C  1283               	bcf	3,5	;RP0=0, select bank0
   500  013D  1303               	bcf	3,6	;RP1=0, select bank0
   501  013E  01AC               	clrf	_EXTREC
   502                           
   503                           ;mainP2.c: 147:                             break;
   504  013F  2973               	goto	l139
   505  0140                     l2179:
   506                           
   507                           ;mainP2.c: 149:                             CCPR2L = 0xFF;
   508  0140  30FF               	movlw	255
   509  0141  009B               	movwf	27	;volatile
   510  0142                     l2181:
   511                           
   512                           ;mainP2.c: 150:                             send1dato('b');
   513  0142  3062               	movlw	98
   514  0143  120A  118A  242C  120A  118A  	fcall	_send1dato
   515  0148  293C               	goto	l2177
   516  0149                     l2185:
   517                           
   518                           ;mainP2.c: 154:                             CCPR2L = 0x0F;
   519  0149  300F               	movlw	15
   520  014A  009B               	movwf	27	;volatile
   521  014B                     l2187:
   522                           
   523                           ;mainP2.c: 155:                             send1dato('c');
   524  014B  3063               	movlw	99
   525  014C  120A  118A  242C  120A  118A  	fcall	_send1dato
   526  0151  293C               	goto	l2177
   527  0152                     l142:	
   528                           ;mainP2.c: 158:                         case 4:
   529                           
   530                           
   531                           ;mainP2.c: 159:                             UART.piederecho = 1;
   532  0152  1531               	bsf	_UART,2
   533  0153                     l2191:
   534                           
   535                           ;mainP2.c: 160:                             EXTREC = 95;
   536  0153  305F               	movlw	95
   537  0154  00A8               	movwf	??_main
   538  0155  0828               	movf	??_main,w
   539  0156  00AC               	movwf	_EXTREC
   540                           
   541                           ;mainP2.c: 161:                             break;
   542  0157  2973               	goto	l139
   543  0158                     l143:	
   544                           ;mainP2.c: 162:                         case 8:
   545                           
   546                           
   547                           ;mainP2.c: 163:                             UART.piederecho = 0;
   548  0158  1131               	bcf	_UART,2
   549                           
   550                           ;mainP2.c: 164:                             break;
   551  0159  2973               	goto	l139
   552  015A                     l2195:
   553  015A  082C               	movf	_EXTREC,w
   554  015B  00A8               	movwf	??_main
   555  015C  01A9               	clrf	??_main+1
   556                           
   557                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   558                           ; Switch size 1, requested type "simple"
   559                           ; Number of cases is 1, Range of values is 0 to 0
   560                           ; switch strategies available:
   561                           ; Name         Instructions Cycles
   562                           ; simple_byte            4     3 (average)
   563                           ; direct_byte           11     8 (fixed)
   564                           ; jumptable            260     6 (fixed)
   565                           ;	Chosen strategy is simple_byte
   566  015D  0829               	movf	??_main+1,w
   567  015E  3A00               	xorlw	0	; case 0
   568  015F  1903               	skipnz
   569  0160  2962               	goto	l2383
   570  0161  2973               	goto	l139
   571  0162                     l2383:
   572                           
   573                           ; Switch size 1, requested type "simple"
   574                           ; Number of cases is 5, Range of values is 1 to 8
   575                           ; switch strategies available:
   576                           ; Name         Instructions Cycles
   577                           ; simple_byte           16     9 (average)
   578                           ; direct_byte           35    11 (fixed)
   579                           ; jumptable            263     9 (fixed)
   580                           ;	Chosen strategy is simple_byte
   581  0162  0828               	movf	??_main,w
   582  0163  3A01               	xorlw	1	; case 1
   583  0164  1903               	skipnz
   584  0165  293A               	goto	l138
   585  0166  3A03               	xorlw	3	; case 2
   586  0167  1903               	skipnz
   587  0168  2940               	goto	l2179
   588  0169  3A01               	xorlw	1	; case 3
   589  016A  1903               	skipnz
   590  016B  2949               	goto	l2185
   591  016C  3A07               	xorlw	7	; case 4
   592  016D  1903               	skipnz
   593  016E  2952               	goto	l142
   594  016F  3A0C               	xorlw	12	; case 8
   595  0170  1903               	skipnz
   596  0171  2958               	goto	l143
   597  0172  2973               	goto	l139
   598  0173                     l139:
   599                           
   600                           ;mainP2.c: 169:                     UART.datorecep = 0;
   601  0173  1031               	bcf	_UART,0
   602                           
   603                           ;mainP2.c: 171:                 if(UART.piederecho){
   604  0174  1D31               	btfss	_UART,2
   605  0175  2977               	goto	u1251
   606  0176  2978               	goto	u1250
   607  0177                     u1251:
   608  0177  2990               	goto	l2203
   609  0178                     u1250:
   610  0178                     l2197:
   611                           
   612                           ;mainP2.c: 172:                     if(EXTREC<=10)EXTREC = 10;
   613  0178  300B               	movlw	11
   614  0179  022C               	subwf	_EXTREC,w
   615  017A  1803               	skipnc
   616  017B  297D               	goto	u1261
   617  017C  297E               	goto	u1260
   618  017D                     u1261:
   619  017D  2982               	goto	l146
   620  017E                     u1260:
   621  017E                     l2199:
   622  017E  300A               	movlw	10
   623  017F  00A8               	movwf	??_main
   624  0180  0828               	movf	??_main,w
   625  0181  00AC               	movwf	_EXTREC
   626  0182                     l146:
   627                           
   628                           ;mainP2.c: 173:                     if(EXTREC>=160)EXTREC = 160;
   629  0182  30A0               	movlw	160
   630  0183  022C               	subwf	_EXTREC,w
   631  0184  1C03               	skipc
   632  0185  2987               	goto	u1271
   633  0186  2988               	goto	u1270
   634  0187                     u1271:
   635  0187  298C               	goto	l147
   636  0188                     u1270:
   637  0188                     l2201:
   638  0188  30A0               	movlw	160
   639  0189  00A8               	movwf	??_main
   640  018A  0828               	movf	??_main,w
   641  018B  00AC               	movwf	_EXTREC
   642  018C                     l147:
   643                           
   644                           ;mainP2.c: 174:                     POT1 = EXTREC;
   645  018C  082C               	movf	_EXTREC,w
   646  018D  00A8               	movwf	??_main
   647  018E  0828               	movf	??_main,w
   648  018F  00B0               	movwf	_POT1
   649  0190                     l2203:
   650                           
   651                           ;mainP2.c: 178:                 if(T1CONbits.TMR1ON){
   652  0190  1C10               	btfss	16,0	;volatile
   653  0191  2993               	goto	u1281
   654  0192  2994               	goto	u1280
   655  0193                     u1281:
   656  0193  29AD               	goto	l134
   657  0194                     u1280:
   658  0194                     l2205:
   659                           
   660                           ;mainP2.c: 179:                     leer3SEG();
   661  0194  120A  118A  23AC  120A  118A  	fcall	_leer3SEG
   662  0199  29AD               	goto	l2213
   663  019A                     l150:	
   664                           ;mainP2.c: 183:             case 1:
   665                           
   666                           
   667                           ;mainP2.c: 184:                 PORTBbits.RB7 = 1;
   668  019A  1786               	bsf	6,7	;volatile
   669                           
   670                           ;mainP2.c: 186:                 if(SERVOS.guardar){
   671  019B  1FB2               	btfss	_SERVOS,7
   672  019C  299E               	goto	u1291
   673  019D  299F               	goto	u1290
   674  019E                     u1291:
   675  019E  29A7               	goto	l151
   676  019F                     u1290:
   677  019F                     l2207:
   678                           
   679                           ;mainP2.c: 187:                     guardar3SEG();
   680  019F  120A  118A  23D9  120A  118A  	fcall	_guardar3SEG
   681  01A4                     l2209:
   682                           
   683                           ;mainP2.c: 188:                     SERVOS.guardar = 0;
   684  01A4  1283               	bcf	3,5	;RP0=0, select bank0
   685  01A5  1303               	bcf	3,6	;RP1=0, select bank0
   686  01A6  13B2               	bcf	_SERVOS,7
   687  01A7                     l151:	
   688                           ;mainP2.c: 189:                 }
   689                           
   690                           
   691                           ;mainP2.c: 191:                 AnalogReadServo();
   692  01A7  120A  118A  2021  120A  118A  	fcall	_AnalogReadServo
   693                           
   694                           ;mainP2.c: 192:                 break;
   695  01AC  29AD               	goto	l2213
   696  01AD                     l134:
   697  01AD                     l2213:
   698  01AD  1283               	bcf	3,5	;RP0=0, select bank0
   699  01AE  1303               	bcf	3,6	;RP1=0, select bank0
   700  01AF  0E32               	swapf	_SERVOS,w
   701  01B0  00A8               	movwf	??_main
   702  01B1  0CA8               	rrf	??_main,f
   703  01B2  0C28               	rrf	??_main,w
   704  01B3  3901               	andlw	1
   705  01B4  00A9               	movwf	??_main+1
   706  01B5  01AA               	clrf	??_main+2
   707                           
   708                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   709                           ; Switch size 1, requested type "simple"
   710                           ; Number of cases is 1, Range of values is 0 to 0
   711                           ; switch strategies available:
   712                           ; Name         Instructions Cycles
   713                           ; simple_byte            4     3 (average)
   714                           ; direct_byte           11     8 (fixed)
   715                           ; jumptable            260     6 (fixed)
   716                           ;	Chosen strategy is simple_byte
   717  01B6  082A               	movf	??_main+2,w
   718  01B7  3A00               	xorlw	0	; case 0
   719  01B8  1903               	skipnz
   720  01B9  29BB               	goto	l2385
   721  01BA  29AD               	goto	l2213
   722  01BB                     l2385:
   723                           
   724                           ; Switch size 1, requested type "simple"
   725                           ; Number of cases is 2, Range of values is 0 to 1
   726                           ; switch strategies available:
   727                           ; Name         Instructions Cycles
   728                           ; simple_byte            7     4 (average)
   729                           ; direct_byte           14     8 (fixed)
   730                           ; jumptable            260     6 (fixed)
   731                           ;	Chosen strategy is simple_byte
   732  01BB  0829               	movf	??_main+1,w
   733  01BC  3A00               	xorlw	0	; case 0
   734  01BD  1903               	skipnz
   735  01BE  2934               	goto	l135
   736  01BF  3A01               	xorlw	1	; case 1
   737  01C0  1903               	skipnz
   738  01C1  299A               	goto	l150
   739  01C2  29AD               	goto	l2213
   740  01C3  120A  118A  280E   	ljmp	start
   741  01C6                     __end_of_main:
   742                           
   743                           	psect	text1
   744  03AC                     __ptext1:	
   745 ;; *************** function _leer3SEG *****************
   746 ;; Defined at:
   747 ;;		line 443 in file "mainP2.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   761 ;;      Params:         0       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0
   763 ;;      Temps:          0       2       0       0       0
   764 ;;      Totals:         0       2       0       0       0
   765 ;;Total ram usage:        2 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; Hardware stack levels required when called:    4
   768 ;; This function calls:
   769 ;;		_leerSERVOS
   770 ;;		_send1dato
   771 ;; This function is called by:
   772 ;;		_main
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           
   777                           ;psect for function _leer3SEG
   778  03AC                     _leer3SEG:
   779  03AC                     l2083:	
   780                           ;incstack = 0
   781                           ; Regs used in _leer3SEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   782                           
   783                           
   784                           ;mainP2.c: 444:     switch(posicion){
   785  03AC  2BC9               	goto	l2093
   786  03AD                     l256:	
   787                           ;mainP2.c: 445:         case 31:
   788                           
   789                           
   790                           ;mainP2.c: 446:             T1CONbits.TMR1ON = 0;
   791  03AD  1010               	bcf	16,0	;volatile
   792  03AE                     l2085:
   793                           
   794                           ;mainP2.c: 447:             TMR1H = 0;
   795  03AE  018F               	clrf	15	;volatile
   796                           
   797                           ;mainP2.c: 448:             TMR1L = 0;
   798  03AF  018E               	clrf	14	;volatile
   799                           
   800                           ;mainP2.c: 449:             posicion = 0;
   801  03B0  01AB               	clrf	_posicion
   802                           
   803                           ;mainP2.c: 450:             PORTE = 0;
   804  03B1  0189               	clrf	9	;volatile
   805  03B2                     l2087:
   806                           
   807                           ;mainP2.c: 451:             send1dato('a');
   808  03B2  3061               	movlw	97
   809  03B3  120A  118A  242C  120A  118A  	fcall	_send1dato
   810                           
   811                           ;mainP2.c: 452:             break;
   812  03B8  2BD8               	goto	l259
   813  03B9                     l2089:
   814                           
   815                           ;mainP2.c: 454:             leerSERVOS(4*posicion);
   816  03B9  082B               	movf	_posicion,w
   817  03BA  00A5               	movwf	??_leer3SEG
   818  03BB  3001               	movlw	1
   819  03BC                     u1015:
   820  03BC  1003               	clrc
   821  03BD  0DA5               	rlf	??_leer3SEG,f
   822  03BE  3EFF               	addlw	-1
   823  03BF  1D03               	skipz
   824  03C0  2BBC               	goto	u1015
   825  03C1  1003               	clrc
   826  03C2  0D25               	rlf	??_leer3SEG,w
   827  03C3  120A  118A  22AA  120A  118A  	fcall	_leerSERVOS
   828                           
   829                           ;mainP2.c: 455:             break;
   830  03C8  2BD8               	goto	l259
   831  03C9                     l2093:
   832  03C9  1283               	bcf	3,5	;RP0=0, select bank0
   833  03CA  1303               	bcf	3,6	;RP1=0, select bank0
   834  03CB  082B               	movf	_posicion,w
   835  03CC  00A5               	movwf	??_leer3SEG
   836  03CD  01A6               	clrf	??_leer3SEG+1
   837                           
   838                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   839                           ; Switch size 1, requested type "simple"
   840                           ; Number of cases is 1, Range of values is 0 to 0
   841                           ; switch strategies available:
   842                           ; Name         Instructions Cycles
   843                           ; simple_byte            4     3 (average)
   844                           ; direct_byte           11     8 (fixed)
   845                           ; jumptable            260     6 (fixed)
   846                           ;	Chosen strategy is simple_byte
   847  03CE  0826               	movf	??_leer3SEG+1,w
   848  03CF  3A00               	xorlw	0	; case 0
   849  03D0  1903               	skipnz
   850  03D1  2BD3               	goto	l2387
   851  03D2  2BB9               	goto	l2089
   852  03D3                     l2387:
   853                           
   854                           ; Switch size 1, requested type "simple"
   855                           ; Number of cases is 1, Range of values is 31 to 31
   856                           ; switch strategies available:
   857                           ; Name         Instructions Cycles
   858                           ; simple_byte            4     3 (average)
   859                           ; direct_byte           14    11 (fixed)
   860                           ; jumptable            263     9 (fixed)
   861                           ;	Chosen strategy is simple_byte
   862  03D3  0825               	movf	??_leer3SEG,w
   863  03D4  3A1F               	xorlw	31	; case 31
   864  03D5  1903               	skipnz
   865  03D6  2BAD               	goto	l256
   866  03D7  2BB9               	goto	l2089
   867  03D8                     l259:
   868  03D8  0008               	return
   869  03D9                     __end_of_leer3SEG:
   870                           
   871                           	psect	text2
   872  042C                     __ptext2:	
   873 ;; *************** function _send1dato *****************
   874 ;; Defined at:
   875 ;;		line 373 in file "mainP2.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  dato            1    wreg     unsigned char 
   878 ;; Auto vars:     Size  Location     Type
   879 ;;  dato            1    0[BANK0 ] unsigned char 
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		wreg
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   889 ;;      Params:         0       0       0       0       0
   890 ;;      Locals:         0       1       0       0       0
   891 ;;      Temps:          0       0       0       0       0
   892 ;;      Totals:         0       1       0       0       0
   893 ;;Total ram usage:        1 bytes
   894 ;; Hardware stack levels used:    1
   895 ;; Hardware stack levels required when called:    2
   896 ;; This function calls:
   897 ;;		Nothing
   898 ;; This function is called by:
   899 ;;		_main
   900 ;;		_leer3SEG
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           
   905                           ;psect for function _send1dato
   906  042C                     _send1dato:
   907                           
   908                           ;incstack = 0
   909                           ; Regs used in _send1dato: [wreg]
   910                           ;send1dato@dato stored from wreg
   911  042C  1283               	bcf	3,5	;RP0=0, select bank0
   912  042D  1303               	bcf	3,6	;RP1=0, select bank0
   913  042E  00A0               	movwf	send1dato@dato
   914  042F                     l2029:
   915                           
   916                           ;mainP2.c: 374:     TXREG = dato;
   917  042F  0820               	movf	send1dato@dato,w
   918  0430  0099               	movwf	25	;volatile
   919  0431                     l211:	
   920                           ;mainP2.c: 375:     while(!TXSTAbits.TRMT);
   921                           
   922  0431  1683               	bsf	3,5	;RP0=1, select bank1
   923  0432  1303               	bcf	3,6	;RP1=0, select bank1
   924  0433  1C98               	btfss	24,1	;volatile
   925  0434  2C36               	goto	u981
   926  0435  2C37               	goto	u980
   927  0436                     u981:
   928  0436  2C31               	goto	l211
   929  0437                     u980:
   930  0437                     l214:
   931  0437  0008               	return
   932  0438                     __end_of_send1dato:
   933                           
   934                           	psect	text3
   935  02AA                     __ptext3:	
   936 ;; *************** function _leerSERVOS *****************
   937 ;; Defined at:
   938 ;;		line 413 in file "mainP2.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  desfase         1    wreg     unsigned char 
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  desfase         1    3[BANK0 ] unsigned char 
   943 ;;  n               1    4[BANK0 ] unsigned char 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   953 ;;      Params:         0       0       0       0       0
   954 ;;      Locals:         0       2       0       0       0
   955 ;;      Temps:          0       2       0       0       0
   956 ;;      Totals:         0       4       0       0       0
   957 ;;Total ram usage:        4 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; Hardware stack levels required when called:    3
   960 ;; This function calls:
   961 ;;		_leerposiciones
   962 ;; This function is called by:
   963 ;;		_leer3SEG
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           
   968                           ;psect for function _leerSERVOS
   969  02AA                     _leerSERVOS:
   970                           
   971                           ;incstack = 0
   972                           ; Regs used in _leerSERVOS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   973                           ;leerSERVOS@desfase stored from wreg
   974  02AA  1283               	bcf	3,5	;RP0=0, select bank0
   975  02AB  1303               	bcf	3,6	;RP1=0, select bank0
   976  02AC  00A3               	movwf	leerSERVOS@desfase
   977  02AD                     l2057:
   978                           
   979                           ;mainP2.c: 414:     for(uint8_t n=0;n<=3; n++){
   980  02AD  01A4               	clrf	leerSERVOS@n
   981  02AE  2AE3               	goto	l2073
   982  02AF                     l2063:
   983  02AF  0823               	movf	leerSERVOS@desfase,w
   984  02B0  0724               	addwf	leerSERVOS@n,w
   985  02B1  120A  118A  241D  120A  118A  	fcall	_leerposiciones
   986  02B6  1283               	bcf	3,5	;RP0=0, select bank0
   987  02B7  1303               	bcf	3,6	;RP1=0, select bank0
   988  02B8  00A1               	movwf	??_leerSERVOS
   989  02B9  0821               	movf	??_leerSERVOS,w
   990  02BA  00B0               	movwf	_POT1
   991                           
   992                           ;mainP2.c: 417:                 break;
   993  02BB  2AF9               	goto	l2075
   994  02BC                     l2065:
   995  02BC  0823               	movf	leerSERVOS@desfase,w
   996  02BD  0724               	addwf	leerSERVOS@n,w
   997  02BE  120A  118A  241D  120A  118A  	fcall	_leerposiciones
   998  02C3  1283               	bcf	3,5	;RP0=0, select bank0
   999  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  1000  02C5  00A1               	movwf	??_leerSERVOS
  1001  02C6  0821               	movf	??_leerSERVOS,w
  1002  02C7  00AF               	movwf	_POT2
  1003                           
  1004                           ;mainP2.c: 419:                 break;
  1005  02C8  2AF9               	goto	l2075
  1006  02C9                     l2067:
  1007  02C9  0823               	movf	leerSERVOS@desfase,w
  1008  02CA  0724               	addwf	leerSERVOS@n,w
  1009  02CB  120A  118A  241D  120A  118A  	fcall	_leerposiciones
  1010  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  1011  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  1012  02D2  00A1               	movwf	??_leerSERVOS
  1013  02D3  0821               	movf	??_leerSERVOS,w
  1014  02D4  00AE               	movwf	_POT3
  1015                           
  1016                           ;mainP2.c: 421:                 break;
  1017  02D5  2AF9               	goto	l2075
  1018  02D6                     l2069:
  1019  02D6  0823               	movf	leerSERVOS@desfase,w
  1020  02D7  0724               	addwf	leerSERVOS@n,w
  1021  02D8  120A  118A  241D  120A  118A  	fcall	_leerposiciones
  1022  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  1023  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  1024  02DF  00A1               	movwf	??_leerSERVOS
  1025  02E0  0821               	movf	??_leerSERVOS,w
  1026  02E1  00AD               	movwf	_POT4
  1027                           
  1028                           ;mainP2.c: 423:                 break;
  1029  02E2  2AF9               	goto	l2075
  1030  02E3                     l2073:
  1031  02E3  0824               	movf	leerSERVOS@n,w
  1032  02E4  00A1               	movwf	??_leerSERVOS
  1033  02E5  01A2               	clrf	??_leerSERVOS+1
  1034                           
  1035                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1036                           ; Switch size 1, requested type "simple"
  1037                           ; Number of cases is 1, Range of values is 0 to 0
  1038                           ; switch strategies available:
  1039                           ; Name         Instructions Cycles
  1040                           ; simple_byte            4     3 (average)
  1041                           ; direct_byte           11     8 (fixed)
  1042                           ; jumptable            260     6 (fixed)
  1043                           ;	Chosen strategy is simple_byte
  1044  02E6  0822               	movf	??_leerSERVOS+1,w
  1045  02E7  3A00               	xorlw	0	; case 0
  1046  02E8  1903               	skipnz
  1047  02E9  2AEB               	goto	l2389
  1048  02EA  2AF9               	goto	l2075
  1049  02EB                     l2389:
  1050                           
  1051                           ; Switch size 1, requested type "simple"
  1052                           ; Number of cases is 4, Range of values is 0 to 3
  1053                           ; switch strategies available:
  1054                           ; Name         Instructions Cycles
  1055                           ; simple_byte           13     7 (average)
  1056                           ; direct_byte           20     8 (fixed)
  1057                           ; jumptable            260     6 (fixed)
  1058                           ;	Chosen strategy is simple_byte
  1059  02EB  0821               	movf	??_leerSERVOS,w
  1060  02EC  3A00               	xorlw	0	; case 0
  1061  02ED  1903               	skipnz
  1062  02EE  2AAF               	goto	l2063
  1063  02EF  3A01               	xorlw	1	; case 1
  1064  02F0  1903               	skipnz
  1065  02F1  2ABC               	goto	l2065
  1066  02F2  3A03               	xorlw	3	; case 2
  1067  02F3  1903               	skipnz
  1068  02F4  2AC9               	goto	l2067
  1069  02F5  3A01               	xorlw	1	; case 3
  1070  02F6  1903               	skipnz
  1071  02F7  2AD6               	goto	l2069
  1072  02F8  2AF9               	goto	l2075
  1073  02F9                     l2075:
  1074                           
  1075                           ;mainP2.c: 425:     }
  1076  02F9  3001               	movlw	1
  1077  02FA  00A1               	movwf	??_leerSERVOS
  1078  02FB  0821               	movf	??_leerSERVOS,w
  1079  02FC  07A4               	addwf	leerSERVOS@n,f
  1080  02FD                     l2077:
  1081  02FD  3004               	movlw	4
  1082  02FE  0224               	subwf	leerSERVOS@n,w
  1083  02FF  1C03               	skipc
  1084  0300  2B02               	goto	u1001
  1085  0301  2B03               	goto	u1000
  1086  0302                     u1001:
  1087  0302  2AE3               	goto	l2073
  1088  0303                     u1000:
  1089  0303                     l245:
  1090  0303  0008               	return
  1091  0304                     __end_of_leerSERVOS:
  1092                           
  1093                           	psect	text4
  1094  041D                     __ptext4:	
  1095 ;; *************** function _leerposiciones *****************
  1096 ;; Defined at:
  1097 ;;		line 406 in file "mainP2.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  direccion       1    wreg     unsigned char 
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  direccion       1    0[BANK0 ] unsigned char 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  1    wreg      unsigned char 
  1104 ;; Registers used:
  1105 ;;		wreg
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1111 ;;      Params:         0       0       0       0       0
  1112 ;;      Locals:         0       1       0       0       0
  1113 ;;      Temps:          0       0       0       0       0
  1114 ;;      Totals:         0       1       0       0       0
  1115 ;;Total ram usage:        1 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:    2
  1118 ;; This function calls:
  1119 ;;		Nothing
  1120 ;; This function is called by:
  1121 ;;		_leerSERVOS
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           
  1126                           ;psect for function _leerposiciones
  1127  041D                     _leerposiciones:
  1128                           
  1129                           ;incstack = 0
  1130                           ; Regs used in _leerposiciones: [wreg]
  1131                           ;leerposiciones@direccion stored from wreg
  1132  041D  1283               	bcf	3,5	;RP0=0, select bank0
  1133  041E  1303               	bcf	3,6	;RP1=0, select bank0
  1134  041F  00A0               	movwf	leerposiciones@direccion
  1135  0420                     l2021:
  1136                           
  1137                           ;mainP2.c: 407:     EEADR = direccion;
  1138  0420  0820               	movf	leerposiciones@direccion,w
  1139  0421  1283               	bcf	3,5	;RP0=0, select bank2
  1140  0422  1703               	bsf	3,6	;RP1=1, select bank2
  1141  0423  008D               	movwf	13	;volatile
  1142  0424                     l2023:
  1143                           
  1144                           ;mainP2.c: 408:     EECON1bits.EEPGD = 0;
  1145  0424  1683               	bsf	3,5	;RP0=1, select bank3
  1146  0425  1703               	bsf	3,6	;RP1=1, select bank3
  1147  0426  138C               	bcf	12,7	;volsfr
  1148  0427                     l2025:
  1149                           
  1150                           ;mainP2.c: 409:     EECON1bits.RD = 1;
  1151  0427  140C               	bsf	12,0	;volsfr
  1152                           
  1153                           ;mainP2.c: 410:     return EEDAT;
  1154  0428  1283               	bcf	3,5	;RP0=0, select bank2
  1155  0429  1703               	bsf	3,6	;RP1=1, select bank2
  1156  042A  080C               	movf	12,w	;volatile
  1157  042B                     l234:
  1158  042B  0008               	return
  1159  042C                     __end_of_leerposiciones:
  1160                           
  1161                           	psect	text5
  1162  03D9                     __ptext5:	
  1163 ;; *************** function _guardar3SEG *****************
  1164 ;; Defined at:
  1165 ;;		line 428 in file "mainP2.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;		None
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;		None
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1179 ;;      Params:         0       0       0       0       0
  1180 ;;      Locals:         0       0       0       0       0
  1181 ;;      Temps:          0       2       0       0       0
  1182 ;;      Totals:         0       2       0       0       0
  1183 ;;Total ram usage:        2 bytes
  1184 ;; Hardware stack levels used:    1
  1185 ;; Hardware stack levels required when called:    4
  1186 ;; This function calls:
  1187 ;;		_guardarservos
  1188 ;; This function is called by:
  1189 ;;		_main
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           
  1194                           ;psect for function _guardar3SEG
  1195  03D9                     _guardar3SEG:
  1196  03D9                     l2099:	
  1197                           ;incstack = 0
  1198                           ; Regs used in _guardar3SEG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1199                           
  1200                           
  1201                           ;mainP2.c: 429:     switch(posicion){
  1202  03D9  2BF0               	goto	l2107
  1203  03DA                     l249:	
  1204                           ;mainP2.c: 430:         case 31:
  1205                           
  1206                           
  1207                           ;mainP2.c: 431:             T1CONbits.TMR1ON = 0;
  1208  03DA  1010               	bcf	16,0	;volatile
  1209  03DB                     l2101:
  1210                           
  1211                           ;mainP2.c: 432:             TMR1H = 0;
  1212  03DB  018F               	clrf	15	;volatile
  1213                           
  1214                           ;mainP2.c: 433:             TMR1L = 0;
  1215  03DC  018E               	clrf	14	;volatile
  1216                           
  1217                           ;mainP2.c: 434:             posicion = 0;
  1218  03DD  01AB               	clrf	_posicion
  1219                           
  1220                           ;mainP2.c: 435:             PORTE = 0;
  1221  03DE  0189               	clrf	9	;volatile
  1222                           
  1223                           ;mainP2.c: 436:             break;
  1224  03DF  2BFF               	goto	l252
  1225  03E0                     l2103:
  1226                           
  1227                           ;mainP2.c: 438:             guardarservos(4*posicion);
  1228  03E0  082B               	movf	_posicion,w
  1229  03E1  00A6               	movwf	??_guardar3SEG
  1230  03E2  3001               	movlw	1
  1231  03E3                     u1025:
  1232  03E3  1003               	clrc
  1233  03E4  0DA6               	rlf	??_guardar3SEG,f
  1234  03E5  3EFF               	addlw	-1
  1235  03E6  1D03               	skipz
  1236  03E7  2BE3               	goto	u1025
  1237  03E8  1003               	clrc
  1238  03E9  0D26               	rlf	??_guardar3SEG,w
  1239  03EA  120A  118A  2304  120A  118A  	fcall	_guardarservos
  1240                           
  1241                           ;mainP2.c: 439:             break;
  1242  03EF  2BFF               	goto	l252
  1243  03F0                     l2107:
  1244  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  1245  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  1246  03F2  082B               	movf	_posicion,w
  1247  03F3  00A6               	movwf	??_guardar3SEG
  1248  03F4  01A7               	clrf	??_guardar3SEG+1
  1249                           
  1250                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1251                           ; Switch size 1, requested type "simple"
  1252                           ; Number of cases is 1, Range of values is 0 to 0
  1253                           ; switch strategies available:
  1254                           ; Name         Instructions Cycles
  1255                           ; simple_byte            4     3 (average)
  1256                           ; direct_byte           11     8 (fixed)
  1257                           ; jumptable            260     6 (fixed)
  1258                           ;	Chosen strategy is simple_byte
  1259  03F5  0827               	movf	??_guardar3SEG+1,w
  1260  03F6  3A00               	xorlw	0	; case 0
  1261  03F7  1903               	skipnz
  1262  03F8  2BFA               	goto	l2391
  1263  03F9  2BE0               	goto	l2103
  1264  03FA                     l2391:
  1265                           
  1266                           ; Switch size 1, requested type "simple"
  1267                           ; Number of cases is 1, Range of values is 31 to 31
  1268                           ; switch strategies available:
  1269                           ; Name         Instructions Cycles
  1270                           ; simple_byte            4     3 (average)
  1271                           ; direct_byte           14    11 (fixed)
  1272                           ; jumptable            263     9 (fixed)
  1273                           ;	Chosen strategy is simple_byte
  1274  03FA  0826               	movf	??_guardar3SEG,w
  1275  03FB  3A1F               	xorlw	31	; case 31
  1276  03FC  1903               	skipnz
  1277  03FD  2BDA               	goto	l249
  1278  03FE  2BE0               	goto	l2103
  1279  03FF                     l252:
  1280  03FF  0008               	return
  1281  0400                     __end_of_guardar3SEG:
  1282                           
  1283                           	psect	text6
  1284  0304                     __ptext6:	
  1285 ;; *************** function _guardarservos *****************
  1286 ;; Defined at:
  1287 ;;		line 391 in file "mainP2.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  desfase         1    wreg     unsigned char 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  desfase         1    4[BANK0 ] unsigned char 
  1292 ;;  n               1    5[BANK0 ] unsigned char 
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1302 ;;      Params:         0       0       0       0       0
  1303 ;;      Locals:         0       2       0       0       0
  1304 ;;      Temps:          0       2       0       0       0
  1305 ;;      Totals:         0       4       0       0       0
  1306 ;;Total ram usage:        4 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; Hardware stack levels required when called:    3
  1309 ;; This function calls:
  1310 ;;		_guardarposiciones
  1311 ;; This function is called by:
  1312 ;;		_guardar3SEG
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           
  1317                           ;psect for function _guardarservos
  1318  0304                     _guardarservos:
  1319                           
  1320                           ;incstack = 0
  1321                           ; Regs used in _guardarservos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1322                           ;guardarservos@desfase stored from wreg
  1323  0304  1283               	bcf	3,5	;RP0=0, select bank0
  1324  0305  1303               	bcf	3,6	;RP1=0, select bank0
  1325  0306  00A4               	movwf	guardarservos@desfase
  1326  0307                     l2031:
  1327                           
  1328                           ;mainP2.c: 392:     for(uint8_t n=0;n<=3;n++){
  1329  0307  01A5               	clrf	guardarservos@n
  1330  0308  2B39               	goto	l2047
  1331  0309                     l2037:
  1332  0309  0824               	movf	guardarservos@desfase,w
  1333  030A  0725               	addwf	guardarservos@n,w
  1334  030B  00A2               	movwf	??_guardarservos
  1335  030C  0822               	movf	??_guardarservos,w
  1336  030D  00A0               	movwf	guardarposiciones@direccion
  1337  030E  0830               	movf	_POT1,w
  1338  030F  120A  118A  2400  120A  118A  	fcall	_guardarposiciones
  1339                           
  1340                           ;mainP2.c: 395:                 break;
  1341  0314  2B4F               	goto	l2049
  1342  0315                     l2039:
  1343  0315  0824               	movf	guardarservos@desfase,w
  1344  0316  0725               	addwf	guardarservos@n,w
  1345  0317  00A2               	movwf	??_guardarservos
  1346  0318  0822               	movf	??_guardarservos,w
  1347  0319  00A0               	movwf	guardarposiciones@direccion
  1348  031A  082F               	movf	_POT2,w
  1349  031B  120A  118A  2400  120A  118A  	fcall	_guardarposiciones
  1350                           
  1351                           ;mainP2.c: 397:                 break;
  1352  0320  2B4F               	goto	l2049
  1353  0321                     l2041:
  1354  0321  0824               	movf	guardarservos@desfase,w
  1355  0322  0725               	addwf	guardarservos@n,w
  1356  0323  00A2               	movwf	??_guardarservos
  1357  0324  0822               	movf	??_guardarservos,w
  1358  0325  00A0               	movwf	guardarposiciones@direccion
  1359  0326  082E               	movf	_POT3,w
  1360  0327  120A  118A  2400  120A  118A  	fcall	_guardarposiciones
  1361                           
  1362                           ;mainP2.c: 399:                 break;
  1363  032C  2B4F               	goto	l2049
  1364  032D                     l2043:
  1365  032D  0824               	movf	guardarservos@desfase,w
  1366  032E  0725               	addwf	guardarservos@n,w
  1367  032F  00A2               	movwf	??_guardarservos
  1368  0330  0822               	movf	??_guardarservos,w
  1369  0331  00A0               	movwf	guardarposiciones@direccion
  1370  0332  082D               	movf	_POT4,w
  1371  0333  120A  118A  2400  120A  118A  	fcall	_guardarposiciones
  1372                           
  1373                           ;mainP2.c: 401:                 break;
  1374  0338  2B4F               	goto	l2049
  1375  0339                     l2047:
  1376  0339  0825               	movf	guardarservos@n,w
  1377  033A  00A2               	movwf	??_guardarservos
  1378  033B  01A3               	clrf	??_guardarservos+1
  1379                           
  1380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1381                           ; Switch size 1, requested type "simple"
  1382                           ; Number of cases is 1, Range of values is 0 to 0
  1383                           ; switch strategies available:
  1384                           ; Name         Instructions Cycles
  1385                           ; simple_byte            4     3 (average)
  1386                           ; direct_byte           11     8 (fixed)
  1387                           ; jumptable            260     6 (fixed)
  1388                           ;	Chosen strategy is simple_byte
  1389  033C  0823               	movf	??_guardarservos+1,w
  1390  033D  3A00               	xorlw	0	; case 0
  1391  033E  1903               	skipnz
  1392  033F  2B41               	goto	l2393
  1393  0340  2B4F               	goto	l2049
  1394  0341                     l2393:
  1395                           
  1396                           ; Switch size 1, requested type "simple"
  1397                           ; Number of cases is 4, Range of values is 0 to 3
  1398                           ; switch strategies available:
  1399                           ; Name         Instructions Cycles
  1400                           ; simple_byte           13     7 (average)
  1401                           ; direct_byte           20     8 (fixed)
  1402                           ; jumptable            260     6 (fixed)
  1403                           ;	Chosen strategy is simple_byte
  1404  0341  0822               	movf	??_guardarservos,w
  1405  0342  3A00               	xorlw	0	; case 0
  1406  0343  1903               	skipnz
  1407  0344  2B09               	goto	l2037
  1408  0345  3A01               	xorlw	1	; case 1
  1409  0346  1903               	skipnz
  1410  0347  2B15               	goto	l2039
  1411  0348  3A03               	xorlw	3	; case 2
  1412  0349  1903               	skipnz
  1413  034A  2B21               	goto	l2041
  1414  034B  3A01               	xorlw	1	; case 3
  1415  034C  1903               	skipnz
  1416  034D  2B2D               	goto	l2043
  1417  034E  2B4F               	goto	l2049
  1418  034F                     l2049:
  1419                           
  1420                           ;mainP2.c: 403:     }
  1421  034F  3001               	movlw	1
  1422  0350  1283               	bcf	3,5	;RP0=0, select bank0
  1423  0351  1303               	bcf	3,6	;RP1=0, select bank0
  1424  0352  00A2               	movwf	??_guardarservos
  1425  0353  0822               	movf	??_guardarservos,w
  1426  0354  07A5               	addwf	guardarservos@n,f
  1427  0355                     l2051:
  1428  0355  3004               	movlw	4
  1429  0356  0225               	subwf	guardarservos@n,w
  1430  0357  1C03               	skipc
  1431  0358  2B5A               	goto	u991
  1432  0359  2B5B               	goto	u990
  1433  035A                     u991:
  1434  035A  2B39               	goto	l2047
  1435  035B                     u990:
  1436  035B                     l231:
  1437  035B  0008               	return
  1438  035C                     __end_of_guardarservos:
  1439                           
  1440                           	psect	text7
  1441  0400                     __ptext7:	
  1442 ;; *************** function _guardarposiciones *****************
  1443 ;; Defined at:
  1444 ;;		line 378 in file "mainP2.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;  guardar         1    wreg     unsigned char 
  1447 ;;  direccion       1    0[BANK0 ] unsigned char 
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;  guardar         1    1[BANK0 ] unsigned char 
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		wreg
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1459 ;;      Params:         0       1       0       0       0
  1460 ;;      Locals:         0       1       0       0       0
  1461 ;;      Temps:          0       0       0       0       0
  1462 ;;      Totals:         0       2       0       0       0
  1463 ;;Total ram usage:        2 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; Hardware stack levels required when called:    2
  1466 ;; This function calls:
  1467 ;;		Nothing
  1468 ;; This function is called by:
  1469 ;;		_guardarservos
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           
  1474                           ;psect for function _guardarposiciones
  1475  0400                     _guardarposiciones:
  1476                           
  1477                           ;incstack = 0
  1478                           ; Regs used in _guardarposiciones: [wreg]
  1479                           ;guardarposiciones@guardar stored from wreg
  1480  0400  1283               	bcf	3,5	;RP0=0, select bank0
  1481  0401  1303               	bcf	3,6	;RP1=0, select bank0
  1482  0402  00A1               	movwf	guardarposiciones@guardar
  1483  0403                     l2011:
  1484                           
  1485                           ;mainP2.c: 379:     EEADR = direccion;
  1486  0403  0820               	movf	guardarposiciones@direccion,w
  1487  0404  1283               	bcf	3,5	;RP0=0, select bank2
  1488  0405  1703               	bsf	3,6	;RP1=1, select bank2
  1489  0406  008D               	movwf	13	;volatile
  1490                           
  1491                           ;mainP2.c: 380:     EEDAT = guardar;
  1492  0407  1283               	bcf	3,5	;RP0=0, select bank0
  1493  0408  1303               	bcf	3,6	;RP1=0, select bank0
  1494  0409  0821               	movf	guardarposiciones@guardar,w
  1495  040A  1283               	bcf	3,5	;RP0=0, select bank2
  1496  040B  1703               	bsf	3,6	;RP1=1, select bank2
  1497  040C  008C               	movwf	12	;volatile
  1498  040D                     l2013:
  1499                           
  1500                           ;mainP2.c: 381:     EECON1bits.WREN = 1;
  1501  040D  1683               	bsf	3,5	;RP0=1, select bank3
  1502  040E  1703               	bsf	3,6	;RP1=1, select bank3
  1503  040F  150C               	bsf	12,2	;volsfr
  1504  0410                     l2015:
  1505                           
  1506                           ;mainP2.c: 382:     INTCONbits.GIE = 0;
  1507  0410  138B               	bcf	11,7	;volatile
  1508                           
  1509                           ;mainP2.c: 383:     EECON2 = 0X55;
  1510  0411  3055               	movlw	85
  1511  0412  008D               	movwf	13	;volsfr
  1512                           
  1513                           ;mainP2.c: 384:     EECON2 = 0XAA;
  1514  0413  30AA               	movlw	170
  1515  0414  008D               	movwf	13	;volsfr
  1516  0415                     l2017:
  1517                           
  1518                           ;mainP2.c: 385:     EECON1bits.WR = 1;
  1519  0415  148C               	bsf	12,1	;volsfr
  1520  0416                     l2019:
  1521                           
  1522                           ;mainP2.c: 386:     INTCONbits.GIE = 1;
  1523  0416  178B               	bsf	11,7	;volatile
  1524  0417                     l217:	
  1525                           ;mainP2.c: 387:     while(EECON1bits.WR);
  1526                           
  1527  0417  188C               	btfsc	12,1	;volsfr
  1528  0418  2C1A               	goto	u971
  1529  0419  2C1B               	goto	u970
  1530  041A                     u971:
  1531  041A  2C17               	goto	l217
  1532  041B                     u970:
  1533  041B                     l219:
  1534                           
  1535                           ;mainP2.c: 388:     EECON1bits.WREN = 0;
  1536  041B  110C               	bcf	12,2	;volsfr
  1537  041C                     l220:
  1538  041C  0008               	return
  1539  041D                     __end_of_guardarposiciones:
  1540                           
  1541                           	psect	text8
  1542  01C6                     __ptext8:	
  1543 ;; *************** function _configuraciones *****************
  1544 ;; Defined at:
  1545 ;;		line 201 in file "mainP2.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;		None
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;		None
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg, status,2, status,0
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1559 ;;      Params:         0       0       0       0       0
  1560 ;;      Locals:         0       0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0
  1562 ;;      Totals:         0       0       0       0       0
  1563 ;;Total ram usage:        0 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:    2
  1566 ;; This function calls:
  1567 ;;		Nothing
  1568 ;; This function is called by:
  1569 ;;		_main
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           
  1574                           ;psect for function _configuraciones
  1575  01C6                     _configuraciones:
  1576  01C6                     l1559:	
  1577                           ;incstack = 0
  1578                           ; Regs used in _configuraciones: [wreg+status,2+status,0]
  1579                           
  1580                           
  1581                           ;mainP2.c: 203:     ANSEL = 0X0F;
  1582  01C6  300F               	movlw	15
  1583  01C7  1683               	bsf	3,5	;RP0=1, select bank3
  1584  01C8  1703               	bsf	3,6	;RP1=1, select bank3
  1585  01C9  0088               	movwf	8	;volatile
  1586  01CA                     l1561:
  1587                           
  1588                           ;mainP2.c: 204:     ANSELH = 0X00;
  1589  01CA  0189               	clrf	9	;volatile
  1590  01CB                     l1563:
  1591                           
  1592                           ;mainP2.c: 205:     TRISA = 0X0F;
  1593  01CB  300F               	movlw	15
  1594  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  1595  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  1596  01CE  0085               	movwf	5	;volatile
  1597  01CF                     l1565:
  1598                           
  1599                           ;mainP2.c: 206:     TRISB = 0X07;
  1600  01CF  3007               	movlw	7
  1601  01D0  0086               	movwf	6	;volatile
  1602  01D1                     l1567:
  1603                           
  1604                           ;mainP2.c: 207:     TRISC = 0X82;
  1605  01D1  3082               	movlw	130
  1606  01D2  0087               	movwf	7	;volatile
  1607                           
  1608                           ;mainP2.c: 208:     TRISD = 0X00;
  1609  01D3  0188               	clrf	8	;volatile
  1610                           
  1611                           ;mainP2.c: 209:     TRISE = 0X00;
  1612  01D4  0189               	clrf	9	;volatile
  1613                           
  1614                           ;mainP2.c: 210:     PORTA = 0X00;
  1615  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  1616  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  1617  01D7  0185               	clrf	5	;volatile
  1618                           
  1619                           ;mainP2.c: 211:     PORTB = 0X00;
  1620  01D8  0186               	clrf	6	;volatile
  1621                           
  1622                           ;mainP2.c: 212:     PORTC = 0X00;
  1623  01D9  0187               	clrf	7	;volatile
  1624                           
  1625                           ;mainP2.c: 213:     PORTD = 0X00;
  1626  01DA  0188               	clrf	8	;volatile
  1627                           
  1628                           ;mainP2.c: 214:     PORTE = 0X00;
  1629  01DB  0189               	clrf	9	;volatile
  1630                           
  1631                           ;mainP2.c: 217:     posicion = 0;
  1632  01DC  01AB               	clrf	_posicion
  1633  01DD                     l1569:
  1634                           
  1635                           ;mainP2.c: 218:     UART.piederecho = 0;
  1636  01DD  1131               	bcf	_UART,2
  1637  01DE                     l1571:
  1638                           
  1639                           ;mainP2.c: 221:     OSCCONbits.IRCF = 0b111;
  1640  01DE  3070               	movlw	112
  1641  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  1642  01E0  1303               	bcf	3,6	;RP1=0, select bank1
  1643  01E1  048F               	iorwf	15,f	;volatile
  1644  01E2                     l1573:
  1645                           
  1646                           ;mainP2.c: 222:     OSCCONbits.SCS = 0b1;
  1647  01E2  140F               	bsf	15,0	;volatile
  1648  01E3                     l1575:
  1649                           
  1650                           ;mainP2.c: 225:     T1CONbits.T1CKPS = 0B10;
  1651  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1652  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1653  01E5  0810               	movf	16,w	;volatile
  1654  01E6  39CF               	andlw	-49
  1655  01E7  3820               	iorlw	32
  1656  01E8  0090               	movwf	16	;volatile
  1657  01E9                     l1577:
  1658                           
  1659                           ;mainP2.c: 226:     TMR1H = 0B00111100;
  1660  01E9  303C               	movlw	60
  1661  01EA  008F               	movwf	15	;volatile
  1662  01EB                     l1579:
  1663                           
  1664                           ;mainP2.c: 227:     TMR1L = 0B10101111;
  1665  01EB  30AF               	movlw	175
  1666  01EC  008E               	movwf	14	;volatile
  1667  01ED                     l1581:
  1668                           
  1669                           ;mainP2.c: 228:     T1CONbits.TMR1ON = 0;
  1670  01ED  1010               	bcf	16,0	;volatile
  1671  01EE                     l1583:
  1672                           
  1673                           ;mainP2.c: 231:     INTCONbits.TMR0IF = 0;
  1674  01EE  110B               	bcf	11,2	;volatile
  1675  01EF                     l1585:
  1676                           
  1677                           ;mainP2.c: 232:     INTCONbits.TMR0IE = 1;
  1678  01EF  168B               	bsf	11,5	;volatile
  1679  01F0                     l1587:
  1680                           
  1681                           ;mainP2.c: 233:     PIR1bits.TMR1IF = 0;
  1682  01F0  100C               	bcf	12,0	;volatile
  1683  01F1                     l1589:
  1684                           
  1685                           ;mainP2.c: 234:     PIE1bits.TMR1IE = 1;
  1686  01F1  1683               	bsf	3,5	;RP0=1, select bank1
  1687  01F2  1303               	bcf	3,6	;RP1=0, select bank1
  1688  01F3  140C               	bsf	12,0	;volatile
  1689  01F4                     l1591:
  1690                           
  1691                           ;mainP2.c: 235:     INTCONbits.RBIF = 0;
  1692  01F4  100B               	bcf	11,0	;volatile
  1693  01F5                     l1593:
  1694                           
  1695                           ;mainP2.c: 236:     INTCONbits.RBIE = 0;
  1696  01F5  118B               	bcf	11,3	;volatile
  1697  01F6                     l1595:
  1698                           
  1699                           ;mainP2.c: 237:     INTCONbits.PEIE = 1;
  1700  01F6  170B               	bsf	11,6	;volatile
  1701  01F7                     l1597:
  1702                           
  1703                           ;mainP2.c: 238:     PIE1bits.RCIE = 1;
  1704  01F7  168C               	bsf	12,5	;volatile
  1705  01F8                     l1599:
  1706                           
  1707                           ;mainP2.c: 239:     INTCONbits.GIE = 1;
  1708  01F8  178B               	bsf	11,7	;volatile
  1709  01F9                     l1601:
  1710                           
  1711                           ;mainP2.c: 242:     IOCBbits.IOCB0 = 1;
  1712  01F9  1416               	bsf	22,0	;volatile
  1713  01FA                     l1603:
  1714                           
  1715                           ;mainP2.c: 243:     IOCBbits.IOCB1 = 1;
  1716  01FA  1496               	bsf	22,1	;volatile
  1717  01FB                     l1605:
  1718                           
  1719                           ;mainP2.c: 244:     IOCBbits.IOCB2 = 1;
  1720  01FB  1516               	bsf	22,2	;volatile
  1721  01FC                     l1607:
  1722                           
  1723                           ;mainP2.c: 247:     ADCON0bits.ADCS = 0b10;
  1724  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1725  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1726  01FE  081F               	movf	31,w	;volatile
  1727  01FF  393F               	andlw	-193
  1728  0200  3880               	iorlw	128
  1729  0201  009F               	movwf	31	;volatile
  1730  0202                     l1609:
  1731                           
  1732                           ;mainP2.c: 248:     ADCON0bits.CHS = 0b0000;
  1733  0202  30C3               	movlw	-61
  1734  0203  059F               	andwf	31,f	;volatile
  1735  0204                     l1611:
  1736                           
  1737                           ;mainP2.c: 249:     ADCON0bits.GO = 0b0;
  1738  0204  109F               	bcf	31,1	;volatile
  1739  0205                     l1613:
  1740                           
  1741                           ;mainP2.c: 250:     ADCON0bits.ADON = 0b1;
  1742  0205  141F               	bsf	31,0	;volatile
  1743  0206                     l1615:
  1744                           
  1745                           ;mainP2.c: 251:     ADCON1bits.ADFM = 0b0;
  1746  0206  1683               	bsf	3,5	;RP0=1, select bank1
  1747  0207  1303               	bcf	3,6	;RP1=0, select bank1
  1748  0208  139F               	bcf	31,7	;volatile
  1749  0209                     l1617:
  1750                           
  1751                           ;mainP2.c: 252:     ADCON1bits.VCFG1 = 0b0;
  1752  0209  129F               	bcf	31,5	;volatile
  1753  020A                     l1619:
  1754                           
  1755                           ;mainP2.c: 253:     ADCON1bits.VCFG0 = 0b0;
  1756  020A  121F               	bcf	31,4	;volatile
  1757  020B                     l1621:
  1758                           
  1759                           ;mainP2.c: 256:     PR2 = 249;
  1760  020B  30F9               	movlw	249
  1761  020C  0092               	movwf	18	;volatile
  1762  020D                     l1623:
  1763                           
  1764                           ;mainP2.c: 257:     CCP2CONbits.CCP2M = 0b1111;
  1765  020D  300F               	movlw	15
  1766  020E  1283               	bcf	3,5	;RP0=0, select bank0
  1767  020F  1303               	bcf	3,6	;RP1=0, select bank0
  1768  0210  049D               	iorwf	29,f	;volatile
  1769  0211                     l1625:
  1770                           
  1771                           ;mainP2.c: 258:     CCPR2L = 0x0F;
  1772  0211  300F               	movlw	15
  1773  0212  009B               	movwf	27	;volatile
  1774  0213                     l1627:
  1775                           
  1776                           ;mainP2.c: 259:     PIR1bits.TMR2IF = 0;
  1777  0213  108C               	bcf	12,1	;volatile
  1778  0214                     l1629:
  1779                           
  1780                           ;mainP2.c: 260:     T2CONbits.T2CKPS = 0b11;
  1781  0214  3003               	movlw	3
  1782  0215  0492               	iorwf	18,f	;volatile
  1783  0216                     l1631:
  1784                           
  1785                           ;mainP2.c: 261:     T2CONbits.TMR2ON = 1;
  1786  0216  1512               	bsf	18,2	;volatile
  1787  0217                     l157:	
  1788                           ;mainP2.c: 263:     while(!PIR1bits.TMR2IF);
  1789                           
  1790  0217  1C8C               	btfss	12,1	;volatile
  1791  0218  2A1A               	goto	u541
  1792  0219  2A1B               	goto	u540
  1793  021A                     u541:
  1794  021A  2A17               	goto	l157
  1795  021B                     u540:
  1796  021B                     l1633:
  1797                           
  1798                           ;mainP2.c: 264:     TRISC = 0X80;
  1799  021B  3080               	movlw	128
  1800  021C  1683               	bsf	3,5	;RP0=1, select bank1
  1801  021D  1303               	bcf	3,6	;RP1=0, select bank1
  1802  021E  0087               	movwf	7	;volatile
  1803                           
  1804                           ;mainP2.c: 267:     SPBRG = 12;
  1805  021F  300C               	movlw	12
  1806  0220  0099               	movwf	25	;volatile
  1807  0221                     l1635:
  1808                           
  1809                           ;mainP2.c: 268:     TXSTAbits.BRGH = 0;
  1810  0221  1118               	bcf	24,2	;volatile
  1811  0222                     l1637:
  1812                           
  1813                           ;mainP2.c: 269:     TXSTAbits.TXEN = 1;
  1814  0222  1698               	bsf	24,5	;volatile
  1815  0223                     l1639:
  1816                           
  1817                           ;mainP2.c: 270:     RCSTAbits.CREN = 1;
  1818  0223  1283               	bcf	3,5	;RP0=0, select bank0
  1819  0224  1303               	bcf	3,6	;RP1=0, select bank0
  1820  0225  1618               	bsf	24,4	;volatile
  1821  0226                     l1641:
  1822                           
  1823                           ;mainP2.c: 271:     TXSTAbits.SYNC = 0;
  1824  0226  1683               	bsf	3,5	;RP0=1, select bank1
  1825  0227  1303               	bcf	3,6	;RP1=0, select bank1
  1826  0228  1218               	bcf	24,4	;volatile
  1827  0229                     l1643:
  1828                           
  1829                           ;mainP2.c: 272:     RCSTAbits.SPEN = 1;
  1830  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1831  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1832  022B  1798               	bsf	24,7	;volatile
  1833  022C                     l1645:
  1834                           
  1835                           ;mainP2.c: 275:     OSCCONbits.SCS = 1;
  1836  022C  1683               	bsf	3,5	;RP0=1, select bank1
  1837  022D  1303               	bcf	3,6	;RP1=0, select bank1
  1838  022E  140F               	bsf	15,0	;volatile
  1839  022F                     l1647:
  1840                           
  1841                           ;mainP2.c: 276:     OPTION_REGbits.T0CS = 0;
  1842  022F  1281               	bcf	1,5	;volatile
  1843  0230                     l1649:
  1844                           
  1845                           ;mainP2.c: 277:     OPTION_REGbits.PSA = 0;
  1846  0230  1181               	bcf	1,3	;volatile
  1847  0231                     l1651:
  1848                           
  1849                           ;mainP2.c: 278:     OPTION_REGbits.PS2 = 0;
  1850  0231  1101               	bcf	1,2	;volatile
  1851  0232                     l1653:
  1852                           
  1853                           ;mainP2.c: 279:     OPTION_REGbits.PS1 = 1;
  1854  0232  1481               	bsf	1,1	;volatile
  1855  0233                     l1655:
  1856                           
  1857                           ;mainP2.c: 280:     OPTION_REGbits.PS0 = 1;
  1858  0233  1401               	bsf	1,0	;volatile
  1859  0234                     l1657:
  1860                           
  1861                           ;mainP2.c: 281:     INTCONbits.T0IF = 0;
  1862  0234  110B               	bcf	11,2	;volatile
  1863                           
  1864                           ;mainP2.c: 282:     TMR0 = 131;
  1865  0235  3083               	movlw	131
  1866  0236  1283               	bcf	3,5	;RP0=0, select bank0
  1867  0237  1303               	bcf	3,6	;RP1=0, select bank0
  1868  0238  0081               	movwf	1	;volatile
  1869  0239                     l1659:
  1870                           
  1871                           ;mainP2.c: 283:     SERVOS.bit1 = 0;
  1872  0239  12B2               	bcf	_SERVOS,5
  1873  023A                     l1661:
  1874                           
  1875                           ;mainP2.c: 284:     SERVOS.modo = 0;
  1876  023A  1332               	bcf	_SERVOS,6
  1877  023B                     l160:
  1878  023B  0008               	return
  1879  023C                     __end_of_configuraciones:
  1880                           
  1881                           	psect	text9
  1882  0021                     __ptext9:	
  1883 ;; *************** function _AnalogReadServo *****************
  1884 ;; Defined at:
  1885 ;;		line 321 in file "mainP2.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;		None
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1899 ;;      Params:         0       0       0       0       0
  1900 ;;      Locals:         0       0       0       0       0
  1901 ;;      Temps:          0       2       0       0       0
  1902 ;;      Totals:         0       2       0       0       0
  1903 ;;Total ram usage:        2 bytes
  1904 ;; Hardware stack levels used:    1
  1905 ;; Hardware stack levels required when called:    2
  1906 ;; This function calls:
  1907 ;;		Nothing
  1908 ;; This function is called by:
  1909 ;;		_main
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           
  1914                           ;psect for function _AnalogReadServo
  1915  0021                     _AnalogReadServo:
  1916  0021                     l2113:	
  1917                           ;incstack = 0
  1918                           ; Regs used in _AnalogReadServo: [wreg-fsr0h+status,2+status,0]
  1919                           
  1920                           
  1921                           ;mainP2.c: 323:     if(!ADCON0bits.GO){
  1922  0021  1283               	bcf	3,5	;RP0=0, select bank0
  1923  0022  1303               	bcf	3,6	;RP1=0, select bank0
  1924  0023  189F               	btfsc	31,1	;volatile
  1925  0024  2826               	goto	u1031
  1926  0025  2827               	goto	u1030
  1927  0026                     u1031:
  1928  0026  292D               	goto	l208
  1929  0027                     u1030:
  1930  0027  290A               	goto	l2167
  1931  0028                     l179:	
  1932                           ;mainP2.c: 325:             case 0:
  1933                           
  1934                           
  1935                           ;mainP2.c: 326:                  if(!EECON1bits.WR && ADCON0bits.CHS == 1)POT2 = ADRESH;
  1936  0028  1683               	bsf	3,5	;RP0=1, select bank3
  1937  0029  1703               	bsf	3,6	;RP1=1, select bank3
  1938  002A  188C               	btfsc	12,1	;volsfr
  1939  002B  282D               	goto	u1041
  1940  002C  282E               	goto	u1040
  1941  002D                     u1041:
  1942  002D  292D               	goto	l182
  1943  002E                     u1040:
  1944  002E                     l2117:
  1945  002E  1283               	bcf	3,5	;RP0=0, select bank0
  1946  002F  1303               	bcf	3,6	;RP1=0, select bank0
  1947  0030  0C1F               	rrf	31,w	;volatile
  1948  0031  00A0               	movwf	??_AnalogReadServo
  1949  0032  0C20               	rrf	??_AnalogReadServo,w
  1950  0033  390F               	andlw	15
  1951  0034  3A01               	xorlw	1
  1952  0035  1D03               	skipz
  1953  0036  2838               	goto	u1051
  1954  0037  2839               	goto	u1050
  1955  0038                     u1051:
  1956  0038  292D               	goto	l182
  1957  0039                     u1050:
  1958  0039                     l2119:
  1959  0039  081E               	movf	30,w	;volatile
  1960  003A  00A0               	movwf	??_AnalogReadServo
  1961  003B  0820               	movf	??_AnalogReadServo,w
  1962  003C  00AF               	movwf	_POT2
  1963  003D  292D               	goto	l208
  1964  003E                     l183:	
  1965                           ;mainP2.c: 330:             case 1:
  1966                           
  1967                           
  1968                           ;mainP2.c: 331:                 if(!EECON1bits.WR)ADCON0bits.CHS = 2;
  1969  003E  1683               	bsf	3,5	;RP0=1, select bank3
  1970  003F  1703               	bsf	3,6	;RP1=1, select bank3
  1971  0040  188C               	btfsc	12,1	;volsfr
  1972  0041  2843               	goto	u1061
  1973  0042  2844               	goto	u1060
  1974  0043                     u1061:
  1975  0043  284A               	goto	l2123
  1976  0044                     u1060:
  1977  0044                     l2121:
  1978  0044  1283               	bcf	3,5	;RP0=0, select bank0
  1979  0045  1303               	bcf	3,6	;RP1=0, select bank0
  1980  0046  081F               	movf	31,w	;volatile
  1981  0047  39C3               	andlw	-61
  1982  0048  3808               	iorlw	8
  1983  0049  009F               	movwf	31	;volatile
  1984  004A                     l2123:
  1985                           
  1986                           ;mainP2.c: 332:                 if(POT2>=160) POT2 = 160;
  1987  004A  30A0               	movlw	160
  1988  004B  1283               	bcf	3,5	;RP0=0, select bank0
  1989  004C  1303               	bcf	3,6	;RP1=0, select bank0
  1990  004D  022F               	subwf	_POT2,w
  1991  004E  1C03               	skipc
  1992  004F  2851               	goto	u1071
  1993  0050  2852               	goto	u1070
  1994  0051                     u1071:
  1995  0051  2856               	goto	l185
  1996  0052                     u1070:
  1997  0052                     l2125:
  1998  0052  30A0               	movlw	160
  1999  0053  00A0               	movwf	??_AnalogReadServo
  2000  0054  0820               	movf	??_AnalogReadServo,w
  2001  0055  00AF               	movwf	_POT2
  2002  0056                     l185:
  2003                           
  2004                           ;mainP2.c: 333:                 if(POT2<=10) POT2 = 10;
  2005  0056  300B               	movlw	11
  2006  0057  022F               	subwf	_POT2,w
  2007  0058  1803               	skipnc
  2008  0059  285B               	goto	u1081
  2009  005A  285C               	goto	u1080
  2010  005B                     u1081:
  2011  005B  292D               	goto	l208
  2012  005C                     u1080:
  2013  005C                     l2127:
  2014  005C  300A               	movlw	10
  2015  005D  00A0               	movwf	??_AnalogReadServo
  2016  005E  0820               	movf	??_AnalogReadServo,w
  2017  005F  00AF               	movwf	_POT2
  2018  0060  292D               	goto	l208
  2019  0061                     l187:	
  2020                           ;mainP2.c: 336:             case 3:
  2021                           
  2022                           
  2023                           ;mainP2.c: 337:                 if(!EECON1bits.WR && ADCON0bits.CHS == 2)POT3 = ADRESH;
  2024  0061  1683               	bsf	3,5	;RP0=1, select bank3
  2025  0062  1703               	bsf	3,6	;RP1=1, select bank3
  2026  0063  188C               	btfsc	12,1	;volsfr
  2027  0064  2866               	goto	u1091
  2028  0065  2867               	goto	u1090
  2029  0066                     u1091:
  2030  0066  292D               	goto	l182
  2031  0067                     u1090:
  2032  0067                     l2129:
  2033  0067  1283               	bcf	3,5	;RP0=0, select bank0
  2034  0068  1303               	bcf	3,6	;RP1=0, select bank0
  2035  0069  0C1F               	rrf	31,w	;volatile
  2036  006A  00A0               	movwf	??_AnalogReadServo
  2037  006B  0C20               	rrf	??_AnalogReadServo,w
  2038  006C  390F               	andlw	15
  2039  006D  3A02               	xorlw	2
  2040  006E  1D03               	skipz
  2041  006F  2871               	goto	u1101
  2042  0070  2872               	goto	u1100
  2043  0071                     u1101:
  2044  0071  292D               	goto	l182
  2045  0072                     u1100:
  2046  0072                     l2131:
  2047  0072  081E               	movf	30,w	;volatile
  2048  0073  00A0               	movwf	??_AnalogReadServo
  2049  0074  0820               	movf	??_AnalogReadServo,w
  2050  0075  00AE               	movwf	_POT3
  2051  0076  292D               	goto	l208
  2052  0077                     l190:	
  2053                           ;mainP2.c: 341:             case 4:
  2054                           
  2055                           
  2056                           ;mainP2.c: 342:                 if(!EECON1bits.WR)ADCON0bits.CHS = 3;
  2057  0077  1683               	bsf	3,5	;RP0=1, select bank3
  2058  0078  1703               	bsf	3,6	;RP1=1, select bank3
  2059  0079  188C               	btfsc	12,1	;volsfr
  2060  007A  287C               	goto	u1111
  2061  007B  287D               	goto	u1110
  2062  007C                     u1111:
  2063  007C  2883               	goto	l2135
  2064  007D                     u1110:
  2065  007D                     l2133:
  2066  007D  1283               	bcf	3,5	;RP0=0, select bank0
  2067  007E  1303               	bcf	3,6	;RP1=0, select bank0
  2068  007F  081F               	movf	31,w	;volatile
  2069  0080  39C3               	andlw	-61
  2070  0081  380C               	iorlw	12
  2071  0082  009F               	movwf	31	;volatile
  2072  0083                     l2135:
  2073                           
  2074                           ;mainP2.c: 343:                 if(POT3>=160) POT3 = 160;
  2075  0083  30A0               	movlw	160
  2076  0084  1283               	bcf	3,5	;RP0=0, select bank0
  2077  0085  1303               	bcf	3,6	;RP1=0, select bank0
  2078  0086  022E               	subwf	_POT3,w
  2079  0087  1C03               	skipc
  2080  0088  288A               	goto	u1121
  2081  0089  288B               	goto	u1120
  2082  008A                     u1121:
  2083  008A  288F               	goto	l192
  2084  008B                     u1120:
  2085  008B                     l2137:
  2086  008B  30A0               	movlw	160
  2087  008C  00A0               	movwf	??_AnalogReadServo
  2088  008D  0820               	movf	??_AnalogReadServo,w
  2089  008E  00AE               	movwf	_POT3
  2090  008F                     l192:
  2091                           
  2092                           ;mainP2.c: 344:                 if(POT3<=10) POT3 = 10;
  2093  008F  300B               	movlw	11
  2094  0090  022E               	subwf	_POT3,w
  2095  0091  1803               	skipnc
  2096  0092  2894               	goto	u1131
  2097  0093  2895               	goto	u1130
  2098  0094                     u1131:
  2099  0094  292D               	goto	l208
  2100  0095                     u1130:
  2101  0095                     l2139:
  2102  0095  300A               	movlw	10
  2103  0096  00A0               	movwf	??_AnalogReadServo
  2104  0097  0820               	movf	??_AnalogReadServo,w
  2105  0098  00AE               	movwf	_POT3
  2106  0099  292D               	goto	l208
  2107  009A                     l194:	
  2108                           ;mainP2.c: 347:             case 6:
  2109                           
  2110                           
  2111                           ;mainP2.c: 348:                 if(!EECON1bits.WR && ADCON0bits.CHS == 3)POT4 = ADRESH;
  2112  009A  1683               	bsf	3,5	;RP0=1, select bank3
  2113  009B  1703               	bsf	3,6	;RP1=1, select bank3
  2114  009C  188C               	btfsc	12,1	;volsfr
  2115  009D  289F               	goto	u1141
  2116  009E  28A0               	goto	u1140
  2117  009F                     u1141:
  2118  009F  292D               	goto	l182
  2119  00A0                     u1140:
  2120  00A0                     l2141:
  2121  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  2122  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  2123  00A2  0C1F               	rrf	31,w	;volatile
  2124  00A3  00A0               	movwf	??_AnalogReadServo
  2125  00A4  0C20               	rrf	??_AnalogReadServo,w
  2126  00A5  390F               	andlw	15
  2127  00A6  3A03               	xorlw	3
  2128  00A7  1D03               	skipz
  2129  00A8  28AA               	goto	u1151
  2130  00A9  28AB               	goto	u1150
  2131  00AA                     u1151:
  2132  00AA  292D               	goto	l182
  2133  00AB                     u1150:
  2134  00AB                     l2143:
  2135  00AB  081E               	movf	30,w	;volatile
  2136  00AC  00A0               	movwf	??_AnalogReadServo
  2137  00AD  0820               	movf	??_AnalogReadServo,w
  2138  00AE  00AD               	movwf	_POT4
  2139  00AF  292D               	goto	l208
  2140  00B0                     l197:	
  2141                           ;mainP2.c: 352:             case 7:
  2142                           
  2143                           
  2144                           ;mainP2.c: 353:                 if(!EECON1bits.WR)ADCON0bits.CHS = 0;
  2145  00B0  1683               	bsf	3,5	;RP0=1, select bank3
  2146  00B1  1703               	bsf	3,6	;RP1=1, select bank3
  2147  00B2  188C               	btfsc	12,1	;volsfr
  2148  00B3  28B5               	goto	u1161
  2149  00B4  28B6               	goto	u1160
  2150  00B5                     u1161:
  2151  00B5  28BA               	goto	l2147
  2152  00B6                     u1160:
  2153  00B6                     l2145:
  2154  00B6  30C3               	movlw	-61
  2155  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  2156  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  2157  00B9  059F               	andwf	31,f	;volatile
  2158  00BA                     l2147:
  2159                           
  2160                           ;mainP2.c: 354:                 if(POT4>=160) POT4 = 160;
  2161  00BA  30A0               	movlw	160
  2162  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  2163  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  2164  00BD  022D               	subwf	_POT4,w
  2165  00BE  1C03               	skipc
  2166  00BF  28C1               	goto	u1171
  2167  00C0  28C2               	goto	u1170
  2168  00C1                     u1171:
  2169  00C1  28C6               	goto	l199
  2170  00C2                     u1170:
  2171  00C2                     l2149:
  2172  00C2  30A0               	movlw	160
  2173  00C3  00A0               	movwf	??_AnalogReadServo
  2174  00C4  0820               	movf	??_AnalogReadServo,w
  2175  00C5  00AD               	movwf	_POT4
  2176  00C6                     l199:
  2177                           
  2178                           ;mainP2.c: 355:                 if(POT4<=10) POT4 = 10;
  2179  00C6  300B               	movlw	11
  2180  00C7  022D               	subwf	_POT4,w
  2181  00C8  1803               	skipnc
  2182  00C9  28CB               	goto	u1181
  2183  00CA  28CC               	goto	u1180
  2184  00CB                     u1181:
  2185  00CB  292D               	goto	l208
  2186  00CC                     u1180:
  2187  00CC                     l2151:
  2188  00CC  300A               	movlw	10
  2189  00CD  00A0               	movwf	??_AnalogReadServo
  2190  00CE  0820               	movf	??_AnalogReadServo,w
  2191  00CF  00AD               	movwf	_POT4
  2192  00D0  292D               	goto	l208
  2193  00D1                     l201:	
  2194                           ;mainP2.c: 358:             case 9:
  2195                           
  2196                           
  2197                           ;mainP2.c: 359:                 if(!EECON1bits.WR && ADCON0bits.CHS == 0)POT1 = ADRESH;
  2198  00D1  1683               	bsf	3,5	;RP0=1, select bank3
  2199  00D2  1703               	bsf	3,6	;RP1=1, select bank3
  2200  00D3  188C               	btfsc	12,1	;volsfr
  2201  00D4  28D6               	goto	u1191
  2202  00D5  28D7               	goto	u1190
  2203  00D6                     u1191:
  2204  00D6  292D               	goto	l182
  2205  00D7                     u1190:
  2206  00D7                     l2153:
  2207  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  2208  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  2209  00D9  0C1F               	rrf	31,w	;volatile
  2210  00DA  00A0               	movwf	??_AnalogReadServo
  2211  00DB  0C20               	rrf	??_AnalogReadServo,w
  2212  00DC  390F               	andlw	15
  2213  00DD  3A00               	xorlw	0
  2214  00DE  1D03               	skipz
  2215  00DF  28E1               	goto	u1201
  2216  00E0  28E2               	goto	u1200
  2217  00E1                     u1201:
  2218  00E1  292D               	goto	l182
  2219  00E2                     u1200:
  2220  00E2                     l2155:
  2221  00E2  081E               	movf	30,w	;volatile
  2222  00E3  00A0               	movwf	??_AnalogReadServo
  2223  00E4  0820               	movf	??_AnalogReadServo,w
  2224  00E5  00B0               	movwf	_POT1
  2225  00E6  292D               	goto	l208
  2226  00E7                     l204:	
  2227                           ;mainP2.c: 363:             case 10:
  2228                           
  2229                           
  2230                           ;mainP2.c: 364:                 if(!EECON1bits.WR)ADCON0bits.CHS = 1;
  2231  00E7  1683               	bsf	3,5	;RP0=1, select bank3
  2232  00E8  1703               	bsf	3,6	;RP1=1, select bank3
  2233  00E9  188C               	btfsc	12,1	;volsfr
  2234  00EA  28EC               	goto	u1211
  2235  00EB  28ED               	goto	u1210
  2236  00EC                     u1211:
  2237  00EC  28F3               	goto	l2159
  2238  00ED                     u1210:
  2239  00ED                     l2157:
  2240  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  2241  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  2242  00EF  081F               	movf	31,w	;volatile
  2243  00F0  39C3               	andlw	-61
  2244  00F1  3804               	iorlw	4
  2245  00F2  009F               	movwf	31	;volatile
  2246  00F3                     l2159:
  2247                           
  2248                           ;mainP2.c: 365:                 if(POT1>=160) POT1 = 160;
  2249  00F3  30A0               	movlw	160
  2250  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  2251  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  2252  00F6  0230               	subwf	_POT1,w
  2253  00F7  1C03               	skipc
  2254  00F8  28FA               	goto	u1221
  2255  00F9  28FB               	goto	u1220
  2256  00FA                     u1221:
  2257  00FA  28FF               	goto	l206
  2258  00FB                     u1220:
  2259  00FB                     l2161:
  2260  00FB  30A0               	movlw	160
  2261  00FC  00A0               	movwf	??_AnalogReadServo
  2262  00FD  0820               	movf	??_AnalogReadServo,w
  2263  00FE  00B0               	movwf	_POT1
  2264  00FF                     l206:
  2265                           
  2266                           ;mainP2.c: 366:                 if(POT1<=10) POT1 = 10;
  2267  00FF  300B               	movlw	11
  2268  0100  0230               	subwf	_POT1,w
  2269  0101  1803               	skipnc
  2270  0102  2904               	goto	u1231
  2271  0103  2905               	goto	u1230
  2272  0104                     u1231:
  2273  0104  292D               	goto	l208
  2274  0105                     u1230:
  2275  0105                     l2163:
  2276  0105  300A               	movlw	10
  2277  0106  00A0               	movwf	??_AnalogReadServo
  2278  0107  0820               	movf	??_AnalogReadServo,w
  2279  0108  00B0               	movwf	_POT1
  2280  0109  292D               	goto	l208
  2281  010A                     l2167:
  2282  010A  0832               	movf	_SERVOS,w
  2283  010B  391F               	andlw	31
  2284  010C  00A0               	movwf	??_AnalogReadServo
  2285  010D  01A1               	clrf	??_AnalogReadServo+1
  2286                           
  2287                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2288                           ; Switch size 1, requested type "simple"
  2289                           ; Number of cases is 1, Range of values is 0 to 0
  2290                           ; switch strategies available:
  2291                           ; Name         Instructions Cycles
  2292                           ; simple_byte            4     3 (average)
  2293                           ; direct_byte           11     8 (fixed)
  2294                           ; jumptable            260     6 (fixed)
  2295                           ;	Chosen strategy is simple_byte
  2296  010E  0821               	movf	??_AnalogReadServo+1,w
  2297  010F  3A00               	xorlw	0	; case 0
  2298  0110  1903               	skipnz
  2299  0111  2913               	goto	l2395
  2300  0112  292D               	goto	l208
  2301  0113                     l2395:
  2302                           
  2303                           ; Switch size 1, requested type "simple"
  2304                           ; Number of cases is 8, Range of values is 0 to 10
  2305                           ; switch strategies available:
  2306                           ; Name         Instructions Cycles
  2307                           ; simple_byte           25    13 (average)
  2308                           ; direct_byte           41     8 (fixed)
  2309                           ; jumptable            260     6 (fixed)
  2310                           ;	Chosen strategy is simple_byte
  2311  0113  0820               	movf	??_AnalogReadServo,w
  2312  0114  3A00               	xorlw	0	; case 0
  2313  0115  1903               	skipnz
  2314  0116  2828               	goto	l179
  2315  0117  3A01               	xorlw	1	; case 1
  2316  0118  1903               	skipnz
  2317  0119  283E               	goto	l183
  2318  011A  3A02               	xorlw	2	; case 3
  2319  011B  1903               	skipnz
  2320  011C  2861               	goto	l187
  2321  011D  3A07               	xorlw	7	; case 4
  2322  011E  1903               	skipnz
  2323  011F  2877               	goto	l190
  2324  0120  3A02               	xorlw	2	; case 6
  2325  0121  1903               	skipnz
  2326  0122  289A               	goto	l194
  2327  0123  3A01               	xorlw	1	; case 7
  2328  0124  1903               	skipnz
  2329  0125  28B0               	goto	l197
  2330  0126  3A0E               	xorlw	14	; case 9
  2331  0127  1903               	skipnz
  2332  0128  28D1               	goto	l201
  2333  0129  3A03               	xorlw	3	; case 10
  2334  012A  1903               	skipnz
  2335  012B  28E7               	goto	l204
  2336  012C  292D               	goto	l208
  2337  012D                     l182:
  2338  012D                     l208:
  2339  012D  0008               	return
  2340  012E                     __end_of_AnalogReadServo:
  2341                           
  2342                           	psect	text10
  2343  023C                     __ptext10:	
  2344 ;; *************** function _rutInter *****************
  2345 ;; Defined at:
  2346 ;;		line 89 in file "mainP2.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;		None
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;		None
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2360 ;;      Params:         0       0       0       0       0
  2361 ;;      Locals:         0       0       0       0       0
  2362 ;;      Temps:          4       0       0       0       0
  2363 ;;      Totals:         4       0       0       0       0
  2364 ;;Total ram usage:        4 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; Hardware stack levels required when called:    1
  2367 ;; This function calls:
  2368 ;;		_servos
  2369 ;; This function is called by:
  2370 ;;		Interrupt level 1
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           
  2375                           ;psect for function _rutInter
  2376  023C                     _rutInter:
  2377  023C                     i1l1753:
  2378                           
  2379                           ;mainP2.c: 91:     if(INTCONbits.TMR0IF) {
  2380  023C  1D0B               	btfss	11,2	;volatile
  2381  023D  2A3F               	goto	u78_21
  2382  023E  2A40               	goto	u78_20
  2383  023F                     u78_21:
  2384  023F  2A58               	goto	i1l119
  2385  0240                     u78_20:
  2386  0240                     i1l1755:
  2387                           
  2388                           ;mainP2.c: 92:         SERVOS.bit0++;
  2389  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2390  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2391  0242  0832               	movf	_SERVOS,w
  2392  0243  391F               	andlw	31
  2393  0244  00F2               	movwf	??_rutInter
  2394  0245  0AF2               	incf	??_rutInter,f
  2395  0246  0832               	movf	_SERVOS,w
  2396  0247  0672               	xorwf	??_rutInter,w
  2397  0248  39E0               	andlw	-32
  2398  0249  0672               	xorwf	??_rutInter,w
  2399  024A  00B2               	movwf	_SERVOS
  2400  024B                     i1l1757:
  2401                           
  2402                           ;mainP2.c: 93:         INTCONbits.TMR0IF = 0;
  2403  024B  110B               	bcf	11,2	;volatile
  2404  024C                     i1l1759:
  2405                           
  2406                           ;mainP2.c: 94:         servos();
  2407  024C  120A  118A  235C  120A  118A  	fcall	_servos
  2408  0251                     i1l1761:
  2409                           
  2410                           ;mainP2.c: 95:         if(SERVOS.modo) ADCON0bits.GO = 1;
  2411  0251  1283               	bcf	3,5	;RP0=0, select bank0
  2412  0252  1303               	bcf	3,6	;RP1=0, select bank0
  2413  0253  1F32               	btfss	_SERVOS,6
  2414  0254  2A56               	goto	u79_21
  2415  0255  2A57               	goto	u79_20
  2416  0256                     u79_21:
  2417  0256  2A58               	goto	i1l119
  2418  0257                     u79_20:
  2419  0257                     i1l1763:
  2420  0257  149F               	bsf	31,1	;volatile
  2421  0258                     i1l119:	
  2422                           ;mainP2.c: 96:     }
  2423                           
  2424                           
  2425                           ;mainP2.c: 98:     if(PIR1bits.TMR1IF){
  2426  0258  1283               	bcf	3,5	;RP0=0, select bank0
  2427  0259  1303               	bcf	3,6	;RP1=0, select bank0
  2428  025A  1C0C               	btfss	12,0	;volatile
  2429  025B  2A5D               	goto	u80_21
  2430  025C  2A5E               	goto	u80_20
  2431  025D                     u80_21:
  2432  025D  2A68               	goto	i1l1775
  2433  025E                     u80_20:
  2434  025E                     i1l1765:
  2435                           
  2436                           ;mainP2.c: 99:         SERVOS.guardar = 1;
  2437  025E  17B2               	bsf	_SERVOS,7
  2438  025F                     i1l1767:
  2439                           
  2440                           ;mainP2.c: 100:         posicion ++;
  2441  025F  3001               	movlw	1
  2442  0260  00F2               	movwf	??_rutInter
  2443  0261  0872               	movf	??_rutInter,w
  2444  0262  07AB               	addwf	_posicion,f
  2445  0263                     i1l1769:
  2446                           
  2447                           ;mainP2.c: 101:         PIR1bits.TMR1IF = 0;
  2448  0263  100C               	bcf	12,0	;volatile
  2449  0264                     i1l1771:
  2450                           
  2451                           ;mainP2.c: 102:         TMR1H = 0B00111100;
  2452  0264  303C               	movlw	60
  2453  0265  008F               	movwf	15	;volatile
  2454  0266                     i1l1773:
  2455                           
  2456                           ;mainP2.c: 103:         TMR1L = 0B10101111;
  2457  0266  30AF               	movlw	175
  2458  0267  008E               	movwf	14	;volatile
  2459  0268                     i1l1775:
  2460                           
  2461                           ;mainP2.c: 106:     if(INTCONbits.RBIF && PORTBbits.RB0){
  2462  0268  1C0B               	btfss	11,0	;volatile
  2463  0269  2A6B               	goto	u81_21
  2464  026A  2A6C               	goto	u81_20
  2465  026B                     u81_21:
  2466  026B  2A82               	goto	i1l1785
  2467  026C                     u81_20:
  2468  026C                     i1l1777:
  2469  026C  1C06               	btfss	6,0	;volatile
  2470  026D  2A6F               	goto	u82_21
  2471  026E  2A70               	goto	u82_20
  2472  026F                     u82_21:
  2473  026F  2A82               	goto	i1l1785
  2474  0270                     u82_20:
  2475  0270                     i1l1779:
  2476                           
  2477                           ;mainP2.c: 107:         if(!T1CONbits.TMR1ON)SERVOS.modo = ~SERVOS.modo;
  2478  0270  1810               	btfsc	16,0	;volatile
  2479  0271  2A73               	goto	u83_21
  2480  0272  2A74               	goto	u83_20
  2481  0273                     u83_21:
  2482  0273  2A81               	goto	i1l1783
  2483  0274                     u83_20:
  2484  0274                     i1l1781:
  2485  0274  1003               	clrc
  2486  0275  1F32               	btfss	_SERVOS,6
  2487  0276  1403               	setc
  2488  0277  1803               	btfsc	3,0
  2489  0278  2A7A               	goto	u84_21
  2490  0279  2A7E               	goto	u84_20
  2491  027A                     u84_21:
  2492  027A  1283               	bcf	3,5	;RP0=0, select bank0
  2493  027B  1303               	bcf	3,6	;RP1=0, select bank0
  2494  027C  1732               	bsf	_SERVOS,6
  2495  027D  2A81               	goto	u85_24
  2496  027E                     u84_20:
  2497  027E  1283               	bcf	3,5	;RP0=0, select bank0
  2498  027F  1303               	bcf	3,6	;RP1=0, select bank0
  2499  0280  1332               	bcf	_SERVOS,6
  2500  0281                     u85_24:
  2501  0281                     i1l1783:
  2502                           
  2503                           ;mainP2.c: 109:         INTCONbits.RBIF = 0;
  2504  0281  100B               	bcf	11,0	;volatile
  2505  0282                     i1l1785:
  2506                           
  2507                           ;mainP2.c: 112:     if(INTCONbits.RBIF && PORTBbits.RB1){
  2508  0282  1C0B               	btfss	11,0	;volatile
  2509  0283  2A85               	goto	u86_21
  2510  0284  2A86               	goto	u86_20
  2511  0285                     u86_21:
  2512  0285  2A96               	goto	i1l124
  2513  0286                     u86_20:
  2514  0286                     i1l1787:
  2515  0286  1C86               	btfss	6,1	;volatile
  2516  0287  2A89               	goto	u87_21
  2517  0288  2A8A               	goto	u87_20
  2518  0289                     u87_21:
  2519  0289  2A96               	goto	i1l124
  2520  028A                     u87_20:
  2521  028A                     i1l1789:
  2522                           
  2523                           ;mainP2.c: 113:         if(SERVOS.modo){T1CONbits.TMR1ON = 1;
  2524  028A  1F32               	btfss	_SERVOS,6
  2525  028B  2A8D               	goto	u88_21
  2526  028C  2A8E               	goto	u88_20
  2527  028D                     u88_21:
  2528  028D  2A90               	goto	i1l125
  2529  028E                     u88_20:
  2530  028E                     i1l1791:
  2531  028E  1410               	bsf	16,0	;volatile
  2532                           
  2533                           ;mainP2.c: 114:         PORTEbits.RE0 = 1;}
  2534  028F  1409               	bsf	9,0	;volatile
  2535  0290                     i1l125:
  2536                           
  2537                           ;mainP2.c: 115:         if(SERVOS.modo)SERVOS.guardar = 1;
  2538  0290  1F32               	btfss	_SERVOS,6
  2539  0291  2A93               	goto	u89_21
  2540  0292  2A94               	goto	u89_20
  2541  0293                     u89_21:
  2542  0293  2A95               	goto	i1l126
  2543  0294                     u89_20:
  2544  0294                     i1l1793:
  2545  0294  17B2               	bsf	_SERVOS,7
  2546  0295                     i1l126:
  2547                           
  2548                           ;mainP2.c: 116:         INTCONbits.RBIF = 0;
  2549  0295  100B               	bcf	11,0	;volatile
  2550  0296                     i1l124:	
  2551                           ;mainP2.c: 117:     }
  2552                           
  2553                           
  2554                           ;mainP2.c: 119:     INTCONbits.RBIF = 0;
  2555  0296  100B               	bcf	11,0	;volatile
  2556                           
  2557                           ;mainP2.c: 121:     if(PIR1bits.RCIF){
  2558  0297  1E8C               	btfss	12,5	;volatile
  2559  0298  2A9A               	goto	u90_21
  2560  0299  2A9B               	goto	u90_20
  2561  029A                     u90_21:
  2562  029A  2AA1               	goto	i1l128
  2563  029B                     u90_20:
  2564  029B                     i1l1795:
  2565                           
  2566                           ;mainP2.c: 122:         EXTREC = RCREG;
  2567  029B  081A               	movf	26,w	;volatile
  2568  029C  00F2               	movwf	??_rutInter
  2569  029D  0872               	movf	??_rutInter,w
  2570  029E  00AC               	movwf	_EXTREC
  2571  029F                     i1l1797:
  2572                           
  2573                           ;mainP2.c: 123:         UART.datorecep = 1;
  2574  029F  1431               	bsf	_UART,0
  2575  02A0                     i1l1799:
  2576                           
  2577                           ;mainP2.c: 124:         PIR1bits.RCIF = 0;
  2578  02A0  128C               	bcf	12,5	;volatile
  2579  02A1                     i1l128:
  2580  02A1  0875               	movf	??_rutInter+3,w
  2581  02A2  008A               	movwf	10
  2582  02A3  0874               	movf	??_rutInter+2,w
  2583  02A4  0084               	movwf	4
  2584  02A5  0E73               	swapf	??_rutInter+1,w
  2585  02A6  0083               	movwf	3
  2586  02A7  0EFE               	swapf	btemp,f
  2587  02A8  0E7E               	swapf	btemp,w
  2588  02A9  0009               	retfie
  2589  02AA                     __end_of_rutInter:
  2590                           
  2591                           	psect	intentry
  2592  0004                     __pintentry:	
  2593                           ;incstack = 0
  2594                           ; Regs used in _rutInter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2595                           
  2596  0004                     interrupt_function:
  2597  007E                     saved_w	set	btemp
  2598  0004  00FE               	movwf	btemp
  2599  0005  0E03               	swapf	3,w
  2600  0006  00F3               	movwf	??_rutInter+1
  2601  0007  0804               	movf	4,w
  2602  0008  00F4               	movwf	??_rutInter+2
  2603  0009  080A               	movf	10,w
  2604  000A  00F5               	movwf	??_rutInter+3
  2605  000B  120A  118A  2A3C   	ljmp	_rutInter
  2606                           
  2607                           	psect	text11
  2608  035C                     __ptext11:	
  2609 ;; *************** function _servos *****************
  2610 ;; Defined at:
  2611 ;;		line 287 in file "mainP2.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;		None
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;		None
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  1    wreg      void 
  2618 ;; Registers used:
  2619 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2625 ;;      Params:         0       0       0       0       0
  2626 ;;      Locals:         0       0       0       0       0
  2627 ;;      Temps:          2       0       0       0       0
  2628 ;;      Totals:         2       0       0       0       0
  2629 ;;Total ram usage:        2 bytes
  2630 ;; Hardware stack levels used:    1
  2631 ;; This function calls:
  2632 ;;		Nothing
  2633 ;; This function is called by:
  2634 ;;		_rutInter
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           
  2639                           ;psect for function _servos
  2640  035C                     _servos:
  2641  035C                     i1l1515:	
  2642                           ;incstack = 0
  2643                           ; Regs used in _servos: [wreg-fsr0h+status,2+status,0]
  2644                           
  2645                           
  2646                           ;mainP2.c: 289:     if(SERVOS.bit0 == 15) SERVOS.bit0 = 0;
  2647  035C  1283               	bcf	3,5	;RP0=0, select bank0
  2648  035D  1303               	bcf	3,6	;RP1=0, select bank0
  2649  035E  0832               	movf	_SERVOS,w
  2650  035F  391F               	andlw	31
  2651  0360  3A0F               	xorlw	15
  2652  0361  1D03               	skipz
  2653  0362  2B64               	goto	u53_21
  2654  0363  2B65               	goto	u53_20
  2655  0364                     u53_21:
  2656  0364  2B88               	goto	i1l1553
  2657  0365                     u53_20:
  2658  0365                     i1l1517:
  2659  0365  30E0               	movlw	-32
  2660  0366  05B2               	andwf	_SERVOS,f
  2661  0367  2B88               	goto	i1l1553
  2662  0368                     i1l1519:
  2663                           
  2664                           ;mainP2.c: 293:             TMR0 = POT1; PORTDbits.RD0 = 1;
  2665  0368  0830               	movf	_POT1,w
  2666  0369  0081               	movwf	1	;volatile
  2667  036A                     i1l1521:
  2668  036A  1408               	bsf	8,0	;volatile
  2669                           
  2670                           ;mainP2.c: 294:             break;
  2671  036B  2BAB               	goto	i1l174
  2672  036C                     i1l1523:
  2673                           
  2674                           ;mainP2.c: 296:             TMR0 = 255-POT1; PORTDbits.RD0 = 0;
  2675  036C  0930               	comf	_POT1,w
  2676  036D  0081               	movwf	1	;volatile
  2677  036E                     i1l1525:
  2678  036E  1008               	bcf	8,0	;volatile
  2679                           
  2680                           ;mainP2.c: 297:             break;
  2681  036F  2BAB               	goto	i1l174
  2682  0370                     i1l1527:
  2683                           
  2684                           ;mainP2.c: 299:             TMR0 = POT2; PORTDbits.RD1 = 1;
  2685  0370  082F               	movf	_POT2,w
  2686  0371  0081               	movwf	1	;volatile
  2687  0372                     i1l1529:
  2688  0372  1488               	bsf	8,1	;volatile
  2689                           
  2690                           ;mainP2.c: 300:             break;
  2691  0373  2BAB               	goto	i1l174
  2692  0374                     i1l1531:
  2693                           
  2694                           ;mainP2.c: 302:              TMR0 = 255-POT2; PORTDbits.RD1 = 0;
  2695  0374  092F               	comf	_POT2,w
  2696  0375  0081               	movwf	1	;volatile
  2697  0376                     i1l1533:
  2698  0376  1088               	bcf	8,1	;volatile
  2699                           
  2700                           ;mainP2.c: 303:             break;
  2701  0377  2BAB               	goto	i1l174
  2702  0378                     i1l1535:
  2703                           
  2704                           ;mainP2.c: 305:             TMR0 = POT3; PORTDbits.RD2 = 1;
  2705  0378  082E               	movf	_POT3,w
  2706  0379  0081               	movwf	1	;volatile
  2707  037A                     i1l1537:
  2708  037A  1508               	bsf	8,2	;volatile
  2709                           
  2710                           ;mainP2.c: 306:             break;
  2711  037B  2BAB               	goto	i1l174
  2712  037C                     i1l1539:
  2713                           
  2714                           ;mainP2.c: 308:             TMR0 = 255-POT3; PORTDbits.RD2 = 0;
  2715  037C  092E               	comf	_POT3,w
  2716  037D  0081               	movwf	1	;volatile
  2717  037E                     i1l1541:
  2718  037E  1108               	bcf	8,2	;volatile
  2719                           
  2720                           ;mainP2.c: 309:             break;
  2721  037F  2BAB               	goto	i1l174
  2722  0380                     i1l1543:
  2723                           
  2724                           ;mainP2.c: 311:             TMR0 = POT4; PORTDbits.RD3 = 1;
  2725  0380  082D               	movf	_POT4,w
  2726  0381  0081               	movwf	1	;volatile
  2727  0382                     i1l1545:
  2728  0382  1588               	bsf	8,3	;volatile
  2729                           
  2730                           ;mainP2.c: 312:             break;
  2731  0383  2BAB               	goto	i1l174
  2732  0384                     i1l1547:
  2733                           
  2734                           ;mainP2.c: 314:             TMR0 = 255-POT4; PORTDbits.RD3 = 0;
  2735  0384  092D               	comf	_POT4,w
  2736  0385  0081               	movwf	1	;volatile
  2737  0386                     i1l1549:
  2738  0386  1188               	bcf	8,3	;volatile
  2739                           
  2740                           ;mainP2.c: 315:             break;
  2741  0387  2BAB               	goto	i1l174
  2742  0388                     i1l1553:
  2743  0388  0832               	movf	_SERVOS,w
  2744  0389  391F               	andlw	31
  2745  038A  00F0               	movwf	??_servos
  2746  038B  01F1               	clrf	??_servos+1
  2747                           
  2748                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2749                           ; Switch size 1, requested type "simple"
  2750                           ; Number of cases is 1, Range of values is 0 to 0
  2751                           ; switch strategies available:
  2752                           ; Name         Instructions Cycles
  2753                           ; simple_byte            4     3 (average)
  2754                           ; direct_byte           11     8 (fixed)
  2755                           ; jumptable            260     6 (fixed)
  2756                           ;	Chosen strategy is simple_byte
  2757  038C  0871               	movf	??_servos+1,w
  2758  038D  3A00               	xorlw	0	; case 0
  2759  038E  1903               	skipnz
  2760  038F  2B91               	goto	i1l2397
  2761  0390  2BAB               	goto	i1l174
  2762  0391                     i1l2397:
  2763                           
  2764                           ; Switch size 1, requested type "simple"
  2765                           ; Number of cases is 8, Range of values is 0 to 10
  2766                           ; switch strategies available:
  2767                           ; Name         Instructions Cycles
  2768                           ; simple_byte           25    13 (average)
  2769                           ; direct_byte           41     8 (fixed)
  2770                           ; jumptable            260     6 (fixed)
  2771                           ;	Chosen strategy is simple_byte
  2772  0391  0870               	movf	??_servos,w
  2773  0392  3A00               	xorlw	0	; case 0
  2774  0393  1903               	skipnz
  2775  0394  2B68               	goto	i1l1519
  2776  0395  3A01               	xorlw	1	; case 1
  2777  0396  1903               	skipnz
  2778  0397  2B6C               	goto	i1l1523
  2779  0398  3A02               	xorlw	2	; case 3
  2780  0399  1903               	skipnz
  2781  039A  2B70               	goto	i1l1527
  2782  039B  3A07               	xorlw	7	; case 4
  2783  039C  1903               	skipnz
  2784  039D  2B74               	goto	i1l1531
  2785  039E  3A02               	xorlw	2	; case 6
  2786  039F  1903               	skipnz
  2787  03A0  2B78               	goto	i1l1535
  2788  03A1  3A01               	xorlw	1	; case 7
  2789  03A2  1903               	skipnz
  2790  03A3  2B7C               	goto	i1l1539
  2791  03A4  3A0E               	xorlw	14	; case 9
  2792  03A5  1903               	skipnz
  2793  03A6  2B80               	goto	i1l1543
  2794  03A7  3A03               	xorlw	3	; case 10
  2795  03A8  1903               	skipnz
  2796  03A9  2B84               	goto	i1l1547
  2797  03AA  2BAB               	goto	i1l174
  2798  03AB                     i1l174:
  2799  03AB  0008               	return
  2800  03AC                     __end_of_servos:
  2801  007E                     btemp	set	126	;btemp
  2802  007E                     wtemp0	set	126
  2803                           
  2804                           	psect	config
  2805                           
  2806                           ;Config register CONFIG1 @ 0x2007
  2807                           ;	Oscillator Selection bits
  2808                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2809                           ;	Watchdog Timer Enable bit
  2810                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2811                           ;	Power-up Timer Enable bit
  2812                           ;	PWRTE = OFF, PWRT disabled
  2813                           ;	RE3/MCLR pin function select bit
  2814                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2815                           ;	Code Protection bit
  2816                           ;	CP = OFF, Program memory code protection is disabled
  2817                           ;	Data Code Protection bit
  2818                           ;	CPD = OFF, Data memory code protection is disabled
  2819                           ;	Brown Out Reset Selection bits
  2820                           ;	BOREN = OFF, BOR disabled
  2821                           ;	Internal External Switchover bit
  2822                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2823                           ;	Fail-Safe Clock Monitor Enabled bit
  2824                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2825                           ;	Low Voltage Programming Enable bit
  2826                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2827                           ;	In-Circuit Debugger Mode bit
  2828                           ;	DEBUG = 0x1, unprogrammed default
  2829  2007                     	org	8199
  2830  2007  20F4               	dw	8436
  2831                           
  2832                           ;Config register CONFIG2 @ 0x2008
  2833                           ;	Brown-out Reset Selection bit
  2834                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2835                           ;	Flash Program Memory Self Write Enable bits
  2836                           ;	WRT = OFF, Write protection off
  2837  2008                     	org	8200
  2838  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80     11      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _rutInter in COMMON

    _rutInter->_servos

Critical Paths under _main in BANK0

    _main->_guardar3SEG
    _leer3SEG->_leerSERVOS
    _leerSERVOS->_leerposiciones
    _guardar3SEG->_guardarservos
    _guardarservos->_guardarposiciones

Critical Paths under _rutInter in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rutInter in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutInter in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutInter in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1209
                                              8 BANK0      3     3      0
                    _AnalogReadServo
                    _configuraciones
                        _guardar3SEG
                           _leer3SEG
                          _send1dato
 ---------------------------------------------------------------------------------
 (1) _leer3SEG                                             2     2      0     409
                                              5 BANK0      2     2      0
                         _leerSERVOS
                          _send1dato
 ---------------------------------------------------------------------------------
 (1) _send1dato                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _leerSERVOS                                           4     4      0     378
                                              1 BANK0      4     4      0
                     _leerposiciones
 ---------------------------------------------------------------------------------
 (3) _leerposiciones                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _guardar3SEG                                          2     2      0     769
                                              6 BANK0      2     2      0
                      _guardarservos
 ---------------------------------------------------------------------------------
 (2) _guardarservos                                        4     4      0     769
                                              2 BANK0      4     4      0
                  _guardarposiciones
 ---------------------------------------------------------------------------------
 (3) _guardarposiciones                                    2     1      1     422
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _configuraciones                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AnalogReadServo                                      2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _rutInter                                             4     4      0       0
                                              2 COMMON     4     4      0
                             _servos
 ---------------------------------------------------------------------------------
 (5) _servos                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AnalogReadServo
   _configuraciones
   _guardar3SEG
     _guardarservos
       _guardarposiciones
   _leer3SEG
     _leerSERVOS
       _leerposiciones
     _send1dato
   _send1dato

 _rutInter (ROOT)
   _servos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue May 18 16:48:31 2021

                       l201 00D1                         l211 0431                         l204 00E7  
                       l220 041C                         l206 00FF                         l214 0437  
                       l150 019A                         l134 01AD                         l142 0152  
                       l231 035B                         l151 01A7                         l143 0158  
                       l135 0134                         l208 012D                         l160 023B  
                       l217 0417                         l234 042B                         l146 0182  
                       l138 013A                         l219 041B                         l147 018C  
                       l139 0173                         l252 03FF                         l157 0217  
                       l245 0303                         l190 0077                         l182 012D  
                       l183 003E                         l192 008F                         l256 03AD  
                       l185 0056                         l249 03DA                         l194 009A  
                       l187 0061                         l179 0028                         l259 03D8  
                       l197 00B0                         l199 00C6                         _PR2 0092  
                       u540 021B                         u541 021A                         u970 041B  
                       u971 041A                         u980 0437                         u981 0436  
                       u990 035B                         u991 035A                         fsr0 0004  
               leerSERVOS@n 0024                        l2011 0403                        l2013 040D  
                      l2101 03DB                        l2021 0420                        l2015 0410  
                      l2031 0307                        l2103 03E0                        l2023 0424  
                      l2121 0044                        l2113 0021                        l2017 0415  
                      l2041 0321                        l2025 0427                        l2201 0188  
                      l2131 0072                        l2123 004A                        l2019 0416  
                      l2051 0355                        l2043 032D                        l2107 03F0  
                      l2203 0190                        l2141 00A0                        l2133 007D  
                      l2125 0052                        l2117 002E                        l2037 0309  
                      l2029 042F                        l2205 0194                        l2213 01AD  
                      l2151 00CC                        l2143 00AB                        l2135 0083  
                      l2127 005C                        l2119 0039                        l2039 0315  
                      l2047 0339                        l2063 02AF                        l2207 019F  
                      l2161 00FB                        l2153 00D7                        l2145 00B6  
                      l2137 008B                        l2129 0067                        l1601 01F9  
                      l2049 034F                        l2065 02BC                        l2073 02E3  
                      l2057 02AD                        l2209 01A4                        l2163 0105  
                      l2155 00E2                        l2147 00BA                        l2139 0095  
                      l1611 0204                        l1603 01FA                        l2067 02C9  
                      l2075 02F9                        l2083 03AC                        l2157 00ED  
                      l2149 00C2                        l1621 020B                        l1613 0205  
                      l1605 01FB                        l2077 02FD                        l2069 02D6  
                      l2085 03AE                        l2093 03C9                        l2181 0142  
                      l2173 012E                        l2159 00F3                        l2167 010A  
                      l1631 0216                        l1623 020D                        l1615 0206  
                      l1607 01FC                        l2087 03B2                        l2191 0153  
                      l1641 0226                        l1633 021B                        l1625 0211  
                      l1617 0209                        l1609 0202                        l1561 01CA  
                      l2089 03B9                        l2185 0149                        l2177 013C  
                      l1651 0231                        l1643 0229                        l1635 0221  
                      l1627 0213                        l1619 020A                        l1571 01DE  
                      l1563 01CB                        l2099 03D9                        l2187 014B  
                      l2179 0140                        l2195 015A                        l1661 023A  
                      l1653 0232                        l1645 022C                        l1637 0222  
                      l1629 0214                        l1581 01ED                        l1573 01E2  
                      l1565 01CF                        l2197 0178                        l1655 0233  
                      l1647 022F                        l1639 0223                        l1591 01F4  
                      l1583 01EE                        l1575 01E3                        l1567 01D1  
                      l1559 01C6                        l2391 03FA                        l2199 017E  
                      l2383 0162                        l1657 0234                        l1649 0230  
                      l1593 01F5                        l1585 01EF                        l1577 01E9  
                      l1569 01DD                        l2393 0341                        l2385 01BB  
                      l2395 0113                        l1659 0239                        l1595 01F6  
                      l1587 01F0                        l1579 01EB                        l2387 03D3  
                      l1597 01F7                        l1589 01F1                        l2389 02EB  
                      l1599 01F8                        u1000 0303                        u1001 0302  
                      u1100 0072                        u1101 0071                        u1110 007D  
                      u1030 0027                        u1111 007C                        u1031 0026  
                      u1015 03BC                        u1200 00E2                        u1120 008B  
                      u1040 002E                        u1201 00E1                        u1121 008A  
                      u1041 002D                        u1025 03E3                        u1210 00ED  
                      u1130 0095                        u1050 0039                        u1211 00EC  
                      u1131 0094                        u1051 0038                        u1220 00FB  
                      u1140 00A0                        u1060 0044                        u1221 00FA  
                      u1141 009F                        u1061 0043                        u1230 0105  
                      u1150 00AB                        u1070 0052                        u1231 0104  
                      u1151 00AA                        u1071 0051                        u1160 00B6  
                      u1080 005C                        u1240 0139                        u1161 00B5  
                      u1081 005B                        u1241 0138                        u1170 00C2  
                      u1090 0067                        u1250 0178                        u1171 00C1  
                      u1091 0066                        u1251 0177                        u1180 00CC  
                      u1260 017E                        u1181 00CB                        u1261 017D  
                      u1190 00D7                        u1270 0188                        u1191 00D6  
                      u1271 0187                        u1280 0194                        u1281 0193  
                      u1290 019F                        u1291 019E                        _POT1 0030  
                      _POT2 002F                        _POT3 002E                        _POT4 002D  
                      _UART 0031                        _TMR0 0001                        _main 012E  
                      btemp 007E            ?_configuraciones 0070                        start 000E  
              ?_guardar3SEG 0070                       ?_main 0070                       _EEADR 010D  
                     _EEDAT 010C                       _ANSEL 0188                       i1l124 0296  
                     i1l125 0290                       i1l126 0295                       i1l119 0258  
                     i1l128 02A1                       i1l174 03AB                       _RCREG 001A  
                     _TMR1H 000F                       _TMR1L 000E                       _SPBRG 0099  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _PORTD 0008                       _PORTE 0009                       u53_20 0365  
                     u53_21 0364                       u80_20 025E                       u80_21 025D  
                     u81_20 026C                       u81_21 026B                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                       u90_20 029B                       u82_20 0270  
                     u90_21 029A                       u82_21 026F                       u83_20 0274  
                     u83_21 0273                       u84_20 027E                       u84_21 027A  
                     u85_24 0281                       u86_20 0286                       u78_20 0240  
                     u86_21 0285                       u78_21 023F                       u87_20 028A  
                     u79_20 0257                       u87_21 0289                       u79_21 0256  
                     u88_20 028E                       u88_21 028D                       u89_20 0294  
                     u89_21 0293                       _TXREG 0019               send1dato@dato 0020  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __initialization 0011                __end_of_main 01C6                      ??_main 0028  
                    _ADRESH 001E                      _CCPR2L 001B                      _EECON2 018D  
    __size_of_guardarservos 0058                      _ANSELH 0189                      i1l1521 036A  
                    i1l1531 0374                      i1l1523 036C                      i1l1515 035C  
                    i1l1541 037E                      i1l1533 0376                      i1l1525 036E  
                    i1l1517 0365                      i1l1543 0380                      i1l1535 0378  
                    i1l1527 0370                      i1l1519 0368                      i1l1545 0382  
                    i1l1537 037A                      i1l1529 0372                      i1l1553 0388  
                    i1l1547 0384                      i1l1539 037C                      i1l1549 0386  
                    i1l1761 0251                      i1l1753 023C                      i1l1771 0264  
                    i1l1763 0257                      i1l1755 0240                      i1l2397 0391  
                    i1l1781 0274                      i1l1773 0266                      i1l1765 025E  
                    i1l1757 024B                      i1l1791 028E                      i1l1783 0281  
                    i1l1767 025F                      i1l1775 0268                      i1l1759 024C  
                    i1l1793 0294                      i1l1777 026C                      i1l1785 0282  
                    i1l1769 0263                      i1l1795 029B                      i1l1787 0286  
                    i1l1779 0270                      i1l1797 029F                      i1l1789 028A  
                    i1l1799 02A0                      _EXTREC 002C                      _SERVOS 0032  
          __end_of_leer3SEG 03D9                      _servos 035C     __size_of_leerposiciones 000F  
                    saved_w 007E            __end_of_rutInter 02AA  guardarposiciones@direccion 0020  
   __end_of__initialization 001D              __pcstackCOMMON 0070               _guardarservos 0304  
      __size_of_guardar3SEG 0027              _OPTION_REGbits 0081    __size_of_AnalogReadServo 010D  
                __pbssBANK0 002B          __size_of_send1dato 000C                  __pmaintext 012E  
            ?_guardarservos 0070                  __pintentry 0004                     ?_servos 0070  
                _leerSERVOS 02AA                   ?_leer3SEG 0070           _guardarposiciones 0400  
        ?_guardarposiciones 0020         ??_guardarposiciones 0076    __size_of_configuraciones 0076  
                 ?_rutInter 0070                     __ptext1 03AC                     __ptext2 042C  
                   __ptext3 02AA                     __ptext4 041D                     __ptext5 03D9  
                   __ptext6 0304                     __ptext7 0400                     __ptext8 01C6  
                   __ptext9 0021             __size_of_servos 0050                   _T1CONbits 0010  
            _leerposiciones 041D                   _T2CONbits 0012           __end_of_send1dato 0438  
 __end_of_guardarposiciones 041D                  ??_leer3SEG 0025        end_of_initialization 001D  
         ??_AnalogReadServo 0020             ??_guardarservos 0022                   _RCSTAbits 0018  
                 _SERVINDIC 0077                  ??_rutInter 0072      __end_of_leerposiciones 042C  
                 _PORTBbits 0006                   _PORTDbits 0008                   _PORTEbits 0009  
               ?_leerSERVOS 0070                 _CCP2CONbits 001D                   _TXSTAbits 0098  
         leerSERVOS@desfase 0023             ?_leerposiciones 0070              __end_of_servos 03AC  
         ??_configuraciones 0076         start_initialization 0011  __size_of_guardarposiciones 001D  
      guardarservos@desfase 0024               ??_guardar3SEG 0026         __size_of_leerSERVOS 005A  
                  ??_servos 0070                 __pbssCOMMON 0076                   ___latbits 0002  
                 _datEEPROM 0076               __pcstackBANK0 0020              guardarservos@n 0025  
         __size_of_leer3SEG 002D           __size_of_rutInter 006E         __end_of_guardar3SEG 0400  
           _AnalogReadServo 0021                   _send1dato 042C           interrupt_function 0004  
                  _IOCBbits 0096                    _PIE1bits 008C                    _PIR1bits 000C  
                _ADCON0bits 001F                  _ADCON1bits 009F     leerposiciones@direccion 0020  
              ??_leerSERVOS 0021                  ?_send1dato 0070                  _EECON1bits 018C  
          ??_leerposiciones 0076       __end_of_guardarservos 035C             _configuraciones 01C6  
               _guardar3SEG 03D9          __end_of_leerSERVOS 0304     __end_of_AnalogReadServo 012E  
                  __ptext10 023C                    __ptext11 035C                    _leer3SEG 03AC  
             __size_of_main 0098                    _posicion 002B    guardarposiciones@guardar 0021  
                  _rutInter 023C                  _INTCONbits 000B                    intlevel1 0000  
               ??_send1dato 0076     __end_of_configuraciones 023C                  _OSCCONbits 008F  
          ?_AnalogReadServo 0070  
