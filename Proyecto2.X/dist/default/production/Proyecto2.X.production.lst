

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue May 11 18:29:57 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0019                     _TXREG	set	25
   212  001E                     _ADRESH	set	30
   213  0008                     _PORTDbits	set	8
   214  0001                     _TMR0	set	1
   215  0018                     _RCSTAbits	set	24
   216  0008                     _PORTD	set	8
   217  0007                     _PORTC	set	7
   218  0006                     _PORTB	set	6
   219  0005                     _PORTA	set	5
   220  001A                     _RCREG	set	26
   221  000C                     _PIR1bits	set	12
   222  0009                     _PORTE	set	9
   223  0006                     _PORTBbits	set	6
   224  001F                     _ADCON0bits	set	31
   225  000B                     _INTCONbits	set	11
   226  0081                     _OPTION_REGbits	set	129
   227  0098                     _TXSTAbits	set	152
   228  0099                     _SPBRG	set	153
   229  009F                     _ADCON1bits	set	159
   230  0096                     _IOCBbits	set	150
   231  008C                     _PIE1bits	set	140
   232  008F                     _OSCCONbits	set	143
   233  0089                     _TRISE	set	137
   234  0088                     _TRISD	set	136
   235  0087                     _TRISC	set	135
   236  0086                     _TRISB	set	134
   237  0085                     _TRISA	set	133
   238  010C                     _EEDAT	set	268
   239  010D                     _EEADR	set	269
   240  018D                     _EECON2	set	397
   241  018C                     _EECON1bits	set	396
   242  0189                     _ANSELH	set	393
   243  0188                     _ANSEL	set	392
   244                           
   245                           	psect	cinit
   246  000F                     start_initialization:	
   247                           ; #config settings
   248                           
   249  000F                     __initialization:
   250                           
   251                           ; Clear objects allocated to COMMON
   252  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   253  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   254  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   255                           
   256                           ; Clear objects allocated to BANK0
   257  0012  1283               	bcf	3,5	;RP0=0, select bank0
   258  0013  1303               	bcf	3,6	;RP1=0, select bank0
   259  0014  01A0               	clrf	__pbssBANK0& (0+127)
   260  0015  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   261  0016  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   262  0017  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   263  0018  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   264  0019  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   265  001A  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   266  001B                     end_of_initialization:	
   267                           ;End of C runtime variable initialization code
   268                           
   269  001B                     __end_of__initialization:
   270  001B  0183               	clrf	3
   271  001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   272                           
   273                           	psect	bssCOMMON
   274  0077                     __pbssCOMMON:
   275  0077                     _POT2:
   276  0077                     	ds	1
   277  0078                     _POT1:
   278  0078                     	ds	1
   279  0079                     _SERVOS:
   280  0079                     	ds	1
   281                           
   282                           	psect	bssBANK0
   283  0020                     __pbssBANK0:
   284  0020                     _datEEPROM:
   285  0020                     	ds	1
   286  0021                     _addEEPROM:
   287  0021                     	ds	1
   288  0022                     _SERVINDIC:
   289  0022                     	ds	1
   290  0023                     _EXTREC:
   291  0023                     	ds	1
   292  0024                     _POT4:
   293  0024                     	ds	1
   294  0025                     _POT3:
   295  0025                     	ds	1
   296  0026                     _UART:
   297  0026                     	ds	1
   298                           
   299                           	psect	cstackCOMMON
   300  0070                     __pcstackCOMMON:
   301  0070                     ?_configuraciones:
   302  0070                     ?_AnalogReadServo:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_guardarservos:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?_leerposiciones:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ?_servos:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ?_rutInter:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ??_rutInter:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_main:	
   321                           ; 1 bytes @ 0x0
   322                           
   323                           
   324                           ; 1 bytes @ 0x0
   325  0070                     	ds	3
   326  0073                     ??_configuraciones:
   327  0073                     ??_AnalogReadServo:	
   328                           ; 1 bytes @ 0x3
   329                           
   330  0073                     ??_leerposiciones:	
   331                           ; 1 bytes @ 0x3
   332                           
   333  0073                     ??_servos:	
   334                           ; 1 bytes @ 0x3
   335                           
   336  0073                     ?_guardarposiciones:	
   337                           ; 1 bytes @ 0x3
   338                           
   339  0073                     guardarposiciones@direccion:	
   340                           ; 1 bytes @ 0x3
   341                           
   342  0073                     leerposiciones@direccion:	
   343                           ; 1 bytes @ 0x3
   344                           
   345                           
   346                           ; 1 bytes @ 0x3
   347  0073                     	ds	1
   348  0074                     ??_guardarposiciones:
   349  0074                     guardarposiciones@guardar:	
   350                           ; 1 bytes @ 0x4
   351                           
   352                           
   353                           ; 1 bytes @ 0x4
   354  0074                     	ds	1
   355  0075                     ??_guardarservos:
   356                           
   357                           ; 1 bytes @ 0x5
   358  0075                     	ds	2
   359                           
   360                           	psect	cstackBANK0
   361  0027                     __pcstackBANK0:
   362  0027                     guardarservos@desfase:
   363                           
   364                           ; 1 bytes @ 0x0
   365  0027                     	ds	1
   366  0028                     guardarservos@n:
   367                           
   368                           ; 1 bytes @ 0x1
   369  0028                     	ds	1
   370  0029                     ??_main:
   371                           
   372                           ; 1 bytes @ 0x2
   373  0029                     	ds	2
   374                           
   375                           	psect	maintext
   376  001F                     __pmaintext:	
   377 ;;
   378 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   379 ;;
   380 ;; *************** function _main *****************
   381 ;; Defined at:
   382 ;;		line 118 in file "mainP2.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;		None
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   391 ;; Tracked objects:
   392 ;;		On entry : B00/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   396 ;;      Params:         0       0       0       0       0
   397 ;;      Locals:         0       0       0       0       0
   398 ;;      Temps:          0       2       0       0       0
   399 ;;      Totals:         0       2       0       0       0
   400 ;;Total ram usage:        2 bytes
   401 ;; Hardware stack levels required when called:    3
   402 ;; This function calls:
   403 ;;		_AnalogReadServo
   404 ;;		_configuraciones
   405 ;;		_guardarservos
   406 ;;		_leerposiciones
   407 ;;		_servos
   408 ;; This function is called by:
   409 ;;		Startup code after reset
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413                           
   414                           ;psect for function _main
   415  001F                     _main:
   416  001F                     l1669:	
   417                           ;incstack = 0
   418                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   419                           
   420                           
   421                           ;mainP2.c: 119:     configuraciones();
   422  001F  120A  118A  2256  120A  118A  	fcall	_configuraciones
   423  0024                     l1671:
   424                           
   425                           ;mainP2.c: 121:         if(SERVOS.modo){
   426  0024  1F79               	btfss	_SERVOS,6
   427  0025  2827               	goto	u671
   428  0026  2828               	goto	u670
   429  0027                     u671:
   430  0027  286A               	goto	l114
   431  0028                     u670:
   432  0028                     l1673:
   433                           
   434                           ;mainP2.c: 122:             AnalogReadServo();
   435  0028  120A  118A  20E6  120A  118A  	fcall	_AnalogReadServo
   436  002D                     l1675:
   437                           
   438                           ;mainP2.c: 123:             PORTBbits.RB7 = 1;
   439  002D  1283               	bcf	3,5	;RP0=0, select bank0
   440  002E  1303               	bcf	3,6	;RP1=0, select bank0
   441  002F  1786               	bsf	6,7	;volatile
   442  0030                     l1677:
   443                           
   444                           ;mainP2.c: 124:             UART.indicador = 0;
   445  0030  1026               	bcf	_UART,0
   446  0031                     l1679:
   447                           
   448                           ;mainP2.c: 126:             if(SERVOS.guardar){
   449  0031  1FF9               	btfss	_SERVOS,7
   450  0032  2834               	goto	u681
   451  0033  2835               	goto	u680
   452  0034                     u681:
   453  0034  28DD               	goto	l1705
   454  0035                     u680:
   455  0035  2852               	goto	l1693
   456  0036                     l1683:
   457                           
   458                           ;mainP2.c: 129:                         guardarservos(0);
   459  0036  3000               	movlw	0
   460  0037  120A  118A  22A7  120A  118A  	fcall	_guardarservos
   461                           
   462                           ;mainP2.c: 130:                         break;
   463  003C  2868               	goto	l118
   464  003D                     l1685:
   465                           
   466                           ;mainP2.c: 132:                         guardarservos(5);
   467  003D  3005               	movlw	5
   468  003E  120A  118A  22A7  120A  118A  	fcall	_guardarservos
   469                           
   470                           ;mainP2.c: 133:                         break;
   471  0043  2868               	goto	l118
   472  0044                     l1687:
   473                           
   474                           ;mainP2.c: 135:                         guardarservos(10);
   475  0044  300A               	movlw	10
   476  0045  120A  118A  22A7  120A  118A  	fcall	_guardarservos
   477                           
   478                           ;mainP2.c: 136:                         break;
   479  004A  2868               	goto	l118
   480  004B                     l1689:
   481                           
   482                           ;mainP2.c: 138:                         guardarservos(15);
   483  004B  300F               	movlw	15
   484  004C  120A  118A  22A7  120A  118A  	fcall	_guardarservos
   485                           
   486                           ;mainP2.c: 139:                         break;
   487  0051  2868               	goto	l118
   488  0052                     l1693:
   489  0052  0809               	movf	9,w	;volatile
   490  0053  00A9               	movwf	??_main
   491  0054  01AA               	clrf	??_main+1
   492                           
   493                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   494                           ; Switch size 1, requested type "simple"
   495                           ; Number of cases is 1, Range of values is 0 to 0
   496                           ; switch strategies available:
   497                           ; Name         Instructions Cycles
   498                           ; simple_byte            4     3 (average)
   499                           ; direct_byte           11     8 (fixed)
   500                           ; jumptable            260     6 (fixed)
   501                           ;	Chosen strategy is simple_byte
   502  0055  082A               	movf	??_main+1,w
   503  0056  3A00               	xorlw	0	; case 0
   504  0057  1903               	skipnz
   505  0058  285A               	goto	l1815
   506  0059  2868               	goto	l118
   507  005A                     l1815:
   508                           
   509                           ; Switch size 1, requested type "simple"
   510                           ; Number of cases is 4, Range of values is 0 to 3
   511                           ; switch strategies available:
   512                           ; Name         Instructions Cycles
   513                           ; simple_byte           13     7 (average)
   514                           ; direct_byte           20     8 (fixed)
   515                           ; jumptable            260     6 (fixed)
   516                           ;	Chosen strategy is simple_byte
   517  005A  0829               	movf	??_main,w
   518  005B  3A00               	xorlw	0	; case 0
   519  005C  1903               	skipnz
   520  005D  2836               	goto	l1683
   521  005E  3A01               	xorlw	1	; case 1
   522  005F  1903               	skipnz
   523  0060  283D               	goto	l1685
   524  0061  3A03               	xorlw	3	; case 2
   525  0062  1903               	skipnz
   526  0063  2844               	goto	l1687
   527  0064  3A01               	xorlw	1	; case 3
   528  0065  1903               	skipnz
   529  0066  284B               	goto	l1689
   530  0067  2868               	goto	l118
   531  0068                     l118:
   532                           
   533                           ;mainP2.c: 143:                 SERVOS.guardar = 0;
   534  0068  13F9               	bcf	_SERVOS,7
   535  0069  28DD               	goto	l1705
   536  006A                     l114:	
   537                           ;mainP2.c: 147:         else{
   538                           
   539                           
   540                           ;mainP2.c: 148:             PORTBbits.RB7 = 0;
   541  006A  1283               	bcf	3,5	;RP0=0, select bank0
   542  006B  1303               	bcf	3,6	;RP1=0, select bank0
   543  006C  1386               	bcf	6,7	;volatile
   544                           
   545                           ;mainP2.c: 150:             if(UART.datorecep){
   546  006D  1CA6               	btfss	_UART,1
   547  006E  2870               	goto	u691
   548  006F  2871               	goto	u690
   549  0070                     u691:
   550  0070  28DD               	goto	l1705
   551  0071                     u690:
   552  0071  28CC               	goto	l1703
   553  0072                     l1697:
   554                           
   555                           ;mainP2.c: 153:                         POT1 = leerposiciones(0);
   556  0072  3000               	movlw	0
   557  0073  120A  118A  230F  120A  118A  	fcall	_leerposiciones
   558  0078  1283               	bcf	3,5	;RP0=0, select bank0
   559  0079  1303               	bcf	3,6	;RP1=0, select bank0
   560  007A  00A9               	movwf	??_main
   561  007B  0829               	movf	??_main,w
   562  007C  00F8               	movwf	_POT1
   563                           
   564                           ;mainP2.c: 154:                         POT2 = leerposiciones(1);
   565  007D  3001               	movlw	1
   566  007E  120A  118A  230F  120A  118A  	fcall	_leerposiciones
   567  0083  1283               	bcf	3,5	;RP0=0, select bank0
   568  0084  1303               	bcf	3,6	;RP1=0, select bank0
   569  0085  00A9               	movwf	??_main
   570  0086  0829               	movf	??_main,w
   571  0087  00F7               	movwf	_POT2
   572                           
   573                           ;mainP2.c: 155:                         POT3 = leerposiciones(2);
   574  0088  3002               	movlw	2
   575  0089  120A  118A  230F  120A  118A  	fcall	_leerposiciones
   576  008E  1283               	bcf	3,5	;RP0=0, select bank0
   577  008F  1303               	bcf	3,6	;RP1=0, select bank0
   578  0090  00A9               	movwf	??_main
   579  0091  0829               	movf	??_main,w
   580  0092  00A5               	movwf	_POT3
   581                           
   582                           ;mainP2.c: 156:                         POT4 = leerposiciones(3);
   583  0093  3003               	movlw	3
   584  0094  120A  118A  230F  120A  118A  	fcall	_leerposiciones
   585  0099  1283               	bcf	3,5	;RP0=0, select bank0
   586  009A  1303               	bcf	3,6	;RP1=0, select bank0
   587  009B  00A9               	movwf	??_main
   588  009C  0829               	movf	??_main,w
   589  009D  00A4               	movwf	_POT4
   590                           
   591                           ;mainP2.c: 157:                         break;
   592  009E  28DC               	goto	l126
   593  009F                     l1699:
   594                           
   595                           ;mainP2.c: 159:                         POT1 = leerposiciones(5);
   596  009F  3005               	movlw	5
   597  00A0  120A  118A  230F  120A  118A  	fcall	_leerposiciones
   598  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   599  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   600  00A7  00A9               	movwf	??_main
   601  00A8  0829               	movf	??_main,w
   602  00A9  00F8               	movwf	_POT1
   603                           
   604                           ;mainP2.c: 160:                         POT2 = leerposiciones(6);
   605  00AA  3006               	movlw	6
   606  00AB  120A  118A  230F  120A  118A  	fcall	_leerposiciones
   607  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   608  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   609  00B2  00A9               	movwf	??_main
   610  00B3  0829               	movf	??_main,w
   611  00B4  00F7               	movwf	_POT2
   612                           
   613                           ;mainP2.c: 161:                         POT3 = leerposiciones(7);
   614  00B5  3007               	movlw	7
   615  00B6  120A  118A  230F  120A  118A  	fcall	_leerposiciones
   616  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   617  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   618  00BD  00A9               	movwf	??_main
   619  00BE  0829               	movf	??_main,w
   620  00BF  00A5               	movwf	_POT3
   621                           
   622                           ;mainP2.c: 162:                         POT4 = leerposiciones(8);
   623  00C0  3008               	movlw	8
   624  00C1  120A  118A  230F  120A  118A  	fcall	_leerposiciones
   625  00C6  1283               	bcf	3,5	;RP0=0, select bank0
   626  00C7  1303               	bcf	3,6	;RP1=0, select bank0
   627  00C8  00A9               	movwf	??_main
   628  00C9  0829               	movf	??_main,w
   629  00CA  00A4               	movwf	_POT4
   630                           
   631                           ;mainP2.c: 163:                         break;
   632  00CB  28DC               	goto	l126
   633  00CC                     l1703:
   634  00CC  0823               	movf	_EXTREC,w
   635  00CD  00A9               	movwf	??_main
   636  00CE  01AA               	clrf	??_main+1
   637                           
   638                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   639                           ; Switch size 1, requested type "simple"
   640                           ; Number of cases is 1, Range of values is 0 to 0
   641                           ; switch strategies available:
   642                           ; Name         Instructions Cycles
   643                           ; simple_byte            4     3 (average)
   644                           ; direct_byte           11     8 (fixed)
   645                           ; jumptable            260     6 (fixed)
   646                           ;	Chosen strategy is simple_byte
   647  00CF  082A               	movf	??_main+1,w
   648  00D0  3A00               	xorlw	0	; case 0
   649  00D1  1903               	skipnz
   650  00D2  28D4               	goto	l1817
   651  00D3  28DC               	goto	l126
   652  00D4                     l1817:
   653                           
   654                           ; Switch size 1, requested type "simple"
   655                           ; Number of cases is 2, Range of values is 48 to 49
   656                           ; switch strategies available:
   657                           ; Name         Instructions Cycles
   658                           ; simple_byte            7     4 (average)
   659                           ; direct_byte           17    11 (fixed)
   660                           ; jumptable            263     9 (fixed)
   661                           ;	Chosen strategy is simple_byte
   662  00D4  0829               	movf	??_main,w
   663  00D5  3A30               	xorlw	48	; case 48
   664  00D6  1903               	skipnz
   665  00D7  2872               	goto	l1697
   666  00D8  3A01               	xorlw	1	; case 49
   667  00D9  1903               	skipnz
   668  00DA  289F               	goto	l1699
   669  00DB  28DC               	goto	l126
   670  00DC                     l126:
   671                           
   672                           ;mainP2.c: 166:                 UART.datorecep = 0;
   673  00DC  10A6               	bcf	_UART,1
   674  00DD                     l1705:
   675                           
   676                           ;mainP2.c: 171:         servos();
   677  00DD  120A  118A  21F3  120A  118A  	fcall	_servos
   678  00E2  2824               	goto	l1671
   679  00E3  120A  118A  280C   	ljmp	start
   680  00E6                     __end_of_main:
   681                           
   682                           	psect	text1
   683  01F3                     __ptext1:	
   684 ;; *************** function _servos *****************
   685 ;; Defined at:
   686 ;;		line 241 in file "mainP2.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   700 ;;      Params:         0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0
   702 ;;      Temps:          2       0       0       0       0
   703 ;;      Totals:         2       0       0       0       0
   704 ;;Total ram usage:        2 bytes
   705 ;; Hardware stack levels used:    1
   706 ;; Hardware stack levels required when called:    1
   707 ;; This function calls:
   708 ;;		Nothing
   709 ;; This function is called by:
   710 ;;		_main
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           
   715                           ;psect for function _servos
   716  01F3                     _servos:
   717  01F3                     l1391:	
   718                           ;incstack = 0
   719                           ; Regs used in _servos: [wreg-fsr0h+status,2+status,0]
   720                           
   721                           
   722                           ;mainP2.c: 243:     if(SERVOS.bit1){
   723  01F3  1EF9               	btfss	_SERVOS,5
   724  01F4  29F6               	goto	u451
   725  01F5  29F7               	goto	u450
   726  01F6                     u451:
   727  01F6  2A55               	goto	l148
   728  01F7                     u450:
   729  01F7                     l1393:
   730                           
   731                           ;mainP2.c: 244:             if(SERVOS.bit0 == 15) SERVOS.bit0 = 0;
   732  01F7  0879               	movf	_SERVOS,w
   733  01F8  391F               	andlw	31
   734  01F9  3A0F               	xorlw	15
   735  01FA  1D03               	skipz
   736  01FB  29FD               	goto	u461
   737  01FC  29FE               	goto	u460
   738  01FD                     u461:
   739  01FD  2A00               	goto	l1397
   740  01FE                     u460:
   741  01FE                     l1395:
   742  01FE  30E0               	movlw	-32
   743  01FF  05F9               	andwf	_SERVOS,f
   744  0200                     l1397:
   745                           
   746                           ;mainP2.c: 245:             SERVOS.bit1 = 0;
   747  0200  12F9               	bcf	_SERVOS,5
   748                           
   749                           ;mainP2.c: 246:             switch(SERVOS.bit0){
   750  0201  2A32               	goto	l1433
   751  0202                     l1399:
   752                           
   753                           ;mainP2.c: 249:                     TMR0 = 255-POT1; PORTDbits.RD0 = 0;
   754  0202  0978               	comf	_POT1,w
   755  0203  1283               	bcf	3,5	;RP0=0, select bank0
   756  0204  1303               	bcf	3,6	;RP1=0, select bank0
   757  0205  0081               	movwf	1	;volatile
   758  0206                     l1401:
   759  0206  1008               	bcf	8,0	;volatile
   760                           
   761                           ;mainP2.c: 250:                     break;
   762  0207  2A55               	goto	l148
   763  0208                     l1403:
   764                           
   765                           ;mainP2.c: 252:                      TMR0 = 255-POT2; PORTDbits.RD1 = 0;
   766  0208  0977               	comf	_POT2,w
   767  0209  1283               	bcf	3,5	;RP0=0, select bank0
   768  020A  1303               	bcf	3,6	;RP1=0, select bank0
   769  020B  0081               	movwf	1	;volatile
   770  020C                     l1405:
   771  020C  1088               	bcf	8,1	;volatile
   772                           
   773                           ;mainP2.c: 253:                     break;
   774  020D  2A55               	goto	l148
   775  020E                     l1407:
   776                           
   777                           ;mainP2.c: 255:                     TMR0 = 255-POT3; PORTDbits.RD2 = 0;
   778  020E  1283               	bcf	3,5	;RP0=0, select bank0
   779  020F  1303               	bcf	3,6	;RP1=0, select bank0
   780  0210  0925               	comf	_POT3,w
   781  0211  0081               	movwf	1	;volatile
   782  0212                     l1409:
   783  0212  1108               	bcf	8,2	;volatile
   784                           
   785                           ;mainP2.c: 256:                     break;
   786  0213  2A55               	goto	l148
   787  0214                     l1411:
   788                           
   789                           ;mainP2.c: 258:                     TMR0 = 255-POT4; PORTDbits.RD3 = 0;
   790  0214  1283               	bcf	3,5	;RP0=0, select bank0
   791  0215  1303               	bcf	3,6	;RP1=0, select bank0
   792  0216  0924               	comf	_POT4,w
   793  0217  0081               	movwf	1	;volatile
   794  0218                     l1413:
   795  0218  1188               	bcf	8,3	;volatile
   796                           
   797                           ;mainP2.c: 259:                     break;
   798  0219  2A55               	goto	l148
   799  021A                     l1415:
   800                           
   801                           ;mainP2.c: 262:                     TMR0 = POT1; PORTDbits.RD0 = 1;
   802  021A  0878               	movf	_POT1,w
   803  021B  1283               	bcf	3,5	;RP0=0, select bank0
   804  021C  1303               	bcf	3,6	;RP1=0, select bank0
   805  021D  0081               	movwf	1	;volatile
   806  021E                     l1417:
   807  021E  1408               	bsf	8,0	;volatile
   808                           
   809                           ;mainP2.c: 263:                     break;
   810  021F  2A55               	goto	l148
   811  0220                     l1419:
   812                           
   813                           ;mainP2.c: 265:                     TMR0 = POT2; PORTDbits.RD1 = 1;
   814  0220  0877               	movf	_POT2,w
   815  0221  1283               	bcf	3,5	;RP0=0, select bank0
   816  0222  1303               	bcf	3,6	;RP1=0, select bank0
   817  0223  0081               	movwf	1	;volatile
   818  0224                     l1421:
   819  0224  1488               	bsf	8,1	;volatile
   820                           
   821                           ;mainP2.c: 266:                     break;
   822  0225  2A55               	goto	l148
   823  0226                     l1423:
   824                           
   825                           ;mainP2.c: 268:                     TMR0 = POT3; PORTDbits.RD2 = 1;
   826  0226  1283               	bcf	3,5	;RP0=0, select bank0
   827  0227  1303               	bcf	3,6	;RP1=0, select bank0
   828  0228  0825               	movf	_POT3,w
   829  0229  0081               	movwf	1	;volatile
   830  022A                     l1425:
   831  022A  1508               	bsf	8,2	;volatile
   832                           
   833                           ;mainP2.c: 269:                     break;
   834  022B  2A55               	goto	l148
   835  022C                     l1427:
   836                           
   837                           ;mainP2.c: 271:                     TMR0 = POT4; PORTDbits.RD3 = 1;
   838  022C  1283               	bcf	3,5	;RP0=0, select bank0
   839  022D  1303               	bcf	3,6	;RP1=0, select bank0
   840  022E  0824               	movf	_POT4,w
   841  022F  0081               	movwf	1	;volatile
   842  0230                     l1429:
   843  0230  1588               	bsf	8,3	;volatile
   844                           
   845                           ;mainP2.c: 272:                     break;
   846  0231  2A55               	goto	l148
   847  0232                     l1433:
   848  0232  0879               	movf	_SERVOS,w
   849  0233  391F               	andlw	31
   850  0234  00F3               	movwf	??_servos
   851  0235  01F4               	clrf	??_servos+1
   852                           
   853                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   854                           ; Switch size 1, requested type "simple"
   855                           ; Number of cases is 1, Range of values is 0 to 0
   856                           ; switch strategies available:
   857                           ; Name         Instructions Cycles
   858                           ; simple_byte            4     3 (average)
   859                           ; direct_byte           11     8 (fixed)
   860                           ; jumptable            260     6 (fixed)
   861                           ;	Chosen strategy is simple_byte
   862  0236  0874               	movf	??_servos+1,w
   863  0237  3A00               	xorlw	0	; case 0
   864  0238  1903               	skipnz
   865  0239  2A3B               	goto	l1819
   866  023A  2A55               	goto	l148
   867  023B                     l1819:
   868                           
   869                           ; Switch size 1, requested type "simple"
   870                           ; Number of cases is 8, Range of values is 0 to 10
   871                           ; switch strategies available:
   872                           ; Name         Instructions Cycles
   873                           ; simple_byte           25    13 (average)
   874                           ; direct_byte           41     8 (fixed)
   875                           ; jumptable            260     6 (fixed)
   876                           ;	Chosen strategy is simple_byte
   877  023B  0873               	movf	??_servos,w
   878  023C  3A00               	xorlw	0	; case 0
   879  023D  1903               	skipnz
   880  023E  2A1A               	goto	l1415
   881  023F  3A01               	xorlw	1	; case 1
   882  0240  1903               	skipnz
   883  0241  2A02               	goto	l1399
   884  0242  3A02               	xorlw	2	; case 3
   885  0243  1903               	skipnz
   886  0244  2A20               	goto	l1419
   887  0245  3A07               	xorlw	7	; case 4
   888  0246  1903               	skipnz
   889  0247  2A08               	goto	l1403
   890  0248  3A02               	xorlw	2	; case 6
   891  0249  1903               	skipnz
   892  024A  2A26               	goto	l1423
   893  024B  3A01               	xorlw	1	; case 7
   894  024C  1903               	skipnz
   895  024D  2A0E               	goto	l1407
   896  024E  3A0E               	xorlw	14	; case 9
   897  024F  1903               	skipnz
   898  0250  2A2C               	goto	l1427
   899  0251  3A03               	xorlw	3	; case 10
   900  0252  1903               	skipnz
   901  0253  2A14               	goto	l1411
   902  0254  2A55               	goto	l148
   903  0255                     l148:
   904  0255  0008               	return
   905  0256                     __end_of_servos:
   906                           
   907                           	psect	text2
   908  030F                     __ptext2:	
   909 ;; *************** function _leerposiciones *****************
   910 ;; Defined at:
   911 ;;		line 363 in file "mainP2.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;  direccion       1    wreg     unsigned char 
   914 ;; Auto vars:     Size  Location     Type
   915 ;;  direccion       1    3[COMMON] unsigned char 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      unsigned char 
   918 ;; Registers used:
   919 ;;		wreg
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   925 ;;      Params:         0       0       0       0       0
   926 ;;      Locals:         1       0       0       0       0
   927 ;;      Temps:          0       0       0       0       0
   928 ;;      Totals:         1       0       0       0       0
   929 ;;Total ram usage:        1 bytes
   930 ;; Hardware stack levels used:    1
   931 ;; Hardware stack levels required when called:    1
   932 ;; This function calls:
   933 ;;		Nothing
   934 ;; This function is called by:
   935 ;;		_main
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           
   940                           ;psect for function _leerposiciones
   941  030F                     _leerposiciones:
   942                           
   943                           ;incstack = 0
   944                           ; Regs used in _leerposiciones: [wreg]
   945                           ;leerposiciones@direccion stored from wreg
   946  030F  00F3               	movwf	leerposiciones@direccion
   947  0310                     l1383:
   948                           
   949                           ;mainP2.c: 364:     EEADR = direccion;
   950  0310  0873               	movf	leerposiciones@direccion,w
   951  0311  1283               	bcf	3,5	;RP0=0, select bank2
   952  0312  1703               	bsf	3,6	;RP1=1, select bank2
   953  0313  008D               	movwf	13	;volatile
   954  0314                     l1385:
   955                           
   956                           ;mainP2.c: 365:     EECON1bits.EEPGD = 0;
   957  0314  1683               	bsf	3,5	;RP0=1, select bank3
   958  0315  1703               	bsf	3,6	;RP1=1, select bank3
   959  0316  138C               	bcf	12,7	;volsfr
   960  0317                     l1387:
   961                           
   962                           ;mainP2.c: 366:     EECON1bits.RD = 1;
   963  0317  140C               	bsf	12,0	;volsfr
   964                           
   965                           ;mainP2.c: 367:     return EEDAT;
   966  0318  1283               	bcf	3,5	;RP0=0, select bank2
   967  0319  1703               	bsf	3,6	;RP1=1, select bank2
   968  031A  080C               	movf	12,w	;volatile
   969  031B                     l199:
   970  031B  0008               	return
   971  031C                     __end_of_leerposiciones:
   972                           
   973                           	psect	text3
   974  02A7                     __ptext3:	
   975 ;; *************** function _guardarservos *****************
   976 ;; Defined at:
   977 ;;		line 346 in file "mainP2.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;  desfase         1    wreg     unsigned char 
   980 ;; Auto vars:     Size  Location     Type
   981 ;;  desfase         1    0[BANK0 ] unsigned char 
   982 ;;  n               1    1[BANK0 ] unsigned char 
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   992 ;;      Params:         0       0       0       0       0
   993 ;;      Locals:         0       2       0       0       0
   994 ;;      Temps:          2       0       0       0       0
   995 ;;      Totals:         2       2       0       0       0
   996 ;;Total ram usage:        4 bytes
   997 ;; Hardware stack levels used:    1
   998 ;; Hardware stack levels required when called:    2
   999 ;; This function calls:
  1000 ;;		_guardarposiciones
  1001 ;; This function is called by:
  1002 ;;		_main
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           
  1007                           ;psect for function _guardarservos
  1008  02A7                     _guardarservos:
  1009                           
  1010                           ;incstack = 0
  1011                           ; Regs used in _guardarservos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1012                           ;guardarservos@desfase stored from wreg
  1013  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  1014  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  1015  02A9  00A7               	movwf	guardarservos@desfase
  1016  02AA                     l1639:
  1017                           
  1018                           ;mainP2.c: 347:     for(uint8_t n=0;n<=3;n++){
  1019  02AA  01A8               	clrf	guardarservos@n
  1020  02AB                     l1645:
  1021                           
  1022                           ;mainP2.c: 348:         addEEPROM = n + desfase;
  1023  02AB  0827               	movf	guardarservos@desfase,w
  1024  02AC  0728               	addwf	guardarservos@n,w
  1025  02AD  00F5               	movwf	??_guardarservos
  1026  02AE  0875               	movf	??_guardarservos,w
  1027  02AF  00A1               	movwf	_addEEPROM
  1028                           
  1029                           ;mainP2.c: 349:         switch(n){
  1030  02B0  2AC5               	goto	l1657
  1031  02B1                     l1647:
  1032  02B1  0878               	movf	_POT1,w
  1033  02B2  00F5               	movwf	??_guardarservos
  1034  02B3  0875               	movf	??_guardarservos,w
  1035  02B4  00A0               	movwf	_datEEPROM
  1036                           
  1037                           ;mainP2.c: 351:                 break;
  1038  02B5  2ADB               	goto	l1659
  1039  02B6                     l1649:
  1040  02B6  0877               	movf	_POT2,w
  1041  02B7  00F5               	movwf	??_guardarservos
  1042  02B8  0875               	movf	??_guardarservos,w
  1043  02B9  00A0               	movwf	_datEEPROM
  1044                           
  1045                           ;mainP2.c: 353:                 break;
  1046  02BA  2ADB               	goto	l1659
  1047  02BB                     l1651:
  1048  02BB  0825               	movf	_POT3,w
  1049  02BC  00F5               	movwf	??_guardarservos
  1050  02BD  0875               	movf	??_guardarservos,w
  1051  02BE  00A0               	movwf	_datEEPROM
  1052                           
  1053                           ;mainP2.c: 355:                 break;
  1054  02BF  2ADB               	goto	l1659
  1055  02C0                     l1653:
  1056  02C0  0824               	movf	_POT4,w
  1057  02C1  00F5               	movwf	??_guardarservos
  1058  02C2  0875               	movf	??_guardarservos,w
  1059  02C3  00A0               	movwf	_datEEPROM
  1060                           
  1061                           ;mainP2.c: 357:                 break;
  1062  02C4  2ADB               	goto	l1659
  1063  02C5                     l1657:
  1064  02C5  0828               	movf	guardarservos@n,w
  1065  02C6  00F5               	movwf	??_guardarservos
  1066  02C7  01F6               	clrf	??_guardarservos+1
  1067                           
  1068                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1069                           ; Switch size 1, requested type "simple"
  1070                           ; Number of cases is 1, Range of values is 0 to 0
  1071                           ; switch strategies available:
  1072                           ; Name         Instructions Cycles
  1073                           ; simple_byte            4     3 (average)
  1074                           ; direct_byte           11     8 (fixed)
  1075                           ; jumptable            260     6 (fixed)
  1076                           ;	Chosen strategy is simple_byte
  1077  02C8  0876               	movf	??_guardarservos+1,w
  1078  02C9  3A00               	xorlw	0	; case 0
  1079  02CA  1903               	skipnz
  1080  02CB  2ACD               	goto	l1821
  1081  02CC  2ADB               	goto	l1659
  1082  02CD                     l1821:
  1083                           
  1084                           ; Switch size 1, requested type "simple"
  1085                           ; Number of cases is 4, Range of values is 0 to 3
  1086                           ; switch strategies available:
  1087                           ; Name         Instructions Cycles
  1088                           ; simple_byte           13     7 (average)
  1089                           ; direct_byte           20     8 (fixed)
  1090                           ; jumptable            260     6 (fixed)
  1091                           ;	Chosen strategy is simple_byte
  1092  02CD  0875               	movf	??_guardarservos,w
  1093  02CE  3A00               	xorlw	0	; case 0
  1094  02CF  1903               	skipnz
  1095  02D0  2AB1               	goto	l1647
  1096  02D1  3A01               	xorlw	1	; case 1
  1097  02D2  1903               	skipnz
  1098  02D3  2AB6               	goto	l1649
  1099  02D4  3A03               	xorlw	3	; case 2
  1100  02D5  1903               	skipnz
  1101  02D6  2ABB               	goto	l1651
  1102  02D7  3A01               	xorlw	1	; case 3
  1103  02D8  1903               	skipnz
  1104  02D9  2AC0               	goto	l1653
  1105  02DA  2ADB               	goto	l1659
  1106  02DB                     l1659:
  1107                           
  1108                           ;mainP2.c: 359:         guardarposiciones(datEEPROM,addEEPROM);
  1109  02DB  0821               	movf	_addEEPROM,w
  1110  02DC  00F5               	movwf	??_guardarservos
  1111  02DD  0875               	movf	??_guardarservos,w
  1112  02DE  00F3               	movwf	guardarposiciones@direccion
  1113  02DF  0820               	movf	_datEEPROM,w
  1114  02E0  120A  118A  22F2  120A  118A  	fcall	_guardarposiciones
  1115  02E5                     l1661:
  1116                           
  1117                           ;mainP2.c: 360:     }
  1118  02E5  3001               	movlw	1
  1119  02E6  00F5               	movwf	??_guardarservos
  1120  02E7  0875               	movf	??_guardarservos,w
  1121  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  1122  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  1123  02EA  07A8               	addwf	guardarservos@n,f
  1124  02EB                     l1663:
  1125  02EB  3004               	movlw	4
  1126  02EC  0228               	subwf	guardarservos@n,w
  1127  02ED  1C03               	skipc
  1128  02EE  2AF0               	goto	u661
  1129  02EF  2AF1               	goto	u660
  1130  02F0                     u661:
  1131  02F0  2AAB               	goto	l1645
  1132  02F1                     u660:
  1133  02F1                     l196:
  1134  02F1  0008               	return
  1135  02F2                     __end_of_guardarservos:
  1136                           
  1137                           	psect	text4
  1138  02F2                     __ptext4:	
  1139 ;; *************** function _guardarposiciones *****************
  1140 ;; Defined at:
  1141 ;;		line 332 in file "mainP2.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;  guardar         1    wreg     unsigned char 
  1144 ;;  direccion       1    3[COMMON] unsigned char 
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;  guardar         1    4[COMMON] unsigned char 
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  1    wreg      void 
  1149 ;; Registers used:
  1150 ;;		wreg
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1156 ;;      Params:         1       0       0       0       0
  1157 ;;      Locals:         1       0       0       0       0
  1158 ;;      Temps:          0       0       0       0       0
  1159 ;;      Totals:         2       0       0       0       0
  1160 ;;Total ram usage:        2 bytes
  1161 ;; Hardware stack levels used:    1
  1162 ;; Hardware stack levels required when called:    1
  1163 ;; This function calls:
  1164 ;;		Nothing
  1165 ;; This function is called by:
  1166 ;;		_guardarservos
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           
  1171                           ;psect for function _guardarposiciones
  1172  02F2                     _guardarposiciones:
  1173                           
  1174                           ;incstack = 0
  1175                           ; Regs used in _guardarposiciones: [wreg]
  1176                           ;guardarposiciones@guardar stored from wreg
  1177  02F2  00F4               	movwf	guardarposiciones@guardar
  1178  02F3                     l1629:
  1179                           
  1180                           ;mainP2.c: 333:     EEADR = direccion;
  1181  02F3  0873               	movf	guardarposiciones@direccion,w
  1182  02F4  1283               	bcf	3,5	;RP0=0, select bank2
  1183  02F5  1703               	bsf	3,6	;RP1=1, select bank2
  1184  02F6  008D               	movwf	13	;volatile
  1185                           
  1186                           ;mainP2.c: 334:     EEDAT = guardar;
  1187  02F7  0874               	movf	guardarposiciones@guardar,w
  1188  02F8  008C               	movwf	12	;volatile
  1189  02F9                     l1631:
  1190                           
  1191                           ;mainP2.c: 335:     EECON1bits.WREN = 1;
  1192  02F9  1683               	bsf	3,5	;RP0=1, select bank3
  1193  02FA  1703               	bsf	3,6	;RP1=1, select bank3
  1194  02FB  150C               	bsf	12,2	;volsfr
  1195  02FC                     l1633:
  1196                           
  1197                           ;mainP2.c: 336:     INTCONbits.GIE = 0;
  1198  02FC  138B               	bcf	11,7	;volatile
  1199  02FD                     l179:	
  1200                           ;mainP2.c: 337:     while(INTCONbits.GIE){}
  1201                           
  1202  02FD  1B8B               	btfsc	11,7	;volatile
  1203  02FE  2B00               	goto	u641
  1204  02FF  2B01               	goto	u640
  1205  0300                     u641:
  1206  0300  2AFD               	goto	l179
  1207  0301                     u640:
  1208  0301                     l1635:
  1209                           
  1210                           ;mainP2.c: 338:     EECON2 = 0X55;
  1211  0301  3055               	movlw	85
  1212  0302  1683               	bsf	3,5	;RP0=1, select bank3
  1213  0303  1703               	bsf	3,6	;RP1=1, select bank3
  1214  0304  008D               	movwf	13	;volsfr
  1215                           
  1216                           ;mainP2.c: 339:     EECON2 = 0XAA;
  1217  0305  30AA               	movlw	170
  1218  0306  008D               	movwf	13	;volsfr
  1219  0307                     l1637:
  1220                           
  1221                           ;mainP2.c: 340:     EECON1bits.WR = 1;
  1222  0307  148C               	bsf	12,1	;volsfr
  1223  0308                     l182:	
  1224                           ;mainP2.c: 341:     while(EECON1bits.WR){}
  1225                           
  1226  0308  188C               	btfsc	12,1	;volsfr
  1227  0309  2B0B               	goto	u651
  1228  030A  2B0C               	goto	u650
  1229  030B                     u651:
  1230  030B  2B08               	goto	l182
  1231  030C                     u650:
  1232  030C                     l184:
  1233                           
  1234                           ;mainP2.c: 342:     INTCONbits.GIE = 1;
  1235  030C  178B               	bsf	11,7	;volatile
  1236                           
  1237                           ;mainP2.c: 343:     EECON1bits.WREN = 0;
  1238  030D  110C               	bcf	12,2	;volsfr
  1239  030E                     l185:
  1240  030E  0008               	return
  1241  030F                     __end_of_guardarposiciones:
  1242                           
  1243                           	psect	text5
  1244  0256                     __ptext5:	
  1245 ;; *************** function _configuraciones *****************
  1246 ;; Defined at:
  1247 ;;		line 178 in file "mainP2.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, status,2, status,0
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1261 ;;      Params:         0       0       0       0       0
  1262 ;;      Locals:         0       0       0       0       0
  1263 ;;      Temps:          0       0       0       0       0
  1264 ;;      Totals:         0       0       0       0       0
  1265 ;;Total ram usage:        0 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; Hardware stack levels required when called:    1
  1268 ;; This function calls:
  1269 ;;		Nothing
  1270 ;; This function is called by:
  1271 ;;		_main
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           
  1276                           ;psect for function _configuraciones
  1277  0256                     _configuraciones:
  1278  0256                     l1221:	
  1279                           ;incstack = 0
  1280                           ; Regs used in _configuraciones: [wreg+status,2+status,0]
  1281                           
  1282                           
  1283                           ;mainP2.c: 180:     ANSEL = 0X0F;
  1284  0256  300F               	movlw	15
  1285  0257  1683               	bsf	3,5	;RP0=1, select bank3
  1286  0258  1703               	bsf	3,6	;RP1=1, select bank3
  1287  0259  0088               	movwf	8	;volatile
  1288  025A                     l1223:
  1289                           
  1290                           ;mainP2.c: 181:     ANSELH = 0X00;
  1291  025A  0189               	clrf	9	;volatile
  1292  025B                     l1225:
  1293                           
  1294                           ;mainP2.c: 182:     TRISA = 0X0F;
  1295  025B  300F               	movlw	15
  1296  025C  1683               	bsf	3,5	;RP0=1, select bank1
  1297  025D  1303               	bcf	3,6	;RP1=0, select bank1
  1298  025E  0085               	movwf	5	;volatile
  1299  025F                     l1227:
  1300                           
  1301                           ;mainP2.c: 183:     TRISB = 0X07;
  1302  025F  3007               	movlw	7
  1303  0260  0086               	movwf	6	;volatile
  1304  0261                     l1229:
  1305                           
  1306                           ;mainP2.c: 184:     TRISC = 0X80;
  1307  0261  3080               	movlw	128
  1308  0262  0087               	movwf	7	;volatile
  1309                           
  1310                           ;mainP2.c: 185:     TRISD = 0X00;
  1311  0263  0188               	clrf	8	;volatile
  1312                           
  1313                           ;mainP2.c: 186:     TRISE = 0X00;
  1314  0264  0189               	clrf	9	;volatile
  1315                           
  1316                           ;mainP2.c: 187:     PORTA = 0X00;
  1317  0265  1283               	bcf	3,5	;RP0=0, select bank0
  1318  0266  1303               	bcf	3,6	;RP1=0, select bank0
  1319  0267  0185               	clrf	5	;volatile
  1320                           
  1321                           ;mainP2.c: 188:     PORTB = 0X00;
  1322  0268  0186               	clrf	6	;volatile
  1323                           
  1324                           ;mainP2.c: 189:     PORTC = 0X00;
  1325  0269  0187               	clrf	7	;volatile
  1326                           
  1327                           ;mainP2.c: 190:     PORTD = 0X00;
  1328  026A  0188               	clrf	8	;volatile
  1329                           
  1330                           ;mainP2.c: 191:     PORTE = 0X00;
  1331  026B  0189               	clrf	9	;volatile
  1332  026C                     l1231:
  1333                           
  1334                           ;mainP2.c: 194:     OSCCONbits.IRCF = 0b111;
  1335  026C  3070               	movlw	112
  1336  026D  1683               	bsf	3,5	;RP0=1, select bank1
  1337  026E  1303               	bcf	3,6	;RP1=0, select bank1
  1338  026F  048F               	iorwf	15,f	;volatile
  1339  0270                     l1233:
  1340                           
  1341                           ;mainP2.c: 195:     OSCCONbits.SCS = 0b1;
  1342  0270  140F               	bsf	15,0	;volatile
  1343  0271                     l1235:
  1344                           
  1345                           ;mainP2.c: 198:     INTCONbits.TMR0IF = 0;
  1346  0271  110B               	bcf	11,2	;volatile
  1347  0272                     l1237:
  1348                           
  1349                           ;mainP2.c: 199:     INTCONbits.TMR0IE = 1;
  1350  0272  168B               	bsf	11,5	;volatile
  1351  0273                     l1239:
  1352                           
  1353                           ;mainP2.c: 200:     INTCONbits.RBIF = 0;
  1354  0273  100B               	bcf	11,0	;volatile
  1355  0274                     l1241:
  1356                           
  1357                           ;mainP2.c: 201:     INTCONbits.RBIE = 0;
  1358  0274  118B               	bcf	11,3	;volatile
  1359  0275                     l1243:
  1360                           
  1361                           ;mainP2.c: 202:     INTCONbits.PEIE = 1;
  1362  0275  170B               	bsf	11,6	;volatile
  1363  0276                     l1245:
  1364                           
  1365                           ;mainP2.c: 203:     PIE1bits.RCIE = 1;
  1366  0276  168C               	bsf	12,5	;volatile
  1367  0277                     l1247:
  1368                           
  1369                           ;mainP2.c: 204:     INTCONbits.GIE = 1;
  1370  0277  178B               	bsf	11,7	;volatile
  1371  0278                     l1249:
  1372                           
  1373                           ;mainP2.c: 207:     IOCBbits.IOCB0 = 1;
  1374  0278  1416               	bsf	22,0	;volatile
  1375  0279                     l1251:
  1376                           
  1377                           ;mainP2.c: 208:     IOCBbits.IOCB1 = 1;
  1378  0279  1496               	bsf	22,1	;volatile
  1379  027A                     l1253:
  1380                           
  1381                           ;mainP2.c: 209:     IOCBbits.IOCB2 = 1;
  1382  027A  1516               	bsf	22,2	;volatile
  1383  027B                     l1255:
  1384                           
  1385                           ;mainP2.c: 212:     ADCON0bits.ADCS = 0b10;
  1386  027B  1283               	bcf	3,5	;RP0=0, select bank0
  1387  027C  1303               	bcf	3,6	;RP1=0, select bank0
  1388  027D  081F               	movf	31,w	;volatile
  1389  027E  393F               	andlw	-193
  1390  027F  3880               	iorlw	128
  1391  0280  009F               	movwf	31	;volatile
  1392  0281                     l1257:
  1393                           
  1394                           ;mainP2.c: 213:     ADCON0bits.CHS = 0b0000;
  1395  0281  30C3               	movlw	-61
  1396  0282  059F               	andwf	31,f	;volatile
  1397  0283                     l1259:
  1398                           
  1399                           ;mainP2.c: 214:     ADCON0bits.GO = 0b0;
  1400  0283  109F               	bcf	31,1	;volatile
  1401  0284                     l1261:
  1402                           
  1403                           ;mainP2.c: 215:     ADCON0bits.ADON = 0b1;
  1404  0284  141F               	bsf	31,0	;volatile
  1405  0285                     l1263:
  1406                           
  1407                           ;mainP2.c: 216:     ADCON1bits.ADFM = 0b0;
  1408  0285  1683               	bsf	3,5	;RP0=1, select bank1
  1409  0286  1303               	bcf	3,6	;RP1=0, select bank1
  1410  0287  139F               	bcf	31,7	;volatile
  1411  0288                     l1265:
  1412                           
  1413                           ;mainP2.c: 217:     ADCON1bits.VCFG1 = 0b0;
  1414  0288  129F               	bcf	31,5	;volatile
  1415  0289                     l1267:
  1416                           
  1417                           ;mainP2.c: 218:     ADCON1bits.VCFG0 = 0b0;
  1418  0289  121F               	bcf	31,4	;volatile
  1419  028A                     l1269:
  1420                           
  1421                           ;mainP2.c: 221:     SPBRG = 12;
  1422  028A  300C               	movlw	12
  1423  028B  0099               	movwf	25	;volatile
  1424  028C                     l1271:
  1425                           
  1426                           ;mainP2.c: 222:     TXSTAbits.BRGH = 0;
  1427  028C  1118               	bcf	24,2	;volatile
  1428  028D                     l1273:
  1429                           
  1430                           ;mainP2.c: 223:     TXSTAbits.TXEN = 1;
  1431  028D  1698               	bsf	24,5	;volatile
  1432  028E                     l1275:
  1433                           
  1434                           ;mainP2.c: 224:     RCSTAbits.CREN = 1;
  1435  028E  1283               	bcf	3,5	;RP0=0, select bank0
  1436  028F  1303               	bcf	3,6	;RP1=0, select bank0
  1437  0290  1618               	bsf	24,4	;volatile
  1438  0291                     l1277:
  1439                           
  1440                           ;mainP2.c: 225:     TXSTAbits.SYNC = 0;
  1441  0291  1683               	bsf	3,5	;RP0=1, select bank1
  1442  0292  1303               	bcf	3,6	;RP1=0, select bank1
  1443  0293  1218               	bcf	24,4	;volatile
  1444  0294                     l1279:
  1445                           
  1446                           ;mainP2.c: 226:     RCSTAbits.SPEN = 1;
  1447  0294  1283               	bcf	3,5	;RP0=0, select bank0
  1448  0295  1303               	bcf	3,6	;RP1=0, select bank0
  1449  0296  1798               	bsf	24,7	;volatile
  1450  0297                     l1281:
  1451                           
  1452                           ;mainP2.c: 229:     OSCCONbits.SCS = 1;
  1453  0297  1683               	bsf	3,5	;RP0=1, select bank1
  1454  0298  1303               	bcf	3,6	;RP1=0, select bank1
  1455  0299  140F               	bsf	15,0	;volatile
  1456  029A                     l1283:
  1457                           
  1458                           ;mainP2.c: 230:     OPTION_REGbits.T0CS = 0;
  1459  029A  1281               	bcf	1,5	;volatile
  1460  029B                     l1285:
  1461                           
  1462                           ;mainP2.c: 231:     OPTION_REGbits.PSA = 0;
  1463  029B  1181               	bcf	1,3	;volatile
  1464  029C                     l1287:
  1465                           
  1466                           ;mainP2.c: 232:     OPTION_REGbits.PS2 = 0;
  1467  029C  1101               	bcf	1,2	;volatile
  1468  029D                     l1289:
  1469                           
  1470                           ;mainP2.c: 233:     OPTION_REGbits.PS1 = 1;
  1471  029D  1481               	bsf	1,1	;volatile
  1472  029E                     l1291:
  1473                           
  1474                           ;mainP2.c: 234:     OPTION_REGbits.PS0 = 1;
  1475  029E  1401               	bsf	1,0	;volatile
  1476  029F                     l1293:
  1477                           
  1478                           ;mainP2.c: 235:     INTCONbits.T0IF = 0;
  1479  029F  110B               	bcf	11,2	;volatile
  1480  02A0                     l1295:
  1481                           
  1482                           ;mainP2.c: 236:     TMR0 = 131;
  1483  02A0  3083               	movlw	131
  1484  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  1485  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  1486  02A3  0081               	movwf	1	;volatile
  1487  02A4                     l1297:
  1488                           
  1489                           ;mainP2.c: 237:     SERVOS.bit1 = 0;
  1490  02A4  12F9               	bcf	_SERVOS,5
  1491  02A5                     l1299:
  1492                           
  1493                           ;mainP2.c: 238:     SERVOS.modo = 0;
  1494  02A5  1379               	bcf	_SERVOS,6
  1495  02A6                     l133:
  1496  02A6  0008               	return
  1497  02A7                     __end_of_configuraciones:
  1498                           
  1499                           	psect	text6
  1500  00E6                     __ptext6:	
  1501 ;; *************** function _AnalogReadServo *****************
  1502 ;; Defined at:
  1503 ;;		line 279 in file "mainP2.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1517 ;;      Params:         0       0       0       0       0
  1518 ;;      Locals:         0       0       0       0       0
  1519 ;;      Temps:          2       0       0       0       0
  1520 ;;      Totals:         2       0       0       0       0
  1521 ;;Total ram usage:        2 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:    1
  1524 ;; This function calls:
  1525 ;;		Nothing
  1526 ;; This function is called by:
  1527 ;;		_main
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           
  1532                           ;psect for function _AnalogReadServo
  1533  00E6                     _AnalogReadServo:
  1534  00E6                     l1301:	
  1535                           ;incstack = 0
  1536                           ; Regs used in _AnalogReadServo: [wreg-fsr0h+status,2+status,0]
  1537                           
  1538                           
  1539                           ;mainP2.c: 281:     if(!ADCON0bits.GO){
  1540  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1541  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1542  00E8  189F               	btfsc	31,1	;volatile
  1543  00E9  28EB               	goto	u351
  1544  00EA  28EC               	goto	u350
  1545  00EB                     u351:
  1546  00EB  2986               	goto	l170
  1547  00EC                     u350:
  1548  00EC  2963               	goto	l1347
  1549  00ED                     l1305:
  1550                           
  1551                           ;mainP2.c: 284:                  POT2 = ADRESH;
  1552  00ED  081E               	movf	30,w	;volatile
  1553  00EE  00F3               	movwf	??_AnalogReadServo
  1554  00EF  0873               	movf	??_AnalogReadServo,w
  1555  00F0  00F7               	movwf	_POT2
  1556                           
  1557                           ;mainP2.c: 285:             break;
  1558  00F1  2986               	goto	l170
  1559  00F2                     l1307:
  1560                           
  1561                           ;mainP2.c: 288:                 ADCON0bits.CHS = 2;
  1562  00F2  081F               	movf	31,w	;volatile
  1563  00F3  39C3               	andlw	-61
  1564  00F4  3808               	iorlw	8
  1565  00F5  009F               	movwf	31	;volatile
  1566  00F6                     l1309:
  1567                           
  1568                           ;mainP2.c: 289:                 if(POT2>190) POT2 = 190;
  1569  00F6  30BF               	movlw	191
  1570  00F7  0277               	subwf	_POT2,w
  1571  00F8  1C03               	skipc
  1572  00F9  28FB               	goto	u361
  1573  00FA  28FC               	goto	u360
  1574  00FB                     u361:
  1575  00FB  2900               	goto	l156
  1576  00FC                     u360:
  1577  00FC                     l1311:
  1578  00FC  30BE               	movlw	190
  1579  00FD  00F3               	movwf	??_AnalogReadServo
  1580  00FE  0873               	movf	??_AnalogReadServo,w
  1581  00FF  00F7               	movwf	_POT2
  1582  0100                     l156:
  1583                           
  1584                           ;mainP2.c: 290:                 if(POT2<10) POT2 = 10;
  1585  0100  300A               	movlw	10
  1586  0101  0277               	subwf	_POT2,w
  1587  0102  1803               	skipnc
  1588  0103  2905               	goto	u371
  1589  0104  2906               	goto	u370
  1590  0105                     u371:
  1591  0105  2986               	goto	l170
  1592  0106                     u370:
  1593  0106                     l1313:
  1594  0106  300A               	movlw	10
  1595  0107  00F3               	movwf	??_AnalogReadServo
  1596  0108  0873               	movf	??_AnalogReadServo,w
  1597  0109  00F7               	movwf	_POT2
  1598  010A  2986               	goto	l170
  1599  010B                     l1315:
  1600                           
  1601                           ;mainP2.c: 294:                 POT3 = ADRESH;
  1602  010B  081E               	movf	30,w	;volatile
  1603  010C  00F3               	movwf	??_AnalogReadServo
  1604  010D  0873               	movf	??_AnalogReadServo,w
  1605  010E  00A5               	movwf	_POT3
  1606                           
  1607                           ;mainP2.c: 295:             break;
  1608  010F  2986               	goto	l170
  1609  0110                     l1317:
  1610                           
  1611                           ;mainP2.c: 298:                 ADCON0bits.CHS = 3;
  1612  0110  081F               	movf	31,w	;volatile
  1613  0111  39C3               	andlw	-61
  1614  0112  380C               	iorlw	12
  1615  0113  009F               	movwf	31	;volatile
  1616  0114                     l1319:
  1617                           
  1618                           ;mainP2.c: 299:                 if(POT3>190) POT3 = 190;
  1619  0114  30BF               	movlw	191
  1620  0115  0225               	subwf	_POT3,w
  1621  0116  1C03               	skipc
  1622  0117  2919               	goto	u381
  1623  0118  291A               	goto	u380
  1624  0119                     u381:
  1625  0119  291E               	goto	l160
  1626  011A                     u380:
  1627  011A                     l1321:
  1628  011A  30BE               	movlw	190
  1629  011B  00F3               	movwf	??_AnalogReadServo
  1630  011C  0873               	movf	??_AnalogReadServo,w
  1631  011D  00A5               	movwf	_POT3
  1632  011E                     l160:
  1633                           
  1634                           ;mainP2.c: 300:                 if(POT3<10) POT3 = 10;
  1635  011E  300A               	movlw	10
  1636  011F  0225               	subwf	_POT3,w
  1637  0120  1803               	skipnc
  1638  0121  2923               	goto	u391
  1639  0122  2924               	goto	u390
  1640  0123                     u391:
  1641  0123  2986               	goto	l170
  1642  0124                     u390:
  1643  0124                     l1323:
  1644  0124  300A               	movlw	10
  1645  0125  00F3               	movwf	??_AnalogReadServo
  1646  0126  0873               	movf	??_AnalogReadServo,w
  1647  0127  00A5               	movwf	_POT3
  1648  0128  2986               	goto	l170
  1649  0129                     l1325:
  1650                           
  1651                           ;mainP2.c: 304:                 POT4 = ADRESH;
  1652  0129  081E               	movf	30,w	;volatile
  1653  012A  00F3               	movwf	??_AnalogReadServo
  1654  012B  0873               	movf	??_AnalogReadServo,w
  1655  012C  00A4               	movwf	_POT4
  1656                           
  1657                           ;mainP2.c: 305:             break;
  1658  012D  2986               	goto	l170
  1659  012E                     l1327:
  1660                           
  1661                           ;mainP2.c: 308:                 ADCON0bits.CHS = 0;
  1662  012E  30C3               	movlw	-61
  1663  012F  059F               	andwf	31,f	;volatile
  1664  0130                     l1329:
  1665                           
  1666                           ;mainP2.c: 309:                 if(POT4>190) POT4 = 190;
  1667  0130  30BF               	movlw	191
  1668  0131  0224               	subwf	_POT4,w
  1669  0132  1C03               	skipc
  1670  0133  2935               	goto	u401
  1671  0134  2936               	goto	u400
  1672  0135                     u401:
  1673  0135  293A               	goto	l164
  1674  0136                     u400:
  1675  0136                     l1331:
  1676  0136  30BE               	movlw	190
  1677  0137  00F3               	movwf	??_AnalogReadServo
  1678  0138  0873               	movf	??_AnalogReadServo,w
  1679  0139  00A4               	movwf	_POT4
  1680  013A                     l164:
  1681                           
  1682                           ;mainP2.c: 310:                 if(POT4<10) POT4 = 10;
  1683  013A  300A               	movlw	10
  1684  013B  0224               	subwf	_POT4,w
  1685  013C  1803               	skipnc
  1686  013D  293F               	goto	u411
  1687  013E  2940               	goto	u410
  1688  013F                     u411:
  1689  013F  2986               	goto	l170
  1690  0140                     u410:
  1691  0140                     l1333:
  1692  0140  300A               	movlw	10
  1693  0141  00F3               	movwf	??_AnalogReadServo
  1694  0142  0873               	movf	??_AnalogReadServo,w
  1695  0143  00A4               	movwf	_POT4
  1696  0144  2986               	goto	l170
  1697  0145                     l1335:
  1698                           
  1699                           ;mainP2.c: 314:                 POT1 = ADRESH;
  1700  0145  081E               	movf	30,w	;volatile
  1701  0146  00F3               	movwf	??_AnalogReadServo
  1702  0147  0873               	movf	??_AnalogReadServo,w
  1703  0148  00F8               	movwf	_POT1
  1704                           
  1705                           ;mainP2.c: 315:             break;
  1706  0149  2986               	goto	l170
  1707  014A                     l1337:
  1708                           
  1709                           ;mainP2.c: 318:                 ADCON0bits.CHS = 1;
  1710  014A  081F               	movf	31,w	;volatile
  1711  014B  39C3               	andlw	-61
  1712  014C  3804               	iorlw	4
  1713  014D  009F               	movwf	31	;volatile
  1714  014E                     l1339:
  1715                           
  1716                           ;mainP2.c: 319:                 if(POT1>190) POT1 = 190;
  1717  014E  30BF               	movlw	191
  1718  014F  0278               	subwf	_POT1,w
  1719  0150  1C03               	skipc
  1720  0151  2953               	goto	u421
  1721  0152  2954               	goto	u420
  1722  0153                     u421:
  1723  0153  2958               	goto	l168
  1724  0154                     u420:
  1725  0154                     l1341:
  1726  0154  30BE               	movlw	190
  1727  0155  00F3               	movwf	??_AnalogReadServo
  1728  0156  0873               	movf	??_AnalogReadServo,w
  1729  0157  00F8               	movwf	_POT1
  1730  0158                     l168:
  1731                           
  1732                           ;mainP2.c: 320:                 if(POT1<10) POT1 = 10;
  1733  0158  300A               	movlw	10
  1734  0159  0278               	subwf	_POT1,w
  1735  015A  1803               	skipnc
  1736  015B  295D               	goto	u431
  1737  015C  295E               	goto	u430
  1738  015D                     u431:
  1739  015D  2986               	goto	l170
  1740  015E                     u430:
  1741  015E                     l1343:
  1742  015E  300A               	movlw	10
  1743  015F  00F3               	movwf	??_AnalogReadServo
  1744  0160  0873               	movf	??_AnalogReadServo,w
  1745  0161  00F8               	movwf	_POT1
  1746  0162  2986               	goto	l170
  1747  0163                     l1347:
  1748  0163  0879               	movf	_SERVOS,w
  1749  0164  391F               	andlw	31
  1750  0165  00F3               	movwf	??_AnalogReadServo
  1751  0166  01F4               	clrf	??_AnalogReadServo+1
  1752                           
  1753                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1754                           ; Switch size 1, requested type "simple"
  1755                           ; Number of cases is 1, Range of values is 0 to 0
  1756                           ; switch strategies available:
  1757                           ; Name         Instructions Cycles
  1758                           ; simple_byte            4     3 (average)
  1759                           ; direct_byte           11     8 (fixed)
  1760                           ; jumptable            260     6 (fixed)
  1761                           ;	Chosen strategy is simple_byte
  1762  0167  0874               	movf	??_AnalogReadServo+1,w
  1763  0168  3A00               	xorlw	0	; case 0
  1764  0169  1903               	skipnz
  1765  016A  296C               	goto	l1823
  1766  016B  2986               	goto	l170
  1767  016C                     l1823:
  1768                           
  1769                           ; Switch size 1, requested type "simple"
  1770                           ; Number of cases is 8, Range of values is 0 to 10
  1771                           ; switch strategies available:
  1772                           ; Name         Instructions Cycles
  1773                           ; simple_byte           25    13 (average)
  1774                           ; direct_byte           41     8 (fixed)
  1775                           ; jumptable            260     6 (fixed)
  1776                           ;	Chosen strategy is simple_byte
  1777  016C  0873               	movf	??_AnalogReadServo,w
  1778  016D  3A00               	xorlw	0	; case 0
  1779  016E  1903               	skipnz
  1780  016F  28ED               	goto	l1305
  1781  0170  3A01               	xorlw	1	; case 1
  1782  0171  1903               	skipnz
  1783  0172  28F2               	goto	l1307
  1784  0173  3A02               	xorlw	2	; case 3
  1785  0174  1903               	skipnz
  1786  0175  290B               	goto	l1315
  1787  0176  3A07               	xorlw	7	; case 4
  1788  0177  1903               	skipnz
  1789  0178  2910               	goto	l1317
  1790  0179  3A02               	xorlw	2	; case 6
  1791  017A  1903               	skipnz
  1792  017B  2929               	goto	l1325
  1793  017C  3A01               	xorlw	1	; case 7
  1794  017D  1903               	skipnz
  1795  017E  292E               	goto	l1327
  1796  017F  3A0E               	xorlw	14	; case 9
  1797  0180  1903               	skipnz
  1798  0181  2945               	goto	l1335
  1799  0182  3A03               	xorlw	3	; case 10
  1800  0183  1903               	skipnz
  1801  0184  294A               	goto	l1337
  1802  0185  2986               	goto	l170
  1803  0186                     l170:
  1804  0186  0008               	return
  1805  0187                     __end_of_AnalogReadServo:
  1806                           
  1807                           	psect	text7
  1808  0187                     __ptext7:	
  1809 ;; *************** function _rutInter *****************
  1810 ;; Defined at:
  1811 ;;		line 81 in file "mainP2.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1825 ;;      Params:         0       0       0       0       0
  1826 ;;      Locals:         0       0       0       0       0
  1827 ;;      Temps:          3       0       0       0       0
  1828 ;;      Totals:         3       0       0       0       0
  1829 ;;Total ram usage:        3 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; This function calls:
  1832 ;;		Nothing
  1833 ;; This function is called by:
  1834 ;;		Interrupt level 1
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           
  1839                           ;psect for function _rutInter
  1840  0187                     _rutInter:
  1841  0187                     i1l1439:
  1842                           
  1843                           ;mainP2.c: 83:     if(INTCONbits.TMR0IF) {
  1844  0187  1D0B               	btfss	11,2	;volatile
  1845  0188  298A               	goto	u47_21
  1846  0189  298B               	goto	u47_20
  1847  018A                     u47_21:
  1848  018A  299D               	goto	i1l101
  1849  018B                     u47_20:
  1850  018B                     i1l1441:
  1851                           
  1852                           ;mainP2.c: 84:         SERVOS.bit0++;
  1853  018B  0879               	movf	_SERVOS,w
  1854  018C  391F               	andlw	31
  1855  018D  00F0               	movwf	??_rutInter
  1856  018E  0AF0               	incf	??_rutInter,f
  1857  018F  0879               	movf	_SERVOS,w
  1858  0190  0670               	xorwf	??_rutInter,w
  1859  0191  39E0               	andlw	-32
  1860  0192  0670               	xorwf	??_rutInter,w
  1861  0193  00F9               	movwf	_SERVOS
  1862  0194                     i1l1443:
  1863                           
  1864                           ;mainP2.c: 85:         SERVOS.bit1 = 1;
  1865  0194  16F9               	bsf	_SERVOS,5
  1866  0195                     i1l1445:
  1867                           
  1868                           ;mainP2.c: 86:         INTCONbits.TMR0IF = 0;
  1869  0195  110B               	bcf	11,2	;volatile
  1870  0196                     i1l1447:
  1871                           
  1872                           ;mainP2.c: 87:         if(SERVOS.modo) ADCON0bits.GO = 1;
  1873  0196  1F79               	btfss	_SERVOS,6
  1874  0197  2999               	goto	u48_21
  1875  0198  299A               	goto	u48_20
  1876  0199                     u48_21:
  1877  0199  299D               	goto	i1l101
  1878  019A                     u48_20:
  1879  019A                     i1l1449:
  1880  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1881  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1882  019C  149F               	bsf	31,1	;volatile
  1883  019D                     i1l101:	
  1884                           ;mainP2.c: 88:     }
  1885                           
  1886                           
  1887                           ;mainP2.c: 90:     if(INTCONbits.RBIF && PORTBbits.RB0){
  1888  019D  1C0B               	btfss	11,0	;volatile
  1889  019E  29A0               	goto	u49_21
  1890  019F  29A1               	goto	u49_20
  1891  01A0                     u49_21:
  1892  01A0  29B1               	goto	i1l1457
  1893  01A1                     u49_20:
  1894  01A1                     i1l1451:
  1895  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1896  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1897  01A3  1C06               	btfss	6,0	;volatile
  1898  01A4  29A6               	goto	u50_21
  1899  01A5  29A7               	goto	u50_20
  1900  01A6                     u50_21:
  1901  01A6  29B1               	goto	i1l1457
  1902  01A7                     u50_20:
  1903  01A7                     i1l1453:
  1904                           
  1905                           ;mainP2.c: 91:         SERVOS.modo = ~SERVOS.modo;
  1906  01A7  1003               	clrc
  1907  01A8  1F79               	btfss	_SERVOS,6
  1908  01A9  1403               	setc
  1909  01AA  1803               	btfsc	3,0
  1910  01AB  29AD               	goto	u51_21
  1911  01AC  29AF               	goto	u51_20
  1912  01AD                     u51_21:
  1913  01AD  1779               	bsf	_SERVOS,6
  1914  01AE  29B0               	goto	u52_24
  1915  01AF                     u51_20:
  1916  01AF  1379               	bcf	_SERVOS,6
  1917  01B0                     u52_24:
  1918  01B0                     i1l1455:
  1919                           
  1920                           ;mainP2.c: 92:         INTCONbits.RBIF = 0;
  1921  01B0  100B               	bcf	11,0	;volatile
  1922  01B1                     i1l1457:
  1923                           
  1924                           ;mainP2.c: 94:     if(INTCONbits.RBIF && PORTBbits.RB1){
  1925  01B1  1C0B               	btfss	11,0	;volatile
  1926  01B2  29B4               	goto	u53_21
  1927  01B3  29B5               	goto	u53_20
  1928  01B4                     u53_21:
  1929  01B4  29BD               	goto	i1l104
  1930  01B5                     u53_20:
  1931  01B5                     i1l1459:
  1932  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1933  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1934  01B7  1C86               	btfss	6,1	;volatile
  1935  01B8  29BA               	goto	u54_21
  1936  01B9  29BB               	goto	u54_20
  1937  01BA                     u54_21:
  1938  01BA  29BD               	goto	i1l104
  1939  01BB                     u54_20:
  1940  01BB                     i1l1461:
  1941                           
  1942                           ;mainP2.c: 95:         SERVOS.guardar = 1;
  1943  01BB  17F9               	bsf	_SERVOS,7
  1944                           
  1945                           ;mainP2.c: 96:         INTCONbits.RBIF = 0;
  1946  01BC  100B               	bcf	11,0	;volatile
  1947  01BD                     i1l104:	
  1948                           ;mainP2.c: 97:     }
  1949                           
  1950                           
  1951                           ;mainP2.c: 99:     if(INTCONbits.RBIF && PORTBbits.RB2){
  1952  01BD  1C0B               	btfss	11,0	;volatile
  1953  01BE  29C0               	goto	u55_21
  1954  01BF  29C1               	goto	u55_20
  1955  01C0                     u55_21:
  1956  01C0  29D3               	goto	i1l1473
  1957  01C1                     u55_20:
  1958  01C1                     i1l1463:
  1959  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1960  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1961  01C3  1D06               	btfss	6,2	;volatile
  1962  01C4  29C6               	goto	u56_21
  1963  01C5  29C7               	goto	u56_20
  1964  01C6                     u56_21:
  1965  01C6  29D3               	goto	i1l1473
  1966  01C7                     u56_20:
  1967  01C7                     i1l1465:
  1968                           
  1969                           ;mainP2.c: 100:         PORTE ++;
  1970  01C7  3001               	movlw	1
  1971  01C8  00F0               	movwf	??_rutInter
  1972  01C9  0870               	movf	??_rutInter,w
  1973  01CA  0789               	addwf	9,f	;volatile
  1974  01CB                     i1l1467:
  1975                           
  1976                           ;mainP2.c: 101:         if(PORTE>=4) PORTE = 0;
  1977  01CB  3004               	movlw	4
  1978  01CC  0209               	subwf	9,w	;volatile
  1979  01CD  1C03               	skipc
  1980  01CE  29D0               	goto	u57_21
  1981  01CF  29D1               	goto	u57_20
  1982  01D0                     u57_21:
  1983  01D0  29D2               	goto	i1l1471
  1984  01D1                     u57_20:
  1985  01D1                     i1l1469:
  1986  01D1  0189               	clrf	9	;volatile
  1987  01D2                     i1l1471:
  1988                           
  1989                           ;mainP2.c: 102:         INTCONbits.RBIF = 0;
  1990  01D2  100B               	bcf	11,0	;volatile
  1991  01D3                     i1l1473:
  1992                           
  1993                           ;mainP2.c: 105:     INTCONbits.RBIF = 0;
  1994  01D3  100B               	bcf	11,0	;volatile
  1995  01D4                     i1l1475:
  1996                           
  1997                           ;mainP2.c: 107:     if(PIR1bits.RCIF){
  1998  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  1999  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  2000  01D6  1E8C               	btfss	12,5	;volatile
  2001  01D7  29D9               	goto	u58_21
  2002  01D8  29DA               	goto	u58_20
  2003  01D9                     u58_21:
  2004  01D9  29EC               	goto	i1l108
  2005  01DA                     u58_20:
  2006  01DA                     i1l1477:
  2007                           
  2008                           ;mainP2.c: 108:         EXTREC = RCREG;
  2009  01DA  081A               	movf	26,w	;volatile
  2010  01DB  00F0               	movwf	??_rutInter
  2011  01DC  0870               	movf	??_rutInter,w
  2012  01DD  00A3               	movwf	_EXTREC
  2013  01DE                     i1l1479:
  2014                           
  2015                           ;mainP2.c: 109:         UART.indicador = ~UART.indicador;
  2016  01DE  1003               	clrc
  2017  01DF  1C26               	btfss	_UART,0
  2018  01E0  1403               	setc
  2019  01E1  1803               	btfsc	3,0
  2020  01E2  29E4               	goto	u59_21
  2021  01E3  29E8               	goto	u59_20
  2022  01E4                     u59_21:
  2023  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  2024  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  2025  01E6  1426               	bsf	_UART,0
  2026  01E7  29EB               	goto	u60_24
  2027  01E8                     u59_20:
  2028  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  2029  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  2030  01EA  1026               	bcf	_UART,0
  2031  01EB                     u60_24:
  2032  01EB                     i1l1481:
  2033                           
  2034                           ;mainP2.c: 110:         UART.datorecep = 1;
  2035  01EB  14A6               	bsf	_UART,1
  2036  01EC                     i1l108:
  2037  01EC  0872               	movf	??_rutInter+2,w
  2038  01ED  008A               	movwf	10
  2039  01EE  0E71               	swapf	??_rutInter+1,w
  2040  01EF  0083               	movwf	3
  2041  01F0  0EFE               	swapf	btemp,f
  2042  01F1  0E7E               	swapf	btemp,w
  2043  01F2  0009               	retfie
  2044  01F3                     __end_of_rutInter:
  2045  007E                     btemp	set	126	;btemp
  2046  007E                     wtemp0	set	126
  2047                           
  2048                           	psect	intentry
  2049  0004                     __pintentry:	
  2050                           ;incstack = 0
  2051                           ; Regs used in _rutInter: [wreg+status,2+status,0]
  2052                           
  2053  0004                     interrupt_function:
  2054  007E                     saved_w	set	btemp
  2055  0004  00FE               	movwf	btemp
  2056  0005  0E03               	swapf	3,w
  2057  0006  00F1               	movwf	??_rutInter+1
  2058  0007  080A               	movf	10,w
  2059  0008  00F2               	movwf	??_rutInter+2
  2060  0009  120A  118A  2987   	ljmp	_rutInter
  2061                           
  2062                           	psect	config
  2063                           
  2064                           ;Config register CONFIG1 @ 0x2007
  2065                           ;	Oscillator Selection bits
  2066                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2067                           ;	Watchdog Timer Enable bit
  2068                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2069                           ;	Power-up Timer Enable bit
  2070                           ;	PWRTE = OFF, PWRT disabled
  2071                           ;	RE3/MCLR pin function select bit
  2072                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2073                           ;	Code Protection bit
  2074                           ;	CP = OFF, Program memory code protection is disabled
  2075                           ;	Data Code Protection bit
  2076                           ;	CPD = OFF, Data memory code protection is disabled
  2077                           ;	Brown Out Reset Selection bits
  2078                           ;	BOREN = OFF, BOR disabled
  2079                           ;	Internal External Switchover bit
  2080                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2081                           ;	Fail-Safe Clock Monitor Enabled bit
  2082                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2083                           ;	Low Voltage Programming Enable bit
  2084                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2085                           ;	In-Circuit Debugger Mode bit
  2086                           ;	DEBUG = 0x1, unprogrammed default
  2087  2007                     	org	8199
  2088  2007  20F4               	dw	8436
  2089                           
  2090                           ;Config register CONFIG2 @ 0x2008
  2091                           ;	Brown-out Reset Selection bit
  2092                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2093                           ;	Flash Program Memory Self Write Enable bits
  2094                           ;	WRT = OFF, Write protection off
  2095  2008                     	org	8200
  2096  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      4      11
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_guardarservos
    _guardarservos->_guardarposiciones

Critical Paths under _rutInter in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_guardarservos

Critical Paths under _rutInter in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rutInter in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutInter in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutInter in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     335
                                              2 BANK0      2     2      0
                    _AnalogReadServo
                    _configuraciones
                      _guardarservos
                     _leerposiciones
                             _servos
 ---------------------------------------------------------------------------------
 (1) _servos                                               2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _leerposiciones                                       1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _guardarservos                                        4     4      0     313
                                              5 COMMON     2     2      0
                                              0 BANK0      2     2      0
                  _guardarposiciones
 ---------------------------------------------------------------------------------
 (2) _guardarposiciones                                    2     1      1     152
                                              3 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _configuraciones                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AnalogReadServo                                      2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _rutInter                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AnalogReadServo
   _configuraciones
   _guardarservos
     _guardarposiciones
   _leerposiciones
   _servos

 _rutInter (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      15       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       B       5       13.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      15      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue May 11 18:29:57 2021

                       l114 006A                         l133 02A6                         l126 00DC  
                       l118 0068                         l160 011E                         l170 0186  
                       l164 013A                         l156 0100                         l148 0255  
                       l182 0308                         l168 0158                         l184 030C  
                       l185 030E                         l179 02FD                         l196 02F1  
                       l199 031B                         u400 0136                         u401 0135  
                       u410 0140                         u411 013F                         u420 0154  
                       u421 0153                         u430 015E                         u350 00EC  
                       u431 015D                         u351 00EB                         u360 00FC  
                       u361 00FB                         u370 0106                         u450 01F7  
                       u371 0105                         u451 01F6                         u380 011A  
                       u460 01FE                         u381 0119                         u461 01FD  
                       u390 0124                         u391 0123                         u640 0301  
                       u641 0300                         u650 030C                         u651 030B  
                       u660 02F1                         u661 02F0                         u670 0028  
                       u671 0027                         u680 0035                         u681 0034  
                       u690 0071                         u691 0070                        l1301 00E6  
                      l1221 0256                        l1311 00FC                        l1231 026C  
                      l1223 025A                        l1321 011A                        l1313 0106  
                      l1305 00ED                        l1241 0274                        l1233 0270  
                      l1225 025B                        l1401 0206                        l1331 0136  
                      l1323 0124                        l1315 010B                        l1307 00F2  
                      l1251 0279                        l1243 0275                        l1235 0271  
                      l1227 025F                        l1411 0214                        l1403 0208  
                      l1341 0154                        l1333 0140                        l1325 0129  
                      l1317 0110                        l1309 00F6                        l1261 0284  
                      l1253 027A                        l1245 0276                        l1237 0272  
                      l1229 0261                        l1421 0224                        l1413 0218  
                      l1405 020C                        l1343 015E                        l1335 0145  
                      l1327 012E                        l1319 0114                        l1271 028C  
                      l1263 0285                        l1255 027B                        l1247 0277  
                      l1239 0273                        l1423 0226                        l1415 021A  
                      l1407 020E                        l1337 014A                        l1329 0130  
                      l1281 0297                        l1273 028D                        l1265 0288  
                      l1257 0281                        l1249 0278                        l1425 022A  
                      l1417 021E                        l1409 0212                        l1433 0232  
                      l1339 014E                        l1347 0163                        l1291 029E  
                      l1283 029A                        l1275 028E                        l1267 0289  
                      l1259 0283                        l1427 022C                        l1419 0220  
                      l1293 029F                        l1285 029B                        l1277 0291  
                      l1269 028A                        l1429 0230                        l1295 02A0  
                      l1287 029C                        l1279 0294                        l1631 02F9  
                      l1383 0310                        l1391 01F3                        l1703 00CC  
                      l1297 02A4                        l1289 029D                        l1633 02FC  
                      l1385 0314                        l1393 01F7                        l1705 00DD  
                      l1299 02A5                        l1635 0301                        l1651 02BB  
                      l1387 0317                        l1395 01FE                        l1637 0307  
                      l1629 02F3                        l1661 02E5                        l1821 02CD  
                      l1653 02C0                        l1645 02AB                        l1397 0200  
                      l1823 016C                        l1663 02EB                        l1647 02B1  
                      l1639 02AA                        l1399 0202                        l1815 005A  
                      l1671 0024                        l1649 02B6                        l1657 02C5  
                      l1817 00D4                        l1673 0028                        l1659 02DB  
                      l1819 023B                        l1683 0036                        l1675 002D  
                      l1685 003D                        l1693 0052                        l1677 0030  
                      l1669 001F                        l1687 0044                        l1679 0031  
                      l1697 0072                        l1689 004B                        l1699 009F  
                      _POT1 0078                        _POT2 0077                        _POT3 0025  
                      _POT4 0024                        _UART 0026                        _TMR0 0001  
                      _main 001F                        btemp 007E            ?_configuraciones 0070  
                      start 000C                       ?_main 0070                       _EEADR 010D  
                     _EEDAT 010C                       _ANSEL 0188                       i1l101 019D  
                     i1l104 01BD                       i1l108 01EC                       _RCREG 001A  
                     u50_20 01A7                       u50_21 01A6                       _SPBRG 0099  
                     u51_20 01AF                       u51_21 01AD                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       u60_24 01EB                       u52_24 01B0  
                     u53_20 01B5                       u53_21 01B4                       u54_20 01BB  
                     u54_21 01BA                       u55_20 01C1                       u47_20 018B  
                     u55_21 01C0                       u47_21 018A                       u56_20 01C7  
                     u48_20 019A                       u56_21 01C6                       u48_21 0199  
                     u57_20 01D1                       u49_20 01A1                       u57_21 01D0  
                     u49_21 01A0                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     u58_20 01DA                       u58_21 01D9                       u59_20 01E8  
                     u59_21 01E4                       _TXREG 0019                       pclath 000A  
                     status 0003                       wtemp0 007E             __initialization 000F  
              __end_of_main 00E6                      ??_main 0029                      _ADRESH 001E  
                    _EECON2 018D      __size_of_guardarservos 004B                      _ANSELH 0189  
                    i1l1441 018B                      i1l1451 01A1                      i1l1443 0194  
                    i1l1461 01BB                      i1l1453 01A7                      i1l1445 0195  
                    i1l1471 01D2                      i1l1463 01C1                      i1l1455 01B0  
                    i1l1447 0196                      i1l1439 0187                      i1l1481 01EB  
                    i1l1465 01C7                      i1l1473 01D3                      i1l1457 01B1  
                    i1l1449 019A                      i1l1475 01D4                      i1l1467 01CB  
                    i1l1459 01B5                      i1l1477 01DA                      i1l1469 01D1  
                    i1l1479 01DE                      _EXTREC 0023                      _SERVOS 0079  
                    _servos 01F3     __size_of_leerposiciones 000D                      saved_w 007E  
          __end_of_rutInter 01F3  guardarposiciones@direccion 0073     __end_of__initialization 001B  
            __pcstackCOMMON 0070               _guardarservos 02A7              _OPTION_REGbits 0081  
  __size_of_AnalogReadServo 00A1                  __pbssBANK0 0020                  __pmaintext 001F  
            ?_guardarservos 0070                  __pintentry 0004                     ?_servos 0070  
         _guardarposiciones 02F2          ?_guardarposiciones 0073         ??_guardarposiciones 0074  
  __size_of_configuraciones 0051                   ?_rutInter 0070                     __ptext1 01F3  
                   __ptext2 030F                     __ptext3 02A7                     __ptext4 02F2  
                   __ptext5 0256                     __ptext6 00E6                     __ptext7 0187  
           __size_of_servos 0063              _leerposiciones 030F   __end_of_guardarposiciones 030F  
      end_of_initialization 001B           ??_AnalogReadServo 0073             ??_guardarservos 0075  
                 _RCSTAbits 0018                   _SERVINDIC 0022                  ??_rutInter 0070  
    __end_of_leerposiciones 031C                   _PORTBbits 0006                   _PORTDbits 0008  
                 _TXSTAbits 0098             ?_leerposiciones 0070              __end_of_servos 0256  
         ??_configuraciones 0073         start_initialization 000F  __size_of_guardarposiciones 001D  
      guardarservos@desfase 0027                   _addEEPROM 0021                    ??_servos 0073  
               __pbssCOMMON 0077                   ___latbits 0002                   _datEEPROM 0020  
             __pcstackBANK0 0027              guardarservos@n 0028           __size_of_rutInter 006C  
           _AnalogReadServo 00E6           interrupt_function 0004                    _IOCBbits 0096  
                  _PIE1bits 008C                    _PIR1bits 000C                  _ADCON0bits 001F  
                _ADCON1bits 009F     leerposiciones@direccion 0073                  _EECON1bits 018C  
          ??_leerposiciones 0073       __end_of_guardarservos 02F2             _configuraciones 0256  
   __end_of_AnalogReadServo 0187               __size_of_main 00C7    guardarposiciones@guardar 0074  
                  _rutInter 0187                  _INTCONbits 000B                    intlevel1 0000  
   __end_of_configuraciones 02A7                  _OSCCONbits 008F            ?_AnalogReadServo 0070  
